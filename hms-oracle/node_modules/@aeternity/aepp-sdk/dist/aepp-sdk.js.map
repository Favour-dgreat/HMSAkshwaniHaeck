{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/external {\"commonjs\":\"uuid\",\"commonjs2\":\"uuid\"}","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/always.js","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/external {\"commonjs\":\"ed2curve\",\"commonjs2\":\"ed2curve\"}","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/lt.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/cond.js","webpack://Ae/./node_modules/ramda/src/lte.js","webpack://Ae/./node_modules/ramda/src/T.js","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/external {\"commonjs\":\"@aeternity/json-bigint\",\"commonjs2\":\"@aeternity/json-bigint\"}","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/external \"events\"","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/max.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/paths.js","webpack://Ae/./node_modules/ramda/src/internal/_isInteger.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_clone.js","webpack://Ae/./node_modules/ramda/src/internal/_cloneRegExp.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://Ae/external {\"commonjs\":\"libsodium-wrappers-sumo\",\"commonjs2\":\"libsodium-wrappers-sumo\"}","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./es/utils/bignumber.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./es/utils/keystore.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/node.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/utils/other.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx-object.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/utils/aepp-wallet-communication/schema.js","webpack://Ae/./es/utils/aepp-wallet-communication/helpers.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/rpc-clients.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/aepp-rpc.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/wallet-rpc.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js"],"names":["root","factory","exports","module","require","define","amd","undefined","global","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__12__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__33__","__WEBPACK_EXTERNAL_MODULE__39__","__WEBPACK_EXTERNAL_MODULE__54__","__WEBPACK_EXTERNAL_MODULE__55__","__WEBPACK_EXTERNAL_MODULE__65__","__WEBPACK_EXTERNAL_MODULE__82__","__WEBPACK_EXTERNAL_MODULE__83__","__WEBPACK_EXTERNAL_MODULE__84__","__WEBPACK_EXTERNAL_MODULE__94__","__WEBPACK_EXTERNAL_MODULE__102__","__WEBPACK_EXTERNAL_MODULE__104__","__WEBPACK_EXTERNAL_MODULE__146__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","_objectAssign","merge","_curry2","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","arrayWithoutHoles","iterableToArray","nonIterableSpread","head","nth","_typeof","iterator","constructor","_curry1","_isPlaceholder","f2","a","b","length","_b","_a","f1","paths","path","pathAr","_has","_isArguments","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","prop","nIdx","ks","checkArgsLength","fromPairs","pairs","result","last","_includes","type","val","slice","_toString","map","pluck","_isArray","_isTransformer","methodNames","xf","Array","pop","transducer","init","pick","names","join","invoker","isNil","x","_isArrayLike","_xwrap","_iterableReduce","acc","iter","step","next","_methodReduce","methodName","symIterator","len","_arrayReduce","reduce","TypeError","f3","_c","_complement","filter","pred","filterable","always","_reduce","mapObjIndexed","_arity","_curryN","curryN","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_indexOf","flatten","_makeFlat","zipObj","values","Math","min","out","arrayLikeToArray","minLen","from","test","_isFunction","arity","method","target","received","combined","argsIdx","left","combinedIdx","isArray","_isString","offset","charAt","_curry3","flip","curry","toUpper","lt","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","k","lVal","rVal","_checkForMethod","groupBy","reduceBy","push","identity","indexBy","elem","props","vals","defaultTo","v","arr2","is","functor","nodeType","_dispatchable","_map","_xmap","assign","output","source","nextKey","methodname","_clone","valueFn","valueAcc","keyFn","elt","fromIndex","toIndex","toLower","max","cond","pair","lte","without","xs","_includesWith","uniqWith","_objectIs","identical","_Set","difference","first","second","firstLen","secondLen","toFilterOut","add","mergeAll","concat","assoc","hasPath","has","_xdrop","drop","Infinity","_dropLast","dropLast","find","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arr","_n","_d","_e","_s","_i","_quote","_toISOString","seen","recur","y","mapPairs","sort","valueOf","NaN","repr","equals","inf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","message","ignoreCase","multiline","sticky","unicode","size","entries","keysA","extendedStackA","extendedStackB","f","match","String","replace","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_filter","_isObject","_xfilter","XWrap","thisObj","_xfBase","XFilter","input","XMap","recursive","flatt","jlen","j","ilen","_isInteger","pathsArray","Number","isInteger","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","mergeWithKey","_cloneRegExp","refFrom","refTo","deep","copy","copiedValue","pattern","RegExp","XReduceBy","inputs","_xreduceBy","_path","XDrop","take","_xtake","_reduced","XTake","ret","XDropLast","pos","full","store","_xdropLast","XFind","found","_xfind","sourceKeys","snakeToPascal","pascalToSnake","isHex","str","isAeAddress","split","isAddressValid","isBase64","index","leftPad","inputBuffer","fill","fillArray","Uint8Array","Buffer","rightPad","bigNumberToByteArray","hexString","toBytes","big","BigNumber","isBigNumber","str2buf","enc","VSN","VSN_2","TX_TTL","QUERY_FEE","ORACLE_TTL","QUERY_TTL","RESPONSE_TTL","DEPOSIT","AMOUNT","GAS","MIN_GAS_PRICE","MAX_AUTH_FUN_GAS","DRY_RUN_ACCOUNT","pub","amount","AENS_NAME_DOMAINS","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","NAME_FEE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_BID_MAX_LENGTH","NAME_ID_KEY","ak","ok","ct","ch","NAME_BID_RANGES","31","times","30","29","28","27","26","25","24","23","22","21","20","19","18","17","16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1","NAME_BID_TIMEOUTS","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channelForceProgress","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","channelReconnect","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","NO_VM","SOPHIA","SOLIDITY","SOPHIA_IMPROVEMENTS_MINERVA","SOPHIA_IMPROVEMENTS_FORTUNA","FATE","SOPHIA_IMPROVEMENTS_LIMA","ABI_VERSIONS","NO_ABI","VM_TYPE","AEVM","FATE_ABI","VM_ABI_MAP_ROMA","vmVersion","abiVersion","VM_ABI_MAP_MINERVA","VM_ABI_MAP_FORTUNA","VM_ABI_MAP_LIMA","PROTOCOL_VM_ABI","OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","any","stateTree","BASE_GAS","GAS_PER_BYTE","DEFAULT_FEE","KEY_BLOCK_INTERVAL","TX_FEE_BASE_GAS","txType","backend","TX_FEE_OTHER_GAS","txSize","relativeTtl","plus","ceil","floor","ID_TAG","commitment","oracle","PREFIX_ID_TAG","nm","cm","ID_TAG_PREFIX","VALIDATION_MESSAGE","isMinusValue","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_LIMA","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_CLAIM_TX_2","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_FORCE_PROGRESS_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_RECONNECT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","TX_DESERIALIZATION_SCHEMA","ERROR_TYPE","VERIFICATION_FIELD","msg","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","insufficientBalanceForFeeNameFee","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","consensusProtocolVersion","JSON","stringify","NAME_CLAIM_VERIFICATION_SCHEMA","balance","BASE_VERIFICATION_SCHEMA","minFee","height","accountNonce","parseBigNumber","number","asBigNumber","bigNumber","integerValue","ROUND_CEIL","createSalt","salt","base64Types","buildContractId","ownerId","nonce","encode","hash","decode","buildHash","data","options","raw","oracleQueryId","senderId","oracleId","nonceBE","alloc","formatSalt","padStart","nameHash","buf","allocUnsafe","labels","produceNameId","toLowerCase","commitmentHash","namespace","encodeBase58Check","includes","decodeBase64Check","assertedType","decodeBase58Check","encodeBase64Check","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","readPointers","isNameValid","throwError","classify","klass","substr","validatePointers","getMinimumNameFee","domain","nameLength","computeBidFee","startFee","increment","computeAuctionEndBlock","claimHeight","getContractBackendFromTx","parseInt","isAuctionName","Ecb","aesjs","ModeOfOperation","ecb","ADDRESS_FORMAT","sophia","api","formatAddress","format","address","decodeNode","getAddressFromPriv","secret","nacl","sign","keyPair","fromSecretKey","publicBuffer","publicKey","isValid","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","blake2b","sha256hash","shajs","update","digest","random","MAX_SAFE_INTEGER","buffer","checksum","checkSumFn","newChecksum","decodeRaw","bs58check","hexStringToByte","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","generateKeyPairFromSecret","generateKeyPair","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","encryptPrivateKey","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","WALLET_PRIV","WALLET_PUB","encryptData","ephemeralKeyPair","box","pubKeyUInt8Array","randomBytes","nonceLength","encryptedMessage","ed2curve","convertPublicKey","ciphertext","ephemPubKey","version","decryptData","encryptedData","receiverSecretKeyUint8Array","convertSecretKey","decrypted","open","rlp","_sodium","DEFAULTS","crypto","secret_type","symmetric_alg","kdf","kdf_params","memlimit_kib","opslimit","parallelism","DERIVED_KEY_FUNCTIONS","argon2id","deriveKeyUsingArgon2id","memoryCost","timeCost","ready","sodium","crypto_pwhash","crypto_pwhash_ALG_ARGON2ID13","CRYPTO_FUNCTIONS","plaintext","secretbox","res","algo","deriveKey","marshal","derivedKey","opt","public_key","uuid","cipher_params","recover","keyObject","validateKeyObj","kdfParams","dump","missingRootKeys","missingCryptoKeys","AE_AMOUNT_FORMATS","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","DENOMINATION_MAGNITUDE","toAe","denomination","formatAmount","targetDenomination","toAettos","shiftedBy","prefixes","magnitude","getNearestPrefix","exponent","abs","getLowerBoundPrefix","precision","deserialize","rootHash","nodes","node","serialize","tree","mptHash","ORACLE_TTL_TYPES","serializeField","mpt","transformParams","params","schemaKeys","getOracleRelativeTtl","ttlKey","calculateMinFee","gas","vsn","multiplier","actualFee","buildFee","fee","expected","buildTx","rlpEncoded","calculateFee","showWarning","console","warn","validateParams","excludeKeys","assert","valid","gte","validateField","buildRawTx","filteredSchema","fieldType","unpackRawTx","vm","abi","unpackTx","funHash","fnName","argType","outType","deserializeField","getSchema","objId","isDeserialize","firstKey","tx","txObject","fromRlpBinary","buildTxHash","rawTx","SOPHIA_TYPES","ChainTtl","decodeEvents","events","topics","eName","eParams","hexHash","decoded","el","types","transformEvent","event","tail","injectVars","aciType","typedef","baseType","generic","varianValue","variant","vars","linkTypeDefs","bindings","typeDef","contractTypeDefs","type_defs","isTypedDefOrState","isRemoteAddress","readType","transform","tuple","option","bytes","transformMap","transformVariant","variantArgs","Map","transformDecodedData","aci","skipTransformDecoded","addressPrefix","keyT","valueT","variantType","genericMap","prepareSchema","Joi","getJoiErrorMsg","alternatives","g","array","or","regex","items","ordered","required","label","JoiBinary","bufferCheck","optional","errors","extend","joi","base","pre","convert","rules","validate","isBuffer","createError","validateArguments","validationSchema","sparse","abortEarly","getFunctionACI","external","functions","buildContractMethods","instance","aciArgs","stateful","parseArguments","deploy","callStatic","send","externalAci","unpackByteCode","bytecode","prepareArgsForEncode","all","fnACI","unpackEvents","decodeCallResult","returns","log","decodedResult","decodedEvents","ED25519_CURVE","toHex","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","deriveChild","derivePathFromSeed","seed","masterKey","getMasterKeyFromSeed","formatAccount","getKeyPair","fromSeed","I","hmac","chainCode","indexBuffer","getHdWalletAccountFromMnemonic","mnemonic","accountIdx","walletKey","mnemonicToSeed","getSaveHDWalletAccounts","saveHDWallet","accountCount","_","generateSaveHDWallet","validateMnemonic","generateMnemonic","genMnemonic","Tx","stampit","deepConf","Ae","methods","spendTx","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","contractCreateTx","contractCallTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","gaAttachTx","getVmVersion","prepareTxParams","OracleBase","Contract","getOracle","getOracleQueries","getOracleQuery","Chain","Oracle","compose","deepProps","defaults","waitMined","statics","sendTransaction","awaitHeight","topBlock","poll","getBalance","getTxInfo","mempool","txDryRun","getAccount","asyncInit","stamp","deepConfiguration","AsyncInit","initializers","composers","composables","jsonBig","JsonBig","storeAsString","convertValuesToBigNumbers","bn","toJSON","parse","expandPath","replacements","lookupType","spec","conformTypes","integer","properties","pascalizeKeys","missing","extendingErrorPath","conform","$ref","allOf","conformDispatch","httpConfig","headers","transformResponse","transformRequest","httpClients","config","url","axios","post","classifyParameters","parameters","req","opts","query","body","pathArgs","queryArgs","bodyArgs","pascalizeParameters","traverseKeys","snakizeKeys","operationSignature","assertOne","coll","destructureClientError","response","status","statusText","reason","toUpperCase","resolveRef","ref","swag","Swagger","axiosConfig","definition","errorHandler","operationId","description","param","pascalized","optNames","indexedParameters","client","debug","conformed","definitions","expandedPath","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","geVersion","ltVersion","versionComponents","geComponents","ltComponents","toNumber","components","pow","vNumber","geNumber","ltNumber","remoteSwag","getNetworkId","networkId","selectedNode","loader","internalUrl","tags","protocols","getCurrentKeyBlock","effectiveAtHeight","Node","handler","getNodeInfo","nodeNetworkId","getConsensusProtocolVersion","forceCompatibility","getStatus","revision","nodeRevision","genesisHash","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","signHash","rlpBinaryTx","txWithNetworkId","returnHex","sig","Account","signTransaction","signMessage","verifyMessage","gaId","contractId","authFun","signUsingGA","authData","createMetaTx","recipientIdOrName","resolveName","recipientId","fraction","desiredAmount","ROUND_HALF_UP","TxBuilder","gt","minus","transferFunds","destroyInstance","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prepareNodeObject","NodePool","pool","validateNodes","addNode","selectNode","propertyDescriptors","currentNode","getterForCurrentNode","nodeInstance","select","isNodeConnected","getNodesInPool","nodeProps","ownerPublicKey","txHashWithNetworkId","decodedPub","ttl","gasPrice","supportedProtocol","txProtocol","nameFee","resolveDataForBase","chain","accountBalance","getAccountByPubkey","getCurrentKeyBlockHeight","verifySchema","validatorKey","unpackedTx","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","pause","duration","setTimeout","verifyTxBeforeSend","code","errorData","postTransaction","confirm","waitForTxConfirm","confirmationHeight","blockHeight","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getTransactionByHash","interval","attempts","currentHeight","getTopBlock","th","blocks","allowUnsynced","getTransactionInfoByHash","callInfo","getPendingTransactions","getCurrentGeneration","hashOrHeight","getGenerationByHash","getGenerationByHeight","getMicroBlockTransactionsByHash","transactions","getKeyBlockByHash","getKeyBlockByHeight","getMicroBlockHeaderByHash","txs","accounts","top","dryRunTxs","getContractCode","getContract","getNameEntryByName","nameOrId","resolveByNode","getName","pointer","ChainNode","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getKeyBlock","getContractByteCode","buildTransaction","unpackTransaction","initTransaction","TxObject","isSigned","fromRlp","setProp","getSignatures","addSignature","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","nameId","postNameTransfer","nameTtl","clientTtl","postNameUpdate","postNameRevoke","deposit","callData","postContractCreate","callerId","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","postOracleRegister","postOracleExtend","responseTtl","queryTtl","postOracleQuery","postOracleRespond","channelId","fromId","poi","postChannelCloseSolo","postChannelSlash","initiatorAmountFinal","responderAmountFinal","postChannelSettle","postChannelSnapshotSolo","calculateTtl","relative","absoluteTtl","Transaction","protocolForTX","secrets","WeakMap","isGa","Crypto","MemoryAccount","pubBuffer","validateKeyPair","setSecret","isMemoryAccount","onAccount","signWith","Selector","resolveOnAccount","memoryAccount","selectAccount","Accounts","process","addAccount","removeAccount","addresses","extendPointers","freeze","aensUpdate","aensQuery","transfer","aensTransfer","revoke","aensRevoke","extendTtl","minNameFee","claimTx","nameInter","_salt","preclaimTx","claim","aensClaim","Aens","aensPreclaim","aensBid","processResponse","baseUrl","put","Http","changeBaseUrl","newUrl","delete","ContractBase","contractEncodeCallDataAPI","contractDecodeDataAPI","compileContractAPI","contractGetACI","setCompilerUrl","getCompilerVersion","contractDecodeCallResultAPI","validateByteCodeAPI","getFateAssembler","getBytecodeCompilerVersion","http","isInit","function","prepareCompilerOption","calldata","compilerOptions","callValue","callResult","compilerVersion","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","ContractCompilerAPI","compilerUrl","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","filesystem","file_system","contractAddress","forceCodeCheck","defaultOptions","skipArgsConvert","interface","external_encoded_aci","compiled","deployInfo","setOptions","active","onChanByteCode","compile","eventDecode","payable","prepareArgs","contractCallStatic","contractDeploy","transaction","createdAt","contractCompile","ContractACI","getContractInstance","sendAndProcess","returnType","handleCallError","returnValue","decodedError","dryRunAccount","contractEncodeCall","dryRunContractTx","dryRunAmount","pubKey","results","callObj","dryRunParams","contractDecodeData","argsOrCallData","initState","encodeCall","deployStatic","delegateSignatureCommon","ContractAPI","delegateNamePreclaimSignature","delegateNameClaimSignature","delegateNameTransferSignature","delegateNameRevokeSignature","delegateOracleRegisterSignature","delegateOracleExtendSignature","delegateOracleRespondSignature","ContractWithCompiler","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","metaTxRlp","RpcClient","receive","callbacks","parent","window","sequence","postMessage","jsonrpc","session","addEventListener","destroyClient","removeEventListener","rpcMethods","asEnum","WALLET_TYPE","NOTIFICATIONS","REQUESTS","SUBSCRIPTION_TYPES","METHODS","wallet","readyToConnect","updateAddress","aepp","connect","subscribeAddress","updateNetwork","closeConnection","RPC_STATUS","getBrowserAPI","chrome","browser","getHandler","sendResponseMessage","sendMessage","responseMessage","voidFn","isValidAccounts","RpcClients","clients","hasClient","addClient","connectionData","getClient","removeClient","forceConnectionClose","disconnect","updateClientInfo","sendNotificationByCondition","condition","transformMessage","operationByCondition","icons","connection","handlers","onMessage","onDisconnect","actions","addressSubscription","messageId","isNotificationOrResponse","msgData","origin","currentAccount","isHasAccounts","current","connected","isSubscribed","hasAccessToAccount","isConnected","getCurrentAccount","setAccounts","forceNotification","updateSubscription","subscribe","unsubscribe","addAction","action","removeAction","accept","deny","request","msgId","transformResult","rpcClient","onAddressChange","onNetworkChange","disconnectWallet","RESPONSES","subscription","signedTransaction","transactionHash","handleMessage","AeppRpc","forceValidation","eventsHandlers","connectToWallet","walletBroadcast","connectionInfo","sendConnectRequest","sendDisconnect","askAddresses","returnSigned","queries","oracleQueries","pollQueries","pollForQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","q","decodedQuery","decodedResponse","respond","pollForResponse","pollForQueryResponse","responseBuffer","getOracleObject","registerOracle","onQuery","knownQueryIds","checkNewQueries","intervalId","setInterval","clearInterval","Aepp","Rpc","RpcAepp","rpcSessions","RpcServer","destroyServer","createSession","hello","rpcClients","callInstance","getWalletInfo","clientAccounts","getAccounts","onAcc","validationResult","errorObjectOrHandler","WalletRpc","onConnection","onSubscription","onSign","onAskAccounts","onMessageSign","_selectAccount","_addAccount","_selectNode","meta","getClients","removeRpcClient","addRpcClient","clientConnection","shareWalletInfo","postFn","location","extension","TxBase","deepProperties","Wallet","onTx","onChain","onContract","rpc","RpcWallet","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","fsmId","emit","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","enqueueAction","guard","locked","queue","dequeueMessage","remaining","ping","clearTimeout","callback","channel_id","details","wrapCallErrorMessage","close","initialize","channelOptions","existingFsmId","awaitingReconnection","awaitingConnection","EventEmitter","wsUrl","URL","searchParams","ws","W3CWebSocket","onerror","onopen","reconnectTx","channelOpen","signed_tx","onclose","onmessage","encodeRlpTx","appendSignature","signFn","signedTx","handleUnexpectedMessage","wsMessage","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","fsm_id","channelClosed","initiator","responder","role","awaitingOnChainTx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","updates","awaitingOffChainUpdate","accepted","errorCode","error_code","errorMessage","error_msg","awaitingUpdateConflict","to","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","round","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallContractForceProgressUpdate","awaitingForceProgressCompletion","awaitingCallsPruned","channels","closeTx","snakeToPascalObjKeys","contracts","call_data","contract_id","abi_version","caller","caller_id","pubkey","txParams","Channel","on","off","removeListener","channelStatus","channelState","channelFsmId","metadata","balances","leave","shutdown","recipient","doSend","onStatusChanged","withdraw","createContract","vm_version","callContract","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","forceProgress","gas_price","reconnect","Universal"],"mappings":"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","file":"aepp-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"@aeternity/json-bigint\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"@aeternity/json-bigint\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__12__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__33__, __WEBPACK_EXTERNAL_MODULE__39__, __WEBPACK_EXTERNAL_MODULE__54__, __WEBPACK_EXTERNAL_MODULE__55__, __WEBPACK_EXTERNAL_MODULE__65__, __WEBPACK_EXTERNAL_MODULE__82__, __WEBPACK_EXTERNAL_MODULE__83__, __WEBPACK_EXTERNAL_MODULE__84__, __WEBPACK_EXTERNAL_MODULE__94__, __WEBPACK_EXTERNAL_MODULE__102__, __WEBPACK_EXTERNAL_MODULE__104__, __WEBPACK_EXTERNAL_MODULE__146__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 147);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head =\n/*#__PURE__*/\nnth(0);\nmodule.exports = head;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","module.exports = __WEBPACK_EXTERNAL_MODULE__12__;","var _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar paths =\n/*#__PURE__*/\nrequire(\"./paths\");\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nmodule.exports = path;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\"); // cover IE < 9 keys issues\n\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nmodule.exports = keys;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = fromPairs;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nmodule.exports = last;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = _has;","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nmodule.exports = type;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _toString =\n/*#__PURE__*/\nrequire(\"./internal/_toString\");\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nmodule.exports = toString;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nmodule.exports = pluck;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nmodule.exports = isNil;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nmodule.exports = prop;","module.exports = __WEBPACK_EXTERNAL_MODULE__33__;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./_xwrap\");\n\nvar bind =\n/*#__PURE__*/\nrequire(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;","var _complement =\n/*#__PURE__*/\nrequire(\"./internal/_complement\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar filter =\n/*#__PURE__*/\nrequire(\"./filter\");\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nmodule.exports = reject;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nmodule.exports = always;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nmodule.exports = mapObjIndexed;","module.exports = __WEBPACK_EXTERNAL_MODULE__39__;","function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;","var _indexOf =\n/*#__PURE__*/\nrequire(\"./_indexOf\");\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\n\nmodule.exports = _includes;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _makeFlat =\n/*#__PURE__*/\nrequire(\"./internal/_makeFlat\");\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nmodule.exports = flatten;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = zipObj;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nmodule.exports = invoker;","var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nmodule.exports = nth;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = flip;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__54__;","module.exports = __WEBPACK_EXTERNAL_MODULE__55__;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nmodule.exports = lt;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nmodule.exports = toPairs;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepRight;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nmodule.exports = groupBy;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nmodule.exports = identity;","var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nmodule.exports = values;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nmodule.exports = defaultTo;","module.exports = __WEBPACK_EXTERNAL_MODULE__65__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}\n\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _map;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./_isString\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nmodule.exports = _isArrayLike;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nmodule.exports = _isString;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xmap =\n/*#__PURE__*/\nrequire(\"./internal/_xmap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nmodule.exports = map;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;","var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xreduceBy =\n/*#__PURE__*/\nrequire(\"./internal/_xreduceBy\");\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nmodule.exports = reduceBy;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\nmodule.exports = _reduced;","module.exports = __WEBPACK_EXTERNAL_MODULE__82__;","module.exports = __WEBPACK_EXTERNAL_MODULE__83__;","module.exports = __WEBPACK_EXTERNAL_MODULE__84__;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nmodule.exports = cond;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nmodule.exports = lte;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nmodule.exports = T;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"./reject\");\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nmodule.exports = without;","var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = uniqWith;","var _objectIs =\n/*#__PURE__*/\nrequire(\"./internal/_objectIs\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nmodule.exports = identical;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _Set =\n/*#__PURE__*/\nrequire(\"./internal/_Set\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = difference;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nmodule.exports = mergeAll;","module.exports = __WEBPACK_EXTERNAL_MODULE__94__;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nmodule.exports = assoc;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar hasPath =\n/*#__PURE__*/\nrequire(\"./hasPath\");\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nmodule.exports = has;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdrop =\n/*#__PURE__*/\nrequire(\"./internal/_xdrop\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nmodule.exports = drop;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLast =\n/*#__PURE__*/\nrequire(\"./internal/_dropLast\");\n\nvar _xdropLast =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;","var curry =\n/*#__PURE__*/\nrequire(\"./curry\");\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfind =\n/*#__PURE__*/\nrequire(\"./internal/_xfind\");\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nmodule.exports = find;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","module.exports = __WEBPACK_EXTERNAL_MODULE__102__;","module.exports = require(\"events\");","module.exports = __WEBPACK_EXTERNAL_MODULE__104__;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}\n\nmodule.exports = _isFunction;","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./_map\");\n\nvar _quote =\n/*#__PURE__*/\nrequire(\"./_quote\");\n\nvar _toISOString =\n/*#__PURE__*/\nrequire(\"./_toISOString\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"../reject\");\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\n\nmodule.exports = _toString;","var equals =\n/*#__PURE__*/\nrequire(\"../equals\");\n\nfunction _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}\n\nmodule.exports = _indexOf;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;","var _arrayFromIterator =\n/*#__PURE__*/\nrequire(\"./_arrayFromIterator\");\n\nvar _includesWith =\n/*#__PURE__*/\nrequire(\"./_includesWith\");\n\nvar _functionName =\n/*#__PURE__*/\nrequire(\"./_functionName\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _objectIs =\n/*#__PURE__*/\nrequire(\"./_objectIs\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}\n\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\nmodule.exports = _functionName;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\n\nmodule.exports = _complement;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xfilter =\n/*#__PURE__*/\nrequire(\"./internal/_xfilter\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\n\nmodule.exports = _isTransformer;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _filter;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\n\nmodule.exports = _xwrap;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nmodule.exports = _xfilter;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nmodule.exports = _xmap;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nmodule.exports = max;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = _makeFlat;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.0\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nmodule.exports = paths;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nmodule.exports = _Set;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWithKey;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = mergeWithKey;","var _cloneRegExp =\n/*#__PURE__*/\nrequire(\"./_cloneRegExp\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nfunction _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}\n\nmodule.exports = _clone;","function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\n\nmodule.exports = _cloneRegExp;","var _curryN =\n/*#__PURE__*/\nrequire(\"./_curryN\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nmodule.exports = _xreduceBy;","function _identity(x) {\n  return x;\n}\n\nmodule.exports = _identity;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nmodule.exports = hasPath;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nmodule.exports = _xdrop;","var take =\n/*#__PURE__*/\nrequire(\"../take\");\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\n\nmodule.exports = dropLast;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtake =\n/*#__PURE__*/\nrequire(\"./internal/_xtake\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nmodule.exports = take;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nmodule.exports = _xtake;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nmodule.exports = _xdropLast;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nmodule.exports = _xfind;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","module.exports = __WEBPACK_EXTERNAL_MODULE__146__;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\nimport { isAddressValid } from './crypto'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(typeof str === 'string' && str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n\n/**\n * Check whether a string is Aeternity address\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid AE address\n */\nexport function isAeAddress (str) {\n  if (typeof str !== 'string') return false\n  return str.split('_')[0].length === 2 && isAddressValid(str)\n}\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+/=]/i)) return false\n  const index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js'\nimport { isBase64, isHex } from './string'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  if (!x.isInteger()) throw new Error(`Unexpected not integer value: ${x.toFixed()}`)\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined || val === null) return Buffer.from([])\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param {string} str String to be converted.\n * @param {string=} enc Encoding of the input string (optional).\n * @return {buffer} Buffer (bytearray) containing the input data.\n */\nexport function str2buf (str, enc) {\n  if (!str || str.constructor !== String) return str\n  if (!enc && isHex(str)) enc = 'hex'\n  if (!enc && isBase64(str)) enc = 'base64'\n  return Buffer.from(str, enc)\n}\n","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\nexport const VSN_2 = 2\n\n// # TRANSACTION DEFAULT TTL\nexport const TX_TTL = 0\n// # ORACLE\nexport const QUERY_FEE = 30000\nexport const ORACLE_TTL = { type: 'delta', value: 500 }\nexport const QUERY_TTL = { type: 'delta', value: 10 }\nexport const RESPONSE_TTL = { type: 'delta', value: 10 }\n// # CONTRACT\nexport const DEPOSIT = 0\nexport const AMOUNT = 0\nexport const GAS = 1600000 - 21000\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000\nexport const DRY_RUN_ACCOUNT = { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n// # AENS\nexport const AENS_NAME_DOMAINS = ['chain']\nexport const NAME_TTL = 50000\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000\nexport const NAME_MAX_CLIENT_TTL = 84600\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL\nexport const NAME_FEE = 0\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05 // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480 // # ~1 day\nexport const NAME_BID_MAX_LENGTH = 12 // # this is the max length for a domain to be part of a bid\nexport const NAME_ID_KEY = {\n  ak: 'account_pubkey',\n  ok: 'oracle_pubkey',\n  ct: 'contract_pubkey',\n  ch: 'channel'\n}\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # bid ranges:\nexport const NAME_BID_RANGES = {\n  31: BigNumber(3).times(NAME_FEE_MULTIPLIER),\n  30: BigNumber(5).times(NAME_FEE_MULTIPLIER),\n  29: BigNumber(8).times(NAME_FEE_MULTIPLIER),\n  28: BigNumber(13).times(NAME_FEE_MULTIPLIER),\n  27: BigNumber(21).times(NAME_FEE_MULTIPLIER),\n  26: BigNumber(34).times(NAME_FEE_MULTIPLIER),\n  25: BigNumber(55).times(NAME_FEE_MULTIPLIER),\n  24: BigNumber(89).times(NAME_FEE_MULTIPLIER),\n  23: BigNumber(144).times(NAME_FEE_MULTIPLIER),\n  22: BigNumber(233).times(NAME_FEE_MULTIPLIER),\n  21: BigNumber(377).times(NAME_FEE_MULTIPLIER),\n  20: BigNumber(610).times(NAME_FEE_MULTIPLIER),\n  19: BigNumber(987).times(NAME_FEE_MULTIPLIER),\n  18: BigNumber(1597).times(NAME_FEE_MULTIPLIER),\n  17: BigNumber(2584).times(NAME_FEE_MULTIPLIER),\n  16: BigNumber(4181).times(NAME_FEE_MULTIPLIER),\n  15: BigNumber(6765).times(NAME_FEE_MULTIPLIER),\n  14: BigNumber(10946).times(NAME_FEE_MULTIPLIER),\n  13: BigNumber(17711).times(NAME_FEE_MULTIPLIER),\n  12: BigNumber(28657).times(NAME_FEE_MULTIPLIER),\n  11: BigNumber(46368).times(NAME_FEE_MULTIPLIER),\n  10: BigNumber(75025).times(NAME_FEE_MULTIPLIER),\n  9: BigNumber(121393).times(NAME_FEE_MULTIPLIER),\n  8: BigNumber(196418).times(NAME_FEE_MULTIPLIER),\n  7: BigNumber(317811).times(NAME_FEE_MULTIPLIER),\n  6: BigNumber(514229).times(NAME_FEE_MULTIPLIER),\n  5: BigNumber(832040).times(NAME_FEE_MULTIPLIER),\n  4: BigNumber(1346269).times(NAME_FEE_MULTIPLIER),\n  3: BigNumber(2178309).times(NAME_FEE_MULTIPLIER),\n  2: BigNumber(3524578).times(NAME_FEE_MULTIPLIER),\n  1: BigNumber(5702887).times(NAME_FEE_MULTIPLIER)\n}\n\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273\n// # name bid timeouts\nexport const NAME_BID_TIMEOUTS = {\n  13: BigNumber(0),\n  12: BigNumber(NAME_BID_TIMEOUT_BLOCKS), // # 480 blocks\n  8: BigNumber(31).times(NAME_BID_TIMEOUT_BLOCKS), // # 14880 blocks\n  4: BigNumber(62).times(NAME_BID_TIMEOUT_BLOCKS) // # 29760 blocks\n}\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX = 521\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_CHANNEL_RECONNECT_TX = 575\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channelForceProgress: 'channelForceProgress',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  channelReconnect: 'channelReconnect',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4,\n  FATE: 5,\n  SOPHIA_IMPROVEMENTS_LIMA: 6\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  FATE: 3\n}\n\nexport const VM_TYPE = { FATE: 'fate', AEVM: 'aevm' }\nexport const FATE_ABI = [3]\n\n// First abi/vm by default\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_LIMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  1: VM_ABI_MAP_ROMA,\n  // Minerva\n  2: VM_ABI_MAP_MINERVA,\n  // Fortuna\n  3: VM_ABI_MAP_FORTUNA,\n  // Lima\n  4: VM_ABI_MAP_LIMA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX]: TX_TYPE.channelForceProgress,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: TX_TYPE.channelReconnect,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  amount: 'amount',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload',\n  any: 'any',\n  stateTree: 'stateTree'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType, { backend = VM_TYPE.FATE }) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber((backend === VM_TYPE.FATE ? 12 : 30) * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.amount]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR('Not a string'),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR('Value must be of type Array and contains only object\\'s like \\'{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}\\''),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR('Value must be an object with \"vmVersion\" and \"abiVersion\" fields')\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_LIMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string),\n  TX_FIELD('payable', FIELD_TYPES.bool)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('nameFee', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.amount)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.amount),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_FORCE_PROGRESS_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('update', FIELD_TYPES.binary),\n  TX_FIELD('stateHash', FIELD_TYPES.binary),\n  TX_FIELD('offChainTrees', FIELD_TYPES.stateTree),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_RECONNECT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('role', FIELD_TYPES.string),\n  TX_FIELD('pubkey', FIELD_TYPES.id, 'ak')\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelForceProgress]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_FORCE_PROGRESS_TX, OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.channelReconnect]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_FORCE_PROGRESS_TX, OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    3: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_LIMA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion',\n  insufficientBalanceForFeeNameFee: 'insufficientBalanceForFeeNameFee'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' },\n  insufficientBalanceForFeeNameFee: { key: 'insufficientBalanceForFeeNameFee', type: ERROR_TYPE.ERROR, txKey: 'nameFee' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => 'The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address',\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const NAME_CLAIM_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForFeeNameFee,\n    ERRORS.insufficientBalanceForFeeNameFee\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","/**\n * Big Number Helpers\n * @module @aeternity/aepp-sdk/es/utils/bignumber\n * @example import { parseBigNumber, asBigNumber, isBigNumber, ceil } from '@aeternity/aepp-sdk/es/utils/bignumber'\n */\nimport BigNumber from 'bignumber.js'\n\n/**\n * Convert number to string\n * @param {String|Number|BigNumber} number number to convert\n * @return {String}\n */\nexport function parseBigNumber (number) {\n  return BigNumber(number.toString()).toString(10)\n}\n\n/**\n * Convert number to BigNumber instance\n * @param {String|Number|BigNumber} number number to convert\n * @return {BigNumber}\n */\nexport function asBigNumber (number) {\n  return BigNumber(number.toString())\n}\n\n/**\n * Check if value is BigNumber, Number or number string representation\n * @param {String|Number|BigNumber} number number to convert\n * @return {Boolean}\n */\nexport function isBigNumber (number) {\n  return !isNaN(number) || Number.isInteger(number) || BigNumber.isBigNumber(number)\n}\n\n/**\n * BigNumber ceil operation\n * @param {String|Number|BigNumber} bigNumber\n * @return {BigNumber}\n */\nexport function ceil (bigNumber) {\n  return bigNumber.integerValue(BigNumber.ROUND_CEIL)\n}\n\nexport default { ceil, isBigNumber, asBigNumber, parseBigNumber }\n","import * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport {\n  ID_TAG_PREFIX,\n  PREFIX_ID_TAG,\n  AENS_NAME_DOMAINS,\n  NAME_BID_RANGES,\n  NAME_BID_MAX_LENGTH,\n  NAME_FEE,\n  NAME_FEE_BID_INCREMENT,\n  NAME_BID_TIMEOUTS,\n  FATE_ABI,\n  VM_TYPE, NAME_ID_KEY\n} from './schema'\nimport { ceil } from '../../utils/bignumber'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @param {{ raw: boolean = false }} options Options\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data, options = { raw: false }) {\n  return options.raw ? hash(data) : encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameHash (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Encode a domain name\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Name to encode\n * @return {String} `nm_` prefixed encoded domain name\n */\nexport function produceNameId (name) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return encode(hash(name.toLowerCase()), 'nm')\n  return encode(nameHash(name), 'nm')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport function commitmentHash (name, salt = createSalt()) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return `cm_${encodeBase58Check(hash(Buffer.concat([Buffer.from(name.toLowerCase()), formatSalt(salt)])))}`\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameHash(name.toLowerCase()), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type = '') {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p.key),\n      writeId(p.id)\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\n/**\n * Is name valid\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} name\n * @param {boolean} [throwError=true] Throw error on invalid\n * @return Boolean\n * @throws Error\n */\nexport function isNameValid (name, throwError = true) {\n  if ((!name || typeof name !== 'string') && throwError) throw new Error('AENS: Name must be a string')\n  if (!AENS_NAME_DOMAINS.includes(R.last(name.split('.')))) {\n    if (throwError) throw new Error(`AENS: Invalid name domain. Possible domains [${AENS_NAME_DOMAINS}]`)\n    return false\n  }\n  return true\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nexport function classify (s) {\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in NAME_ID_KEY) {\n    return NAME_ID_KEY[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Validate name pointers array\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String[]} pointers Pointers array. Allowed values is: account(ak_), oracle(ok_), contract(ct_), channel(ch_)\n * @return {Boolean}\n */\nexport function validatePointers (pointers = []) {\n  return !pointers\n    .find(p => !p || typeof p !== 'string' || !['ak', 'ok', 'ct', 'ch'].includes(p.split('_')[0]))\n}\n\n/**\n * Get the minimum name fee for a domain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @return {String} the minimum fee for the domain auction\n */\nexport function getMinimumNameFee (domain) {\n  const nameLength = domain.replace('.chain', '').length\n  return NAME_BID_RANGES[nameLength >= NAME_BID_MAX_LENGTH ? NAME_BID_MAX_LENGTH : nameLength]\n}\n\n/**\n * Compute bid fee for AENS auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} startFee Auction start fee\n * @param {Number} [increment=0.5] Bid multiplier(In percentage, must be between 0 and 1)\n * @return {String} Bid fee\n */\nexport function computeBidFee (domain, startFee = NAME_FEE, increment = NAME_FEE_BID_INCREMENT) {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new Error(`Increment must be float. Current increment ${increment}`)\n  if (increment < NAME_FEE_BID_INCREMENT) throw new Error(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`)\n  return ceil(\n    BigNumber(BigNumber(startFee).eq(NAME_FEE) ? getMinimumNameFee(domain) : startFee).times(BigNumber(NAME_FEE_BID_INCREMENT).plus(1))\n  )\n}\n\n/**\n * Compute auction end height\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} claimHeight Auction starting height\n * @return {String} Auction end height\n */\nexport function computeAuctionEndBlock (domain, claimHeight) {\n  return R.cond([\n    [R.lt(5), R.always(NAME_BID_TIMEOUTS[4].plus(claimHeight))],\n    [R.lt(9), R.always(NAME_BID_TIMEOUTS[8].plus(claimHeight))],\n    [R.lte(NAME_BID_MAX_LENGTH), R.always(NAME_BID_TIMEOUTS[12].plus(claimHeight))],\n    [R.T, R.always(BigNumber(claimHeight))]\n  ])(domain.replace('.chain', '').length).toString(10)\n}\n\n/**\n * Get contract backend by abiVersion\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Object} { abiVersion } abiVersion Transaction abiVersion\n * @return {String} Backend\n */\nexport function getContractBackendFromTx ({ abiVersion } = {}) {\n  return FATE_ABI.includes(parseInt(abiVersion))\n    ? VM_TYPE.FATE\n    : VM_TYPE.AEVM\n}\n\n/**\n * Is name accept going to auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Transaction abiVersion\n * @return {Boolean}\n */\nexport function isAuctionName (name) {\n  return name.replace('.chain', '').length < 13\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  getContractBackendFromTx,\n  createSalt,\n  buildHash,\n  isNameValid,\n  produceNameId,\n  classify,\n  isAuctionName,\n  validatePointers\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport ed2curve from 'ed2curve'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport shajs from 'sha.js'\n\nimport { leftPad, rightPad, str2buf, toBytes } from './bytes'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Generate address from secret key\n * @rtype (secret: String) => tx: Promise[String]\n * @param {String} secret - Private key\n * @return {String} Public key\n */\nexport function getAddressFromPriv (secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret))\n  const publicBuffer = Buffer.from(keys.publicKey)\n  return `ak_${encodeBase58Check(publicBuffer)}`\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @param {String} prefix Transaction prefix. Default: 'ak'\n * @return {Boolean} valid\n */\nexport function isAddressValid (address, prefix = 'ak') {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, prefix)).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String|Buffer} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  const a = []\n  for (let i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer|Uint8Array} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String|Buffer} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('aeternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(hash(personalMessageToBinary(message)), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(hash(personalMessageToBinary(str)), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  const keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} txHash - Transaction hash\n * @return {Buffer} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @param {Boolean} [force=false] Force throwing error\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env.WALLET_PRIV,\n    publicKey: env.WALLET_PUB\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * This function encrypts a message using base58check encoded and 'ak' prefixed\n * publicKey such that only the corresponding secretKey will\n * be able to decrypt\n * @rtype (msg: String, publicKey: String) => Object\n * @param {Buffer} msg - Data to encode\n * @param {String} publicKey - Public key\n * @return {Object}\n */\nexport function encryptData (msg, publicKey) {\n  const ephemeralKeyPair = nacl.box.keyPair()\n  const pubKeyUInt8Array = decodeBase58Check(assertedType(publicKey, 'ak'))\n  const nonce = nacl.randomBytes(nacl.box.nonceLength)\n\n  const encryptedMessage = nacl.box(\n    Buffer.from(msg),\n    nonce,\n    ed2curve.convertPublicKey(pubKeyUInt8Array),\n    ephemeralKeyPair.secretKey\n  )\n\n  return {\n    ciphertext: Buffer.from(encryptedMessage).toString('hex'),\n    ephemPubKey: Buffer.from(ephemeralKeyPair.publicKey).toString('hex'),\n    nonce: Buffer.from(nonce).toString('hex'),\n    version: 'x25519-xsalsa20-poly1305'\n  }\n}\n\n/**\n * This function decrypt a message using secret key\n * @rtype (secretKey: String, encryptedData: Object) => Buffer|null\n * @param {String} secretKey - Secret key\n * @param {Object} encryptedData - Encrypted data\n * @return {Buffer|null}\n */\nexport function decryptData (secretKey, encryptedData) {\n  const receiverSecretKeyUint8Array = ed2curve.convertSecretKey(Buffer.from(secretKey, 'hex'))\n  const nonce = Buffer.from(encryptedData.nonce, 'hex')\n  const ciphertext = Buffer.from(encryptedData.ciphertext, 'hex')\n  const ephemPubKey = Buffer.from(encryptedData.ephemPubKey, 'hex')\n  const decrypted = nacl.box.open(\n    ciphertext,\n    nonce,\n    ephemPubKey,\n    receiverSecretKeyUint8Array\n  )\n  return decrypted ? Buffer.from(decrypted) : decrypted\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n","import nacl from 'tweetnacl'\nimport { v4 as uuid } from 'uuid'\n\nimport { encodeBase58Check } from './crypto'\nimport { isBase64, isHex } from './string'\n\nconst _sodium = require('libsodium-wrappers-sumo')\n\n/**\n * KeyStore module\n * @module @aeternity/aepp-sdk/es/utils/keystore\n * @example import * as Keystore from '@aeternity/aepp-sdk/es/utils/keystore'\n * @example const { Keystore } = require('@aeternity/aepp-sdk')\n */\n\nconst DEFAULTS = {\n  crypto: {\n    secret_type: 'ed25519',\n    symmetric_alg: 'xsalsa20-poly1305',\n    kdf: 'argon2id',\n    kdf_params: {\n      memlimit_kib: 65536,\n      opslimit: 3,\n      parallelism: 1\n    }\n  }\n}\n\n// DERIVED KEY PART\nconst DERIVED_KEY_FUNCTIONS = {\n  argon2id: deriveKeyUsingArgon2id\n}\n\nexport async function deriveKeyUsingArgon2id (password, salt, options) {\n  const { memlimit_kib: memoryCost, opslimit: timeCost } = options.kdf_params\n  // const isBrowser = !(typeof module !== 'undefined' && module.exports)\n\n  return _sodium.ready.then(async () => {\n    // tslint:disable-next-line:typedef\n    const sodium = _sodium\n\n    const result = sodium.crypto_pwhash(\n      32,\n      password,\n      salt,\n      timeCost,\n      memoryCost * 1024,\n      sodium.crypto_pwhash_ALG_ARGON2ID13\n    )\n    return Buffer.from(result)\n  })\n}\n\n// CRYPTO PART\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': { encrypt: encryptXsalsa20Poly1305, decrypt: decryptXsalsa20Poly1305 }\n}\n\nfunction encryptXsalsa20Poly1305 ({ plaintext, key, nonce }) {\n  return nacl.secretbox(plaintext, nonce, key)\n}\n\nfunction decryptXsalsa20Poly1305 ({ ciphertext, key, nonce }) {\n  const res = nacl.secretbox.open(ciphertext, nonce, key)\n  if (!res) throw new Error('Invalid password or nonce')\n  return res\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param {string} str String to be converted.\n * @param {string=} enc Encoding of the input string (optional).\n * @return {buffer} Buffer (bytearray) containing the input data.\n */\nfunction str2buf (str, enc) {\n  if (!str || str.constructor !== String) return str\n  if (!enc && isHex(str)) enc = 'hex'\n  if (!enc && isBase64(str)) enc = 'base64'\n  return Buffer.from(str, enc)\n}\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @param {buffer|string} plaintext Data to be encrypted.\n * @param {buffer|string} key Secret key.\n * @param {buffer|string} nonce Randomly generated nonce.\n * @param {string=} algo Encryption algorithm (default: DEFAULTS.crypto.symmetric_alg).\n * @return {buffer} Encrypted data.\n */\nfunction encrypt (plaintext, key, nonce, algo = DEFAULTS.crypto.symmetric_alg) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].encrypt({ plaintext, nonce, key })\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @param {buffer|Uint8Array} ciphertext Data to be decrypted.\n * @param {buffer|Uint8Array} key Secret key.\n * @param {buffer|Uint8Array} nonce Nonce from key-object.\n * @param {string=} algo Encryption algorithm.\n * @return {buffer} Decrypted data.\n */\nfunction decrypt (ciphertext, key, nonce, algo) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].decrypt({ ciphertext, nonce, key })\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @param {string} password User-supplied password.\n * @param {buffer|Uint8Array} nonce Randomly generated nonce.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: DEFAULTS.crypto.kdf).\n * @param {Object=} options.kdf_params KDF parameters (default: DEFAULTS.crypto.kdf_params).\n * @return {buffer} Secret key derived from password.\n */\nasync function deriveKey (password, nonce, options = {\n  kdf_params: DEFAULTS.crypto.kdf_params,\n  kdf: DEFAULTS.crypto.kdf\n}) {\n  if (typeof password === 'undefined' || password === null || !nonce) {\n    throw new Error('Must provide password and nonce to derive a key')\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(DERIVED_KEY_FUNCTIONS, options.kdf)) throw new Error('Unsupported kdf type')\n\n  return DERIVED_KEY_FUNCTIONS[options.kdf](password, nonce, options)\n}\n\n/**\n * Assemble key data object in secret-storage format.\n * @param {buffer} name Key name.\n * @param {buffer} derivedKey Password-derived secret key.\n * @param {buffer} privateKey Private key.\n * @param {buffer} nonce Randomly generated 24byte nonce.\n * @param {buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: argon2id).\n * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdf_params KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nfunction marshal (name, derivedKey, privateKey, nonce, salt, options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return Object.assign(\n    { name, version: 1, public_key: getAddressFromPriv(privateKey), id: uuid() },\n    {\n      crypto: Object.assign(\n        {\n          secret_type: opt.secret_type,\n          symmetric_alg: opt.symmetric_alg,\n          ciphertext: Buffer.from(encrypt(Buffer.from(privateKey), derivedKey, nonce, opt.symmetric_alg)).toString('hex'),\n          cipher_params: { nonce: Buffer.from(nonce).toString('hex') }\n        },\n        { kdf: opt.kdf, kdf_params: { ...opt.kdf_params, salt: Buffer.from(salt).toString('hex') } }\n      )\n    }\n  )\n}\n\nexport function getAddressFromPriv (secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret))\n  const publicBuffer = Buffer.from(keys.publicKey)\n  return `ak_${encodeBase58Check(publicBuffer)}`\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @param {String} password Keystore object password.\n * @param {Object} keyObject Keystore object.\n * @return {Buffer} Plaintext private key.\n */\nexport async function recover (password, keyObject) {\n  validateKeyObj(keyObject)\n  const nonce = Uint8Array.from(str2buf(keyObject.crypto.cipher_params.nonce))\n  const salt = Uint8Array.from(str2buf(keyObject.crypto.kdf_params.salt))\n  const kdfParams = keyObject.crypto.kdf_params\n  const kdf = keyObject.crypto.kdf\n\n  const key = await decrypt(\n    Uint8Array.from(str2buf(keyObject.crypto.ciphertext)),\n    await deriveKey(password, salt, { kdf, kdf_params: kdfParams }),\n    nonce,\n    keyObject.crypto.symmetric_alg\n  )\n  if (!key) throw new Error('Invalid password')\n\n  if (Buffer.from(key).length === 64) return Buffer.from(key).toString('hex')\n  return Buffer.from(key).toString('utf-8')\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @param {String} name Key name.\n * @param {String} password User-supplied password.\n * @param {String} privateKey Private key.\n * @param {Buffer} nonce Randomly generated 24byte nonce.\n * @param {Buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {String=} options.kdf Key derivation function (default: pbkdf2).\n * @param {String=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nexport async function dump (name, password, privateKey, nonce = nacl.randomBytes(24), salt = nacl.randomBytes(16), options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return marshal(\n    name,\n    await deriveKey(password, salt, opt),\n    privateKey,\n    nonce,\n    salt,\n    opt\n  )\n}\n\nexport function validateKeyObj (obj) {\n  const root = ['crypto', 'id', 'version', 'public_key']\n  const cryptoKeys = ['cipher_params', 'ciphertext', 'symmetric_alg', 'kdf', 'kdf_params']\n\n  const missingRootKeys = root.filter(key => !Object.prototype.hasOwnProperty.call(obj, key))\n  if (missingRootKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingRootKeys}`)\n\n  const missingCryptoKeys = cryptoKeys.filter(key => !Object.prototype.hasOwnProperty.call(obj.crypto, key))\n  if (missingCryptoKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingCryptoKeys}`)\n\n  return true\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Amount Formatter\n * @module @aeternity/aepp-sdk/es/utils/amount-formatter\n * @example import { format, toAettos, AE_AMOUNT_FORMATS } from '@aeternity/aepp-sdk/es/utils/amount-formatter'\n */\nimport { asBigNumber, isBigNumber } from './bignumber'\nimport BigNumber from 'bignumber.js'\n\n/**\n * AE amount formats\n */\nexport const AE_AMOUNT_FORMATS = {\n  AE: 'ae',\n  MILI_AE: 'miliAE',\n  MICRO_AE: 'microAE',\n  NANO_AE: 'nanoAE',\n  PICO_AE: 'picoAE',\n  FEMTO_AE: 'femtoAE',\n  AETTOS: 'aettos'\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nexport const DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18\n}\n\n/**\n * Convert amount to AE\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAe = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE })\n\n/**\n * Convert amount to aettos\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='ae'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAettos = (value, { denomination = AE_AMOUNT_FORMATS.AE } = {}) => formatAmount(value, { denomination })\n\n/**\n * Convert amount from one to other denomination\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @param {String} [options.targetDenomination='aettos'] target denomination, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const formatAmount = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => {\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(denomination)) throw new Error(`Invalid denomination. Current: ${denomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(targetDenomination)) throw new Error(`Invalid target denomination. Current: ${targetDenomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!isBigNumber(value)) throw new Error(`Value ${value} is not type of number`)\n\n  return asBigNumber(value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed()\n}\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","import BigNumber from 'bignumber.js'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../utils/amount-formatter'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  TX_TYPE,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport {\n  readInt,\n  readId,\n  readPointers,\n  writeId,\n  writeInt,\n  buildPointers,\n  encode,\n  decode,\n  buildHash,\n  getContractBackendFromTx\n} from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion: {\n      const [vm, , abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    }\n    case FIELD_TYPES.amount:\n      return readInt(value)\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.stateTree:\n      return encode(value, 'ss')\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.stateTree:\n      return decode(value, 'ss')\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int: {\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    }\n    case FIELD_TYPES.id:\n      if (Array.isArray(prefix)) {\n        const p = prefix.find(p => p === value.split('_')[0])\n        return assert(p && PREFIX_ID_TAG[value.split('_')[0]], { value, prefix })\n      }\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'abiVersion') && Object.prototype.hasOwnProperty.call(value, 'vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params, schema, { denomination } = {}) {\n  params = schema\n    .filter(([_, t]) => t === FIELD_TYPES.amount)\n    .reduce((acc, [key]) => ({ ...params, [key]: formatAmount(params[key], { denomination }) }), params)\n  const schemaKeys = schema.map(([k]) => k)\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        if (schemaKeys.includes(key)) acc[key] = value\n        if (['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) {\n          acc[`${key}Type`] = value.type === ORACLE_TTL_TYPES.delta ? 0 : 1\n          acc[`${key}Value`] = value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params, txType) {\n  const ttlKey = {\n    [TX_TYPE.oracleRegister]: 'oracleTtl',\n    [TX_TYPE.oracleExtend]: 'oracleTtl',\n    [TX_TYPE.oracleQuery]: 'queryTtl',\n    [TX_TYPE.oracleResponse]: 'responseTtl'\n  }[txType]\n\n  if (params[ttlKey] || params[`${ttlKey}Value`]) {\n    return params[`${ttlKey}Value`] || params[ttlKey].value\n  }\n  return 1\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params, vsn }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas, vsn })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas, vsn })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @param vsn\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier, vsn }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType, { vsn })\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType, { backend: getContractBackendFromTx(params) })\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params, txType) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true, vsn } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  return fee || calculateMinFee(txType, { params, gas, vsn })\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Array} [options.excludeKeys=[]] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.denomination='aettos'] denomination Denomination of amounts (default: aettos)\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [], denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const filteredSchema = schema.filter(([key]) => !excludeKeys.includes(key))\n\n  // Transform `amount` type fields to `aettos`\n  params = transformParams(params, filteredSchema, { denomination })\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return filteredSchema\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Get transaction serialization/deserialization schema\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {{ vsn: String, objId: Number, type: String }}\n * @throws {Error} Schema not found error\n * @return {Object} Schema\n */\nconst getSchema = ({ vsn, objId, type }) => {\n  const isDeserialize = !!objId\n  const firstKey = isDeserialize ? objId : type\n  const schema = isDeserialize ? TX_DESERIALIZATION_SCHEMA : TX_SERIALIZATION_SCHEMA\n\n  if (!schema[firstKey]) {\n    throw new Error(`Transaction ${isDeserialize ? 'deserialization' : 'serialization'} not implemented for ${isDeserialize ? 'tag ' + objId : type}`)\n  }\n  if (!schema[firstKey][vsn]) {\n    throw new Error(`Transaction ${isDeserialize ? 'deserialization' : 'serialization'} not implemented for ${isDeserialize ? 'tag ' + objId : type} version ${vsn}`)\n  }\n  return schema[firstKey][vsn]\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx', vsn = VSN, denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const [schema, tag] = getSchema({ type, vsn })\n  const binary = buildRawTx({ ...params, VSN: vsn, tag }, schema, { excludeKeys, denomination: params.denomination || denomination }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Buffer} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  const vsn = readInt(binary[1])\n  const [schema] = getSchema({ objId, vsn })\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @param {{ raw: boolean = false }}  options Options\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx, options = { raw: false }) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded, options)\n  return buildHash('th', rawTx, options)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","import Joi from 'joi-browser'\nimport { isAeAddress, isHex } from '../../utils/string'\nimport { toBytes } from '../../utils/bytes'\nimport { decode } from '../../tx/builder/helpers'\nimport { parseBigNumber } from '../../utils/bignumber'\nimport { addressFromDecimal, hash } from '../../utils/crypto'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), { ChainTtl: 'Chain.ttl' })\n\n/**\n * Transform decoded event to JS type\n * @param {Object[]} events Array of events\n * @param {Object} [options={}] Options\n * @param {Object} [options.schema=[]] SC function ACI schema\n * @return {Object}\n */\nexport function decodeEvents (events, options = { schema: [] }) {\n  if (!events.length) return []\n\n  return events.map(l => {\n    const [eName, ...eParams] = l.topics\n    const hexHash = toBytes(eName, true).toString('hex')\n    const { schema } = options.schema\n      .reduce(\n        (acc, el) => {\n          if (hash(el.name).toString('hex') === hexHash) {\n            l.name = el.name\n            return {\n              schema: el.types,\n              name: el.name\n            }\n          }\n          return acc\n        },\n        { schema: [] }\n      )\n    const { decoded } = schema.reduce((acc, el) => {\n      if (el === SOPHIA_TYPES.string) {\n        return { decoded: [...acc.decoded, transformEvent(l.data, el)], params: acc.params }\n      }\n      const [event, ...tail] = acc.params\n      return { decoded: [...acc.decoded, transformEvent(event, el)], params: tail }\n    }, { decoded: [], params: eParams })\n\n    return {\n      ...l,\n      decoded\n    }\n  })\n}\n\n/**\n * Transform Event based on type\n * @param {String|Number} event Event data\n * @param {String} type Event type from schema\n * @return {*}\n */\nexport function transformEvent (event, type) {\n  switch (type) {\n    case SOPHIA_TYPES.int:\n      return parseBigNumber(event)\n    case SOPHIA_TYPES.bool:\n      return !!event\n    case SOPHIA_TYPES.hash:\n      return toBytes(event, true).toString('hex')\n    case SOPHIA_TYPES.address:\n      return addressFromDecimal(event).split('_')[1]\n    case SOPHIA_TYPES.string:\n      return decode(event).toString('utf-8')\n    default:\n      return toBytes(event, true)\n  }\n}\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [root, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const contractTypeDefs = bindings.find(c => c.name === root)\n  const aciType = [\n    ...contractTypeDefs.type_defs,\n    { name: 'state', typedef: contractTypeDefs.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n  return isTypedDefOrState(aciType.typedef, bindings) ? linkTypeDefs(aciType.typedef, bindings) : aciType.typedef\n}\n\nconst isTypedDefOrState = (t, bindings) => {\n  if (!['string', 'object'].includes(typeof t)) return false\n\n  t = typeof t === 'object' ? Object.keys(t)[0] : t\n  const [root, ...path] = t.split('.')\n  // Remote Contract Address\n  if (!path.length) return false\n  return bindings.map(c => c.name).includes(root)\n}\n\nconst isRemoteAddress = (t) => {\n  if (typeof t !== 'string') return false\n  const [root, ...path] = t.split('.')\n  return !path.length && !Object.values(SOPHIA_TYPES).includes(root)\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // If remote address\n  if (isRemoteAddress(t)) return { t: SOPHIA_TYPES.address }\n  // Link State and typeDef\n  if (isTypedDefOrState(t, bindings)) t = linkTypeDefs(t, bindings)\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport function transform (type, value, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.ChainTtl:\n      return `${value}`\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${value.map(el => transform(generic, el, { bindings }))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${value.map((el, i) => transform(generic[i], el, {\n        bindings\n      }))})`\n    case SOPHIA_TYPES.option: {\n      return value === undefined ? 'None' : `Some(${transform(generic, value, {\n        bindings\n      })})`\n    }\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      if (typeof value === 'string') {\n        if (isHex(value)) return `#${value}`\n        if (isAeAddress(value)) return `#${decode(value).toString('hex')}`\n      }\n      return `#${Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${generic.reduce(\n        (acc, { name, type }, i) => {\n          acc += `${i !== 0 ? ',' : ''}${name} = ${transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nexport function transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${variantArgs.slice(0, type.length).map((el, i) => transform(type[i], el, {\n      bindings\n    }))})`\n  }`\n}\n\nexport function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${value\n    .reduce(\n      (acc, [key, value], i) => {\n        if (i !== 0) acc += ','\n        acc += `[${transform(generic[0], key, {\n          bindings\n        })}] = ${transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ''\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map: {\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    }\n    case SOPHIA_TYPES.option: {\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    }\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record: {\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n    }\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.ChainTtl:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return prepareSchema(generic, { bindings }).optional().error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = Object.prototype.hasOwnProperty.call(context, 'value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      if (isAeAddress(value)) {\n        return decode(value)\n      }\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).sparse(true).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","import * as R from 'ramda'\nimport { unpackTx } from '../../tx/builder'\nimport { decodeEvents as unpackEvents, transform, transformDecodedData, validateArguments } from './transformation'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @param external\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name, { external }) {\n  if (!aci) throw new Error('ACI required')\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: [\n      {\n        state: aci.state,\n        type_defs: aci.type_defs,\n        name: aci.name\n      },\n      ...external.map(R.pick(['state', 'type_defs', 'name']))\n    ],\n    event: aci.event ? aci.event.variant : []\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              },\n              decodeEvents (events) {\n                return instance.decodeEvents(name, events)\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {},\n  ...instance.aci ? {\n    init: Object.assign(\n      function () {\n        const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n        const { opt, args } = parseArguments(aciArgs)(arguments)\n        return instance.deploy(args, opt)\n      },\n      {\n        get () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: true })\n        },\n        send () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: false })\n        }\n      }\n    )\n  } : {}\n})\n\nexport const parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n\nexport const unpackByteCode = (bytecode) => unpackTx(bytecode, false, 'cb').tx\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nexport const prepareArgsForEncode = async (aci, params) => {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\nexport const decodeEvents = (events, fnACI) => {\n  if (!fnACI || !fnACI.event || !fnACI.event.length) return []\n\n  const eventsSchema = fnACI.event.map(e => {\n    const name = Object.keys(e)[0]\n    return { name, types: e[name] }\n  })\n  return unpackEvents(events, { schema: eventsSchema })\n}\n\nexport const decodeCallResult = async (result, fnACI, opt) => {\n  return {\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, bindings: fnACI.bindings }\n    ),\n    decodedEvents: decodeEvents(result.result.log, fnACI)\n  }\n}\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(secretKey), Buffer.from(indexBuffer)])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport const getHdWalletAccountFromMnemonic = (mnemonic, accountIdx) => {\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey)\n  const keyPair = getKeyPair(derived.secretKey)\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx\n  }\n}\n\nexport default {\n  getHdWalletAccountFromMnemonic,\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'getVmVersion', 'prepareTxParams',\n        'gaAttachTx'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Ae: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Ae: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'getBalance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount', 'getContractByteCode', 'getContract', 'waitForTxConfirm', 'resolveName'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    getBalance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object} Transaction\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Wait for transaction confirmation\n * @function waitForTxConfirm\n * @instance\n * @abstract\n * @category async\n * @rtype (txHash: String, { confirm: Number | Boolean } = { confirm: 3 }) => Promise<Number>\n * @param {String} txHash - Generation hash or height\n * @param {String} [options={}] - options\n * @param {String} [options.confirm=3] - Block confirmation count\n * @return {Promise<Number>} Current Height\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","import JsonBig from '@aeternity/json-bigint'\nimport BigNumber from 'bignumber.js'\n\nconst jsonBig = JsonBig({ storeAsString: true })\n\nconst convertValuesToBigNumbers = value => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return Object.entries(value)\n      .map(([key, value]) => [key, convertValuesToBigNumbers(value)])\n      .reduce((p, [k, v]) => ({ ...p, [k]: v }), {})\n  }\n  if (Array.isArray(value)) {\n    return value.map(item => convertValuesToBigNumbers(item))\n  }\n  if (typeof value === 'string' && BigNumber(value).toString(10) === value) {\n    const bn = BigNumber(value)\n    bn.toJSON = () => bn.toString(10)\n    return bn\n  }\n  return value\n}\n\nexport default {\n  stringify: (object, ...args) => jsonBig.stringify(convertValuesToBigNumbers(object), ...args),\n  parse: jsonBig.parse\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== undefined) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError('Not a string', spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError('Not an object', spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError('Not an array', spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data, statusText } = error.response\n  const reason = R.has('reason', data) ? data.reason : data ? R.toString(data) : statusText\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Resolve reference\n * @rtype (ref: String, swag: Object) => Object\n * @param {String} ref - Reference to resolve\n * @param {Object} swag\n * @return {Object} Resolved reference definition\n */\nfunction resolveRef (ref, swag) {\n  const match = ref.match(/^#\\/(.+)$/)\n  if (match !== undefined) {\n    const value = R.path(match[1].split('/'), swag)\n    if (value != null) {\n      return value\n    }\n  }\n\n  throw Error(`Could not resolve reference: ${ref}`)\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, swag, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  const parameters = (definition.parameters || []).map(param =>\n    param.$ref ? resolveRef(param.$ref, swag) : param\n  )\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], swag.definitions)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], swag.definitions)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, swag, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('-')[0].split('.')\n  const geComponents = geVersion.split('-')[0].split('.')\n  const ltComponents = ltVersion.split('-')[0].split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Obtain networkId from account or node\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nexport function getNetworkId ({ networkId, force = false } = {}) {\n  if (!force && !networkId && !this.networkId && (!this.selectedNode || !this.selectedNode.networkId)) throw new Error('networkId is not provided')\n  if (force && !networkId && !this.networkId && (!this.selectedNode || !this.selectedNode.networkId)) return null\n  return networkId || this.networkId || this.selectedNode.networkId\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      (\n        !semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION) ||\n        this.version === '5.0.0-rc1'\n      ) &&\n      // Todo implement 'rc' version comparision in semverSatisfies\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '5.0.0'\nconst NODE_LT_VERSION = '6.0.0'\n\nexport default Node\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\nimport { hash, personalMessageToBinary, decodeBase64Check, assertedType, verifyPersonalMessage } from '../utils/crypto'\nimport { buildTx, buildTxHash } from '../tx/builder'\nimport { decode } from '../tx/builder/helpers'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport { getNetworkId } from '../node'\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = { signHash: true }) {\n  const networkId = this.getNetworkId(opt)\n  const rlpBinaryTx = decodeBase64Check(assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), opt.signHash ? buildTxHash(rlpBinaryTx, { raw: true }) : rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Get network Id\n * @instance\n * @function getNetworkId\n * @category async\n * @rtype () => networkId: String\n * @return {String} Network Id\n */\n\n/**\n * Sign message\n * @instance\n * @category async\n * @rtype (msg: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to sign\n * @param {Object} opt - Options\n * @return {String} Signature\n */\nasync function signMessage (message, opt = { returnHex: false }) {\n  const sig = await this.sign(hash(personalMessageToBinary(message)), opt)\n  return opt.returnHex ? Buffer.from(sig).toString('hex') : sig\n}\n\n/**\n * Verify message\n * @instance\n * @category async\n * @rtype (msg: String, signature: String, publicKey: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to verify\n * @param {String} signature - Signature\n * @param {Object} opt - Options\n * @return {Boolean}\n */\nasync function verifyMessage (message, signature, opt = {}) {\n  return verifyPersonalMessage(message, typeof signature === 'string' ? Buffer.from(signature, 'hex') : signature, decode(await this.address(opt)))\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId, signMessage, verifyMessage },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId', 'signMessage', 'verifyMessage']\n    }\n  }\n}, required({\n  methods: {\n    sign: required,\n    address: required\n  }\n}))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {Object} Transaction\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, opt)\n  return this.sendTransaction(signed, opt)\n}\n\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientIdOrName: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientIdOrName - Address or name of recipient account\n * @param {Object} [options] - Options\n * @return {Object} Transaction\n */\nasync function spend (amount, recipientIdOrName, options) {\n  const opt = { ...this.Ae.defaults, ...options }\n  return this.send(\n    await this.spendTx({\n      ...opt,\n      senderId: await this.address(opt),\n      recipientId: await this.resolveName(recipientIdOrName, 'ak', opt),\n      amount\n    }),\n    opt\n  )\n}\n\n// TODO: Rename to spendFraction\n/**\n * Send a fraction of token balance to another account\n * @instance\n * @category async\n * @rtype (fraction: Number|String, recipientIdOrName: String, options?: Object) => Promise[String]\n * @param {Number|String} fraction - Fraction of balance to spend (between 0 and 1)\n * @param {String} recipientIdOrName - Address or name of recipient account\n * @param {Object} [options] - Options\n * @return {Object} Transaction\n */\nasync function transferFunds (fraction, recipientIdOrName, options) {\n  if (fraction < 0 || fraction > 1) {\n    throw new Error(`Fraction should be a number between 0 and 1, got ${fraction}`)\n  }\n  const opt = { ...this.Ae.defaults, ...options }\n  const recipientId = await this.resolveName(recipientIdOrName, 'ak', opt)\n  const senderId = await this.address(opt)\n  const balance = new BigNumber(await this.balance(senderId))\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP)\n  const { tx: { fee } } = TxBuilder.unpackTx(\n    await this.spendTx({ ...opt, senderId, recipientId, amount: desiredAmount })\n  )\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount\n  return this.send(await this.spendTx({ ...opt, senderId, recipientId, amount }), opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, signUsingGA },\n  deepProps: { Ae: { defaults: { denomination: AE_AMOUNT_FORMATS.AETTOS } } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error('You can\\'t use Node API. Node is not connected or not defined!')\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport { getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\nimport { getNetworkId } from '../node'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [] } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach((node, i) => {\n      const { name, instance } = node\n      this.addNode(name, instance, i === 0)\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId,\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport BigNumber from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA,\n  CONTRACT_VERIFICATION_SCHEMA,\n  MIN_GAS_PRICE,\n  NAME_CLAIM_VERIFICATION_SCHEMA,\n  OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION,\n  PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA,\n  TX_TYPE\n} from './builder/schema'\nimport { buildTxHash, calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    const txHashWithNetworkId = Buffer.concat([Buffer.from(networkId), buildTxHash(rlpEncoded, { raw: true })])\n    const decodedPub = decodeBase58Check(assertedType(ownerPublicKey, 'ak'))\n    return verify(txWithNetworkId, signature, decodedPub) || verify(txHashWithNetworkId, signature, decodedPub)\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gte(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gte(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  },\n  insufficientBalanceForFeeNameFee ({ nameFee, fee, balance, VSN }) {\n    return VSN === 1 || BigNumber(balance).gte(BigNumber(nameFee).plus(fee))\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = Object.prototype.hasOwnProperty.call(tx, 'gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    case TX_TYPE.nameClaim:\n      return verifySchema(NAME_CLAIM_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","export const pause = duration => new Promise(resolve => setTimeout(resolve, duration))\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\n\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\nimport { assertedType } from '../utils/crypto'\nimport { pause } from '../utils/other'\nimport { isNameValid, produceNameId } from '../tx/builder/helpers'\nimport { NAME_ID_KEY } from '../tx/builder/schema'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Ae.defaults, options)\n  // Verify transaction before broadcast\n  if (verify || (typeof verify !== 'boolean' && this.verifyTxBeforeSend)) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error: ' + JSON.stringify(validation)), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n\n    if (waitMined) {\n      const txData = { ...await this.poll(txHash, options), rawTx: tx }\n      // wait for transaction confirmation\n      if (options.confirm) {\n        return { ...txData, confirmationHeight: await this.waitForTxConfirm(txHash, options) }\n      }\n      return txData\n    }\n    return { hash: txHash, rawTx: tx }\n  } catch (error) {\n    throw Object.assign(error, { rawTx: tx, verifyTx: () => this.unpackAndVerify(tx) })\n  }\n}\n\nasync function waitForTxConfirm (txHash, options = { confirm: 3 }) {\n  options.confirm = options.confirm === true ? 3 : options.confirm\n  const { blockHeight } = await this.tx(txHash)\n  return this.awaitHeight(blockHeight + options.confirm, options)\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\n/**\n * @function\n * @deprecated\n */\nasync function balance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function getBalance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height }).catch(_ => ({ balance: 0 }))\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function tx (hash, info = true) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx', 'ChannelForceProgressTx'].includes(tx.tx.type) && info && tx.blockHeight !== -1) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {}\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function awaitHeight (height, { interval = 5000, attempts = 20 } = {}) {\n  let currentHeight\n  for (let i = 0; i < attempts; i++) {\n    if (i) await pause(interval)\n    currentHeight = await this.height()\n    if (currentHeight >= height) return currentHeight\n  }\n  throw Error(`Giving up after ${(attempts - 1) * interval}ms, current height: ${currentHeight}, desired height: ${height}`)\n}\n\nasync function topBlock () {\n  return Object.values(await this.api.getTopBlock())[0]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000, allowUnsynced = false } = {}) {\n  const max = await this.height() + blocks\n  do {\n    const tx = await this.tx(th).catch(_ => null)\n    if (tx && (tx.blockHeight !== -1 || (allowUnsynced && tx.height))) {\n      return tx\n    }\n    await pause(interval)\n  } while (await this.height() < max)\n  throw new Error(`Giving up after ${blocks} blocks mined, transaction hash: ${th}`)\n}\n\nasync function getTxInfo (hash) {\n  const result = await this.api.getTransactionInfoByHash(hash)\n  return result.callInfo || result\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs: txs.map(tx => ({ tx })), accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getContract (contractId) {\n  return this.api.getContract(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * Resolve AENS name and return name hash\n * @param {String} nameOrId\n * @param {String} prefix\n * @param {Boolean} verify\n * @param {Boolean} resolveByNode\n * @return {String} Address or AENS name hash\n */\nasync function resolveName (nameOrId, prefix, { verify = false, resolveByNode = false } = {}) {\n  const prefixes = Object.keys(NAME_ID_KEY)\n  if (!nameOrId || typeof nameOrId !== 'string') throw new Error('Invalid name or address. Should be a string')\n  if (!prefixes.includes(prefix)) throw new Error(`Invalid prefix ${prefix}. Should be one of [${prefixes}]`)\n  if (assertedType(nameOrId, prefix, true)) return nameOrId\n\n  if (isNameValid(nameOrId)) {\n    if (resolveByNode || verify) {\n      const name = await this.getName(nameOrId).catch(_ => null)\n      if (!name) throw new Error('Name not found')\n      const pointer = name.pointers.find(({ id }) => id.split('_')[0] === prefix)\n      if (!pointer) throw new Error(`Name ${nameOrId} do not have pointers for ${prefix}`)\n      return pointer.id\n    }\n    return produceNameId(nameOrId)\n  }\n  throw new Error('Invalid name or address')\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = true }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getBalance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getContract,\n    getName,\n    waitForTxConfirm,\n    resolveName\n  }\n})\n\nexport default ChainNode\n","/**\n * TxObject module\n * @module @aeternity/aepp-sdk/es/tx/tx-object\n * @export TxObject\n * @example import TxObject from '@aeternity/aepp-sdk/es/tx/tx-object'\n */\nimport stampit from '@stamp/it'\nimport { assertedType } from '../utils/crypto'\nimport { buildTx, calculateFee, unpackTx } from './builder'\nimport { TX_TYPE } from './builder/schema'\nimport { encode } from './builder/helpers'\nimport { isHex } from '../utils/string'\n\n/**\n * Build transaction from object\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {String} type Transaction type\n * @param {Object} params Transaction params\n * @param {Object} [options={}] Options\n * @throws {Error} Arguments validation error's\n * @return {{ encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, params: Object, type: String }}\n */\nconst buildTransaction = (type, params, options = {}) => {\n  if (typeof params !== 'object') throw new Error('\"params\" should be an object')\n  if (typeof type !== 'string' || !Object.values(TX_TYPE).includes(type)) throw new Error(`Unknown transaction type ${type}`)\n  const fee = calculateFee(params.fee, type, { gas: params.gas, params, vsn: params.vsn })\n  const { rlpEncoded, binary, tx: encodedTx, txObject } = buildTx({ ...params, fee }, type, { vsn: params.vsn, ...options })\n  return { rlpEncoded, binary, encodedTx, params: txObject, type }\n}\n\n/**\n * Unpack transaction from RLP encoded binary or base64c string\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {Buffer|String} tx RLP encoded binary or base64c(rlpBinary) string\n * @throws {Error} Arguments validation error's\n * @return {{ encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, type: String, params: Object }}\n */\nconst unpackTransaction = (tx) => {\n  if (!tx) throw new Error(`Invalid transaction: ${tx}`)\n  if (typeof tx === 'string') {\n    if (!assertedType(tx, 'tx', true)) throw new Error('Invalid transaction string. Tx should be `tx` prefixed base58c string')\n    const { txType: type, tx: params, rlpEncoded, binary } = unpackTx(tx)\n    return { encodedTx: tx, type, params, rlpEncoded, binary }\n  }\n  if (Buffer.isBuffer(tx)) {\n    const { txType: type, tx: params, rlpEncoded, binary } = unpackTx(tx, true)\n    return { encodedTx: encode(tx, 'tx'), type, params, rlpEncoded, binary }\n  }\n}\n\n/**\n * Helper which build or unpack transaction base on constructor arguments\n * Need to provide one of arguments: [tx] -> unpack flow or [params, type] -> build flow\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {Buffer|String} [tx] Transaction rlp binary or vase64c string\n * @param {Object} params Transaction params\n * @param {String} type Transaction type\n * @param {Object} [options={}] Options\n * @throws {Error} Arguments validation error's\n * @return {{encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, type: String, params: Object}}\n */\nconst initTransaction = ({ tx, params, type, options = {} } = {}) => {\n  if (params && type) return buildTransaction(type, params, options)\n  if (tx) return unpackTransaction(tx)\n  throw new Error('Invalid TxObject arguments. Please provide one of { tx: \"tx_asdasd23...\" } or { type: \"spendTx\", params: {...} }')\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Buffer|String} [options.tx] - Rlp binary or base64c transaction\n * @param {Object} [options.params] - Transaction params\n * @param {String} [options.type] - Transaction type\n * @param {Object} [options.options] - Build options\n * @return {Object} TxObject instance\n * @example TxObject({ params: {...}, type: 'spendTx' })\n */\nexport const TxObject = stampit({\n  init ({ tx, params, type, options = {} } = {}) {\n    this.options = options\n    this.signatures = []\n    Object.assign(this, initTransaction({ tx, params, type, options }))\n\n    if (this.type === TX_TYPE.signed) {\n      const { signatures, encodedTx: { txType, tx } } = this.params\n      this.signatures = signatures\n      this.params = tx\n      this.type = txType\n      this.isSigned = true\n    }\n  },\n  statics: {\n    /**\n     * Create txObject from base64c RLP encoded transaction string with 'tx_' prefix\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @static\n     * @param {String} tx Transaction string (tx_23fsdgsdfg...)\n     * @return {TxObject}\n     */\n    fromString: (tx) => TxObject({ tx }),\n    /**\n     * Create txObject from transaction RLP binary\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @static\n     * @param {Buffer} tx Transaction RLP binary\n     * @return {TxObject}\n     */\n    fromRlp: (tx) => TxObject({ tx })\n  },\n  methods: {\n    /**\n     * Rebuild transaction with new params and recalculate fee\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Object} props Transaction properties for update\n     * @param options\n     * @return {TxObject}\n     */\n    setProp (props = {}, options = {}) {\n      if (typeof props !== 'object') throw new Error('Props should be an object')\n      this.isSigned = false\n      this.signatures = []\n      Object.assign(this, buildTransaction(this.type, { ...this.params, ...props, fee: null }, { ...this.options, ...options }))\n      return this\n    },\n    /**\n     * Get signatures\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @return {Array} Array of signatures\n     */\n    getSignatures () {\n      if (!this.isSigned) throw new Error('Signature not found, transaction is not signed')\n      return this.signatures\n    },\n    /**\n     * Add signature\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Buffer|String} signature Signature to add ( Can be: Buffer | Uint8Array | HexString )\n     * @return {void}\n     */\n    addSignature (signature) {\n      signature = isHex(signature) ? Buffer.from(signature, 'hex') : signature\n      if (!Buffer.isBuffer(signature) && !(signature instanceof Uint8Array)) throw new Error('Invalid signature, signature must be of type Buffer or Uint8Array')\n      Object.assign(this, buildTransaction(TX_TYPE.signed, { encodedTx: this.rlpEncoded, signatures: [[...this.signatures, signature]] }))\n\n      const { signatures, encodedTx: { txType, tx } } = this.params\n      this.signatures = signatures\n      this.params = tx\n      this.type = txType\n      this.isSigned = true\n    },\n    /**\n     * Calculate fee\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Object} props\n     * @return {String} fee\n     */\n    calculateMinFee (props = {}) {\n      const params = { ...this.params, ...props }\n      return calculateFee(0, this.type, { gas: params.gas, params, vsn: params.vsn })\n    }\n  }\n})\n\nexport default TxObject\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\n\nimport ChainNode from '../chain/node'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { ABI_VERSIONS, MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE, VM_TYPE, TX_TTL } from './builder/schema'\nimport { buildContractId } from './builder/helpers'\nimport { TxObject } from './tx-object'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), {\n          recipientId,\n          senderId,\n          nonce,\n          ttl,\n          payload\n        }),\n        type: TX_TYPE.spend\n      }).encodedTx\n    }\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.namePreClaim\n      }).encodedTx\n    }\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt, vsn = 2 }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments), vsn })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee, vsn }),\n        type: TX_TYPE.nameClaim\n      }).encodedTx\n    }\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }),\n        type: TX_TYPE.nameTransfer\n      }).encodedTx\n    }\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.nameUpdate\n      }).encodedTx\n    }\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.nameRevoke\n      }).encodedTx\n    }\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...{\n        tx: TxObject({\n          params: R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }),\n          type: TX_TYPE.contractCreate\n        }).encodedTx\n      },\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }),\n        type: TX_TYPE.contractCall\n      }).encodedTx\n    }\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion = ABI_VERSIONS.NO_ABI }) {\n  // const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: {\n          accountId,\n          queryFee,\n          abiVersion,\n          fee,\n          oracleTtl,\n          nonce,\n          ttl,\n          queryFormat,\n          responseFormat\n        },\n        type: TX_TYPE.oracleRegister\n      }).encodedTx\n    }\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, fee, oracleTtl, nonce, ttl },\n        type: TX_TYPE.oracleExtend\n      }).encodedTx\n    }\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId },\n        type: TX_TYPE.oracleQuery\n      }).encodedTx\n    }\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return tx\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, responseTtl, queryId, response, fee, ttl, nonce },\n        type: TX_TYPE.oracleResponse\n      }).encodedTx\n    }\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...{ tx: TxObject({ params: R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), type: TX_TYPE.gaAttach }).encodedTx },\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number, backend: string })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion, backend } = {}) {\n  const { consensusProtocolVersion } = this.getNodeInfo()\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : backend === VM_TYPE.AEVM ? protocolForTX.abiVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.abiVersion[0] : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : backend === VM_TYPE.AEVM ? protocolForTX.vmVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.vmVersion[0] : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (protocolForTX.abiVersion.length && !R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = TX_TTL, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl, vsn }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await calculateTtl.call(this, t, !absoluteTtl)\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }), vsn })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = ChainNode.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: true,\n    showWarning: false\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  if (this.isGa) throw new Error('You are trying to sign data using GA account without keypair')\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (opt = { format: Crypto.ADDRESS_FORMAT.api }) {\n  return Promise.resolve(Crypto.formatAddress(opt.format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair, gaId }) {\n    this.isGa = !!gaId\n    if (gaId) {\n      if (!Crypto.isAddressValid(gaId)) throw new Error('Invalid GA address')\n      secrets.set(this, { publicKey: gaId })\n    } else {\n      validateKeyPair(keypair)\n\n      this.setSecret(keypair)\n    }\n  },\n  props: { isGa: false },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\nimport MemoryAccount from './memory'\n\nexport const isMemoryAccount = (acc) => !['sign', 'address'].find(f => typeof acc[f] !== 'function')\n\nasync function sign (data, { onAccount } = {}) {\n  if (!onAccount) return this.signWith(this.Selector.address, data)\n  // onAccount can be account address(should exist in sdk instance) or MemoryAccount\n  return this.resolveOnAccount(onAccount, 'sign', data)\n}\n\nasync function resolveOnAccount (onAccount, operation = 'address', data) {\n  switch (typeof onAccount) {\n    case 'string':\n      if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n      if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n      if (operation === 'sign') return this.signWith(onAccount, data)\n      if (operation === 'address') return onAccount\n      break\n    case 'object':\n      try {\n        const memoryAccount = isMemoryAccount(onAccount)\n          ? onAccount\n          : MemoryAccount({ keypair: onAccount })\n        if (operation === 'sign') return memoryAccount.sign(data)\n        if (operation === 'address') return memoryAccount.address()\n        break\n      } catch (e) {\n        e.message = `Invalid 'onAccount' option: ${e.message}`\n        throw e\n      }\n    default:\n      throw new Error('Invalid `onAccount` option: should be keyPair object or account address')\n  }\n}\nasync function address ({ onAccount } = {}) {\n  if (!onAccount) {\n    if (this.Selector.address) return Promise.resolve(this.Selector.address)\n    throw new Error('You don\\'t have selected account')\n  }\n  return this.resolveOnAccount(onAccount, 'address')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount, resolveOnAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair } from './utils/crypto'\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [] }) {\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    const keypair = envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { salt } from '../utils/crypto'\nimport {\n  commitmentHash,\n  isNameValid,\n  getMinimumNameFee,\n  classify,\n  isAuctionName,\n  validatePointers, encode, produceNameId\n} from '../tx/builder/helpers'\nimport Ae from './'\nimport { CLIENT_TTL, NAME_FEE, NAME_TTL } from '../tx/builder/schema'\n\n/**\n * Revoke a name\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} name Name hash\n * @param {Object} [options={}] options\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n */\nasync function revoke (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * Update a name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String[]} pointers Array of name pointers. Can be oracle|account|contract|channel public key\n * @param {Object} [options={}]\n * @param {Boolean} [options.extendPointers=false] extendPointers Get the pointers from the node and merge with provided one. Pointers with the same type will be overwrited\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @param {(Number|String|BigNumber)} [options.nameTtl=50000] nameTtl Name ttl represented in number of blocks (Max value is 50000 blocks)\n * @param {(Number|String|BigNumber)} [options.clientTtl=84600] clientTtl a suggestion as to how long any clients should cache this information\n * @return {Promise<Object>}\n * @throws Invalid pointer array error\n * @example\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n */\nasync function update (name, pointers = [], options = { extendPointers: false }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  if (!validatePointers(pointers)) throw new Error('Invalid pointers array')\n\n  pointers = [\n    ...options.extendPointers ? (await this.getName(name)).pointers : [],\n    ...pointers.map(p => R.fromPairs([['id', p], ['key', classify(p)]]))\n  ].reduce((acc, el) => [...acc.filter(p => p.key !== el.key), el], [])\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    pointers\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String} account Recipient account publick key\n * @param {Object} [options={}]\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n */\nasync function transfer (name, account, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} opt Options\n * @return {Promise<Object>}\n * @example\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n */\nasync function query (name, opt = {}) {\n  isNameValid(name)\n  const o = await this.getName(name)\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || [],\n    update: async (pointers = [], options = {}) => {\n      return {\n        ...(await this.aensUpdate(name, pointers, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options = {}) => {\n      return {\n        ...(await this.aensTransfer(name, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options = {}) => this.aensRevoke(name, R.merge(opt, options)),\n    extendTtl: async (nameTtl = NAME_TTL, options = {}) => {\n      if (!nameTtl || typeof nameTtl !== 'number' || nameTtl > NAME_TTL) throw new Error('Ttl must be an number and less then 50000 blocks')\n\n      return {\n        ...(await this.aensUpdate(name, o.pointers.map(p => p.id), { ...R.merge(opt, options), nameTtl })),\n        ...(await this.aensQuery(name))\n      }\n    }\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Number} salt Salt from pre-claim, or 0 if it's a bid\n * @param {Object} [options={}] options\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @param {Number|String} [options.nameFee] Name Fee (By default calculated by sdk)\n * @param {Number|String} [options.vsn = 2] Transaction vsn from Lima is 2\n * @return {Promise<Object>} the result of the claim\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n */\nasync function claim (name, salt, options = { vsn: 2 }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const minNameFee = getMinimumNameFee(name)\n  if (opt.nameFee !== this.Ae.defaults.nameFee && minNameFee.gt(opt.nameFee)) {\n    throw new Error(`the provided fee ${opt.nameFee} is not enough to execute the claim, required: ${minNameFee}`)\n  }\n  opt.nameFee = opt.nameFee !== this.Ae.defaults.nameFee ? opt.nameFee : minNameFee\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: encode(name, 'nm')\n  }))\n\n  const result = await this.send(claimTx, opt)\n  if (!isAuctionName(name)) {\n    delete opt.vsn\n    const nameInter = opt.waitMined ? await this.aensQuery(name, opt) : {}\n    return Object.assign(result, nameInter)\n  }\n  return { ...result, nameFee: opt.nameFee }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>}\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n */\nasync function preclaim (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const commitmentId = commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId\n  })\n}\n\n/**\n * Bid to name auction\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name Domain name\n * @param {String|Number} nameFee Name fee (bid fee)\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, startFee, incrementPercentage)\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n */\nasync function bid (name, nameFee = NAME_FEE, options = {}) {\n  return this.aensClaim(name, 0, { ...options, nameFee, vsn: 2 })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke,\n    aensBid: bid\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        clientTtl: CLIENT_TTL,\n        nameTtl: NAME_TTL, // aec_governance:name_claim_max_expiration() => 50000\n        nameFee: NAME_FEE\n      }\n    }\n  }\n})\n\nexport default Aens\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { error: e }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    delete: _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI',\n        'validateByteCodeAPI',\n        'getFateAssembler',\n        'getBytecodeCompilerVersion'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required,\n    validateByteCodeAPI: required,\n    getFateAssembler: required,\n    getBytecodeCompilerVersion: required\n  }\n}))\n\n/**\n * Get contract ACI\n * @function contractGetACI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, options: Array) => aciObject: Promise[Object]\n * @param {String} source - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} - Contract aci object\n */\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array, options: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @param {String} backend - Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\nimport { VM_TYPE } from '../tx/builder/schema'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/api-version', options)\n    .then((res) => res['api-version'])\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, function: name, arguments: args, options: this.prepareCompilerOption(options) }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, backend = this.compilerOptions.backend, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata, backend }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { function: fn, source, calldata: callData, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { function: fn, source, 'call-result': callResult, 'call-value': callValue, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function validateByteCodeAPI (bytecode, source, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/validate-byte-code', { bytecode, source, options: this.prepareCompilerOption(options) }, options)\n    .then(res => typeof res === 'object' ? true : res)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options: this.prepareCompilerOption(options) }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getFateAssembler (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/fate-assembler', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getBytecodeCompilerVersion (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/compiler-version', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function setCompilerUrl (url, { forceCompatibility = false } = {}) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  await this.checkCompatibility({ forceCompatibility })\n}\n\nasync function checkCompatibility ({ force = false, forceCompatibility = false } = {}) {\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (!forceCompatibility && this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction prepareCompilerOption ({ backend = this.compilerOptions.backend, filesystem = {} } = {}) {\n  return { backend, file_system: filesystem }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl, forceCompatibility = false }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n    await this.checkCompatibility({ force: true, forceCompatibility })\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    validateByteCodeAPI,\n    isInit,\n    checkCompatibility,\n    prepareCompilerOption,\n    getFateAssembler,\n    getBytecodeCompilerVersion\n  },\n  props: {\n    compilerVersion: null,\n    compilerOptions: {\n      backend: VM_TYPE.FATE\n    }\n  }\n})\n\nconst COMPILER_GE_VERSION = '4.0.0'\nexport const COMPILER_LT_VERSION = '5.0.0'\n\nexport default ContractCompilerAPI\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport AsyncInit from '../../utils/async-init'\nimport semverSatisfies from '../../utils/semver-satisfies'\nimport {\n  buildContractMethods,\n  decodeCallResult,\n  decodeEvents,\n  getFunctionACI,\n  prepareArgsForEncode as prepareArgs\n} from './helpers'\nimport { isAddressValid } from '../../utils/crypto'\nimport { COMPILER_LT_VERSION } from '../compiler'\nimport { AMOUNT, DEPOSIT, GAS, MIN_GAS_PRICE } from '../../tx/builder/schema'\n// TODO remove when Breaking Changes release is coming\nexport const prepareArgsForEncode = prepareArgs\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options={}] Options object\n * @param {String} [options.aci] Contract ACI\n * @param {String} [options.contractAddress] Contract address\n * @param {Object} [options.filesystem] Contact source external namespaces map\n * @param {Object} [options.forceCodeCheck=true] Don't check contract code\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, filesystem = {}, forceCodeCheck = true, opt } = {}) {\n  aci = aci || await this.contractGetACI(source, { filesystem })\n  if (contractAddress) contractAddress = await this.resolveName(contractAddress, 'ct', { resolveByNode: true })\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: DEPOSIT,\n    gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n    amount: AMOUNT,\n    gas: GAS,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false,\n    filesystem\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    externalAci: aci.external_encoded_aci ? aci.external_encoded_aci.map(a => a.contract || a.namespace) : [],\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  // Check for valid contract address and contract code\n  if (contractAddress) {\n    if (!isAddressValid(contractAddress, 'ct')) throw new Error('Invalid contract address')\n    const contract = await this.getContract(contractAddress).catch(e => null)\n    if (!contract || !contract.active) throw new Error(`Contract with address ${contractAddress} not found on-chain or not active`)\n    // Check if we are using compiler version gte then 4.1.0(has comparing bytecode API)\n    if (!forceCodeCheck && semverSatisfies(this.compilerVersion, '4.1.0', COMPILER_LT_VERSION)) {\n      const onChanByteCode = (await this.getContractByteCode(contractAddress)).bytecode\n      const isCorrespondingBytecode = await this.validateByteCodeAPI(onChanByteCode, instance.source, instance.options).catch(e => false)\n      if (!isCorrespondingBytecode) throw new Error('Contract source do not correspond to the contract bytecode deployed on the chain')\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n  /**\n   * Decode Events\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (fn: String, events: Array) => DecodedEvents: Array\n   * @param {String} fn Function name\n   * @param {Array} events Array of encoded events(callRes.result.log)\n   * @return {Object} DecodedEvents\n   */\n  instance.decodeEvents = eventDecode({ instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst eventDecode = ({ instance }) => (fn, events) => {\n  return decodeEvents(events, getFunctionACI(instance.aci, fn, { external: instance.externalAci }))\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn, { external: instance.externalAci })\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n  if (\n    BigNumber(opt.amount).gt(0) &&\n    (Object.prototype.hasOwnProperty.call(fnACI, 'payable') && !fnACI.payable)\n  ) throw new Error(`You try to pay \"${opt.amount}\" to function \"${fn}\" which is not payable. Only payable function can accept tokens`)\n  params = !opt.skipArgsConvert ? await prepareArgs(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    ...opt.waitMined ? await decodeCallResult(result, fnACI, opt) : {}\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n  const source = opt.source || instance.source\n\n  if (!instance.compiled) await instance.compile(opt)\n  init = !opt.skipArgsConvert ? await prepareArgs(fnACI, init) : init\n\n  if (opt.callStatic) {\n    return client.contractCallStatic(source, null, 'init', init, {\n      top: opt.top,\n      options: opt,\n      bytecode: instance.compiled\n    })\n  } else {\n    const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n    instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n    return instance.deployInfo\n  }\n}\n\nconst compile = ({ client, instance }) => async (options = {}) => {\n  const { bytecode } = await client.contractCompile(instance.source, { ...instance.options, ...options })\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\n\nexport const ContractACI = AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\nexport default ContractACI\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/string'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\nimport { AMOUNT, DEPOSIT, DRY_RUN_ACCOUNT, GAS, MIN_GAS_PRICE } from '../tx/builder/schema'\nimport { decode, produceNameId } from '../tx/builder/helpers'\nimport TxObject from '../tx/tx-object'\n\nasync function sendAndProcess (tx, options) {\n  const txData = await this.send(tx, options)\n\n  if (options.waitMined === false) {\n    return { hash: txData.hash, rawTx: txData.rawTx }\n  }\n\n  const result = await this.getTxInfo(txData.hash)\n\n  if (result.returnType !== 'ok') {\n    await this.handleCallError({ result, tx: TxObject({ tx: txData.rawTx }), rawTx: txData.rawTx })\n  }\n\n  return { hash: txData.hash, tx: TxObject({ tx: txData.rawTx }), result, txData, rawTx: txData.rawTx }\n}\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @param {Object} tx Unpacked transaction\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError ({ result, tx, rawTx }) {\n  const error = Buffer.from(result.returnValue).toString()\n  const decodedError = isBase64(error.slice(3))\n    ? Buffer.from(error.slice(3), 'base64').toString()\n    : await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(\n    new Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), {\n      ...result,\n      tx,\n      error,\n      rawTx,\n      decodedError\n    }\n  )\n}\n\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @param {Object} [options.backend='fate'] Compiler backend\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args, options) {\n  return this.contractEncodeCallDataAPI(source, name, args, options)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array|String} args Argument's or callData for call/deploy transaction\n * @param {Object} [options={}]  Options\n * @param {String} [options.top] Block hash on which you want to call contract\n * @param {String} [options.bytecode] Block hash on which you want to call contract\n * @param {Object} [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.options.filesystem] Contract external namespaces map\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {}, bytecode } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Prepare call-data\n  const callData = Array.isArray(args) ? await this.contractEncodeCall(source, name, args, opt) : args\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n  // Prepare nonce\n  const nonce = top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  if (name === 'init') {\n    // Prepare deploy transaction\n    const { tx } = await this.contractCreateTx(R.merge(opt, {\n      callData,\n      code: bytecode,\n      ownerId: callerId,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  } else {\n    // Prepare `call` transaction\n    const tx = await this.contractCallTx(R.merge(opt, {\n      callerId,\n      contractId: await this.resolveName(address, 'ct', { resolveByNode: true }),\n      callData,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  }\n}\n\nasync function dryRunContractTx (tx, callerId, source, name, opt = {}) {\n  const { top } = opt\n  // Resolve Account for Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  // Dry-run\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // Process response\n  if (status !== 'ok') throw Object.assign(new Error('Dry run error, ' + reason), { tx: TxObject({ tx }), dryRunParams: { accounts: [dryRunAccount], top } })\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError({ result: callObj, tx: TxObject({ tx }) })\n  }\n  return {\n    tx: TxObject({ tx }),\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, opt)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address or AENS name\n * @param {String} name Name of function to call\n * @param {Array|String} argsOrCallData Argument's array or callData for call function\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, argsOrCallData = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: await this.resolveName(address, 'ct', { resolveByNode: true }),\n    callData: Array.isArray(argsOrCallData) ? await this.contractEncodeCall(source, name, argsOrCallData, opt) : argsOrCallData\n  }))\n\n  const { hash, rawTx, result, txData } = await sendAndProcess.call(this, tx, opt)\n  return {\n    hash,\n    rawTx,\n    result,\n    txData,\n    decode: () => result ? this.contractDecodeData(source, name, result.returnValue, result.returnType, opt) : {}\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array|String} initState Arguments of contract constructor(init) function. Can be array of arguments or callData string\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = Array.isArray(initState) ? await this.contractEncodeCall(source, 'init', initState, opt) : initState\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx, result, txData } = await sendAndProcess.call(this, tx, opt)\n  return Object.freeze({\n    result,\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    txData,\n    address: contractId,\n    call: async (name, args = [], options = {}) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n    callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, {\n      ...options,\n      options: { onAccount: opt.onAccount, ...R.merge(opt, options.options) }\n    }),\n    createdAt: new Date()\n  })\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @param {Object} [options.backend='aevm'] Contract backend version (aevm|fate)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args, R.merge(opt, options)),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, R.merge(opt, options)),\n    deployStatic: async (init, options = {}) => this.contractCallStatic(source, null, 'init', init, {\n      bytecode,\n      top: options.top,\n      options: R.merge(opt, options)\n    })\n  }, { bytecode }))\n}\n\n/**\n * Utility method to create a delegate signature for a contract\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String[]} ids The list of id's to prepend\n * @param {Object} [opt={}] options\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature in hex representation\n */\nasync function delegateSignatureCommon (ids = [], opt = {}) {\n  return this.sign(\n    Buffer.concat(\n      [\n        Buffer.from(this.getNetworkId(opt)),\n        decode(await this.address(opt)),\n        ...ids.map(e => decode(e))\n      ]\n    ),\n    opt\n  ).then(s => Buffer.from(s).toString('hex'))\n}\n\n/**\n * Helper to generate a signature to delegate a name pre-claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNamePreclaimSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} name The name being claimed\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameClaimSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name transfer to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being transferred\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameTransferSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name revoke to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being revoked\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameRevokeSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle register to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRegisterSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle extend to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleExtendSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle respond to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} queryId Oracle Query Id\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRespondSignature (queryId, contractId, opt = {}) {\n  return this.delegateSignatureCommon([queryId, contractId], opt)\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    dryRunContractTx,\n    handleCallError,\n    // Delegation for contract\n    // AENS\n    delegateSignatureCommon,\n    delegateNamePreclaimSignature,\n    delegateNameClaimSignature,\n    delegateNameTransferSignature,\n    delegateNameRevokeSignature,\n    // Oracle\n    delegateOracleRegisterSignature,\n    delegateOracleExtendSignature,\n    delegateOracleRespondSignature\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: DEPOSIT,\n        gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n        amount: AMOUNT,\n        gas: GAS,\n        options: '',\n        dryRunAccount: DRY_RUN_ACCOUNT\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { hash } from '../../utils/crypto'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n\n  return { bytecode, authFun: hash(fnName) }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { ContractAPI } from '../../ae/contract'\nimport { TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = ContractAPI.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Get abi\n  const { abiVersion } = await this.getVmVersion(TX_TYPE.contractCall)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: abiVersion, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve !== undefined) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","import * as R from 'ramda'\n\nconst asEnum = (array) => R.zipObj(array, array)\n\nexport const VERSION = 1\n\nexport const MESSAGE_DIRECTION = asEnum(['to_waellet', 'to_aepp'])\n\nexport const WALLET_TYPE = asEnum([\n  'window',\n  'extension'\n])\n\nexport const NOTIFICATIONS = asEnum([\n  'readyToConnect',\n  'closeConnection',\n  'updateNetwork',\n  'updateAddress'\n])\n\nexport const REQUESTS = asEnum([\n  'connect',\n  'subscribeAddress',\n  'sign',\n  'address',\n  'signMessage'\n])\n\nexport const SUBSCRIPTION_VALUES = asEnum([\n  'current',\n  'connected'\n])\n\nexport const SUBSCRIPTION_TYPES = asEnum([\n  'subscribe',\n  'unsubscribe'\n])\n\nexport const METHODS = {\n  wallet: {\n    [NOTIFICATIONS.readyToConnect]: 'connection.announcePresence',\n    [NOTIFICATIONS.updateAddress]: 'address.update'\n  },\n  aepp: {\n    [REQUESTS.address]: 'address.get',\n    [REQUESTS.connect]: 'connection.open',\n    [REQUESTS.sign]: 'transaction.sign',\n    [REQUESTS.signMessage]: 'message.sign',\n    [REQUESTS.subscribeAddress]: 'address.subscribe'\n  },\n  [NOTIFICATIONS.updateNetwork]: 'networkId.update',\n  [NOTIFICATIONS.closeConnection]: 'connection.close'\n}\n\nexport const RPC_STATUS = {\n  CONNECTED: 'CONNECTED',\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTION_REJECTED: 'CONNECTION_REJECTED',\n  WAITING_FOR_CONNECTION_APPROVE: 'WAITING_FOR_CONNECTION_APPROVE',\n  WAITING_FOR_CONNECTION_REQUEST: 'WAITING_FOR_CONNECTION_REQUEST',\n  WAITING_FOR_SUBSCRIPTION: 'WAITING_FOR_SUBSCRIPTION'\n}\n\nexport const ERRORS = {\n  broadcastFailde: (error = {}) => ({\n    code: 3,\n    data: error,\n    message: 'Broadcast failed'\n  }),\n  invalidTransaction: (error = {}) => ({\n    code: 2,\n    data: error,\n    message: 'Invalid transaction'\n  }),\n  rejectedByUser: (error = {}) => ({\n    code: 4,\n    data: error,\n    message: 'Operation rejected by user'\n  }),\n  connectionDeny: (error = {}) => ({\n    code: 9,\n    data: error,\n    message: 'Wallet deny your connection request'\n  }),\n  permissionDeny: (error = {}) => ({\n    code: 11,\n    data: error,\n    message: `You are not subscribed for account ${error.account}`\n  }),\n  internalError: (error = {}) => ({\n    code: 12,\n    data: error,\n    message: error.msg\n  }),\n  notAuthorize: (error = {}) => ({\n    code: 10,\n    data: error,\n    message: 'You are not connected to the wallet'\n  }),\n  unsupportedProtocol: (error = {}) => ({\n    code: 5,\n    data: error,\n    message: 'Unsupported Protocol Version'\n  }),\n  unsupportedNetwork: (error = {}) => ({\n    code: 8,\n    data: error,\n    message: 'Unsupported Network'\n  })\n}\n","/**\n * Browser helper functions\n */\nimport { isMemoryAccount } from '../../account/selector'\n\nconst isWeb = () => window && window.location && window.location.protocol.startsWith('http')\n\nexport const getBrowserAPI = (force = false) => {\n  const { chrome, browser } = window\n  // Chrome, Opera support\n  if (typeof chrome !== 'undefined' && chrome === Object(chrome)) return chrome\n  // Firefox support\n  if (typeof browser !== 'undefined' && browser === Object(browser)) return browser\n  if (!force) throw new Error('Browser is not detected')\n  return {}\n}\n\nconst isExtensionContext = () => {\n  const browser = getBrowserAPI(true)\n  return typeof browser === 'object' && browser && typeof browser.extension === 'object'\n}\n\nexport const isContentScript = () => isExtensionContext() && isWeb()\n\nexport const isInIframe = () => window !== window.parent\n\nexport const getWindow = (force = false) => {\n  if (!window && !force) throw new Error('Browser is not detected')\n  return window\n}\n\n/**\n * RPC helper functions\n */\nexport const sendMessage = (connection) => {\n  let messageId = 0\n\n  return ({ id, method, params, result, error }, isNotificationOrResponse = false) => {\n    // Increment id for each request\n    isNotificationOrResponse || (messageId += 1)\n    id = isNotificationOrResponse ? (id || null) : messageId\n    const msgData = params\n      ? { params }\n      : result\n        ? { result }\n        : { error }\n    connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id ? { id } : {},\n      method,\n      ...msgData\n    })\n    return id\n  }\n}\n\nexport const receive = (handler) => (msg, origin) => {\n  if (!msg || !msg.jsonrpc || msg.jsonrpc !== '2.0' || !msg.method) {\n    console.warn('Receive invalid message', msg)\n    return\n  }\n  handler(msg, origin)\n}\n\nexport const getHandler = (schema, msg, { debug = false } = {}) => {\n  const handler = schema[msg.method]\n  if (!handler || typeof handler !== 'function') {\n    debug && console.log(`Unknown message method ${msg.method}`)\n    return () => async () => true\n  }\n  return handler\n}\n\nexport const message = (method, params = {}) => ({ method, params })\n\nexport const responseMessage = (id, method, { error, result } = {}) => ({ id, method, ...(error ? { error } : { result }) })\n\nexport const sendResponseMessage = (client) => (id, method, data) => client.sendMessage(responseMessage(id, method, data), true)\n\nexport const voidFn = () => undefined\n\nexport const isValidAccounts = (accounts) => (['', 'connected', 'current'].filter(k => typeof (k ? accounts[k] : accounts) === 'object')).length === 3\n\nexport const resolveOnAccount = (addresses, onAccount, opt = {}) => {\n  if (!addresses.find(a => a === onAccount)) {\n    if (typeof opt.onAccount !== 'object' || !isMemoryAccount(opt.onAccount)) throw new Error('Provided onAccount should be a MemoryAccount')\n    onAccount = opt.onAccount\n  }\n  return onAccount\n}\n","/**\n * RPC client helpers\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @export { RpcClient, RpcClients }\n * @example import RpcClient from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n * @example import RpcClients from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n */\nimport stampit from '@stamp/it'\n\nimport { METHODS, RPC_STATUS, SUBSCRIPTION_TYPES } from '../schema'\nimport { receive, sendMessage, message, isValidAccounts } from '../helpers'\n\n/**\n * Contain functionality for managing multiple RPC clients (RpcClient stamp)\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client.RpcClients\n * @function\n * @rtype Stamp\n * @return {Object}\n */\nexport const RpcClients = stampit({\n  init () {\n    this.clients = new Map()\n  },\n  methods: {\n    /**\n     * Check if has client by id\n     * @function hasClient\n     * @instance\n     * @memberOf @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n     * @rtype (id: (String|Number)) => Boolean\n     * @param {(String|Number)} id Client ID\n     * @return {Boolean}\n     */\n    hasClient (id) {\n      return this.clients.has(id)\n    },\n    /**\n     * Add new client\n     * @function addClient\n     * @instance\n     * @rtype (id: (String|Number), connectionInfo: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} connectionData Object containing `connectionInfo` and `connection` objects\n     * @return {void}\n     */\n    addClient (id, connectionData) {\n      if (this.hasClient(id)) console.warn(`Wallet RpcClient with id ${id} already exist`)\n      this.clients.set(id, RpcClient({ id, ...connectionData }))\n    },\n    /**\n     * Get clien by id\n     * @function getClient\n     * @instance\n     * @rtype (id: (String|Number)) => Object\n     * @param {(String|Number)} id Client ID\n     * @return {Object} RpcClient\n     */\n    getClient (id) {\n      return this.clients.get(id)\n    },\n    /**\n     * Remove and disiconnect client by ID\n     * @function removeClient\n     * @instance\n     * @rtype (id: (String|Number), { forceConnectionClose: boolean = false }) => boolean\n     * @param {(String|Number)} id Client ID\n     * @param forceConnectionClose\n     * @return {Boolean}\n     */\n    removeClient (id, { forceConnectionClose = false } = {}) {\n      if (!this.hasClient(id)) throw new Error(`Wallet RpcClient with id ${id} do not exist`)\n      this.clients.get(id).disconnect(forceConnectionClose)\n      this.clients.delete(id)\n      return true\n    },\n    /**\n     * Update client info by id\n     * @function updateClientInfo\n     * @instance\n     * @rtype (id: (String|Number), info: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} info Info to update (will be merged with current info object)\n     * @return {void}\n     */\n    updateClientInfo (id, info) {\n      const client = this.getClient(id)\n      client.info = { ...client.info, ...info }\n      this.clients.set(id, client)\n    },\n    /**\n     * Send notification to all client passing condition\n     * @function sendNotificationByCondition\n     * @instance\n     * @rtype (msg: Object, condition: Function) => void\n     * @param {Object} msg Msg object\n     * @param {Function} condition Condition function of (client: RpcClient) => Boolean\n     * @param transformMessage\n     * @return {void}\n     */\n    sendNotificationByCondition (msg, condition, transformMessage) {\n      if (typeof condition !== 'function') throw new Error('Condition argument must be a function which return boolean')\n      const clients = Array.from(\n        this.clients.values()\n      )\n        .filter(condition)\n      clients.forEach(client => client.sendMessage(typeof transformMessage === 'function' ? transformMessage(client, msg) : msg, true))\n    },\n    /**\n     * Call provided function for each rpc client which by condition\n     * @function operationByCondition\n     * @instance\n     * @rtype (condition: Function, operation: Function) => void\n     * @param {Function} condition Condition function of (client: RpcClient) => Boolean\n     * @param {Function} operation Operation function of (client: RpcClient) => void\n     * @return {void}\n     */\n    operationByCondition (condition, operation) {\n      if (typeof condition !== 'function') throw new Error('Condition argument must be a function which return boolean')\n      if (typeof operation !== 'function') throw new Error('Operation argument must be a function which return boolean')\n      Array\n        .from(this.clients.values())\n        .filter(condition)\n        .forEach(operation)\n    }\n  }\n})\n\n/**\n * Contain functionality for using RPC conection\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String} param.id Client id\n * @param {String} param.name Client name\n * @param {Object} param.connection Connection object\n * @param {Function[]} param.handlers Arrays with two function for handling messages ([ onMessage: Function, onDisconnect: Function])\n * @return {Object}\n */\nexport const RpcClient = stampit({\n  init ({ id, name, networkId, icons, connection, handlers: [onMessage, onDisconnect] }) {\n    this.id = id\n    this.connection = connection\n    this.info = { name, networkId, icons }\n    // {\n    //    [msg.id]: { resolve, reject }\n    // }\n    this.callbacks = {}\n    // {\n    //    [id]: { accept, deny }\n    // }\n    this.actions = {}\n    // ['connected', 'current']\n    this.addressSubscription = []\n    // {\n    //    connected: { [pub]: {...meta} },\n    //    current: { [pub]: {...meta} }\n    // }\n    this.accounts = {}\n\n    this.sendMessage = sendMessage(this.connection)\n    const disconnect = (aepp, connection) => {\n      this.disconnect(true)\n      typeof onDisconnect === 'function' && onDisconnect(connection, this)\n    }\n    connection.connect(receive(onMessage), disconnect)\n  },\n  propertyDescriptors: {\n    currentAccount: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.isHasAccounts()\n          ? Object.keys(this.accounts.current)[0]\n          : undefined\n      }\n    },\n    addresses: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.isHasAccounts()\n          ? [...Object.keys(this.accounts.current), ...Object.keys(this.accounts.connected)]\n          : []\n      }\n    },\n    origin: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.connection\n      }\n    }\n  },\n  methods: {\n    isHasAccounts () {\n      return typeof this.accounts === 'object' &&\n        typeof this.accounts.connected === 'object' &&\n        typeof this.accounts.current === 'object'\n    },\n    isSubscribed () {\n      return this.addressSubscription.length && this.isHasAccounts()\n    },\n    /**\n     * Check if aepp has access to account\n     * @function hasAccessToAccount\n     * @instance\n     * @rtype (address: String) => Boolean\n     * @param {String} address Account address\n     * @return {Boolean} is connected\n     */\n    hasAccessToAccount (address) {\n      return !!address && this.addresses.find(a => a === address)\n    },\n    /**\n     * Check if is connected\n     * @function isConnected\n     * @instance\n     * @rtype () => Boolean\n     * @return {Boolean} is connected\n     */\n    isConnected () {\n      return this.connection.isConnected() && this.info.status === RPC_STATUS.CONNECTED\n    },\n    /**\n     * Get selected account\n     * @function getCurrentAccount\n     * @instance\n     * @rtype ({ onAccount } = {}) => String\n     * @param {Object} options Options\n     * @return {String}\n     */\n    getCurrentAccount ({ onAccount } = {}) {\n      return onAccount || Object.keys(this.accounts.current)[0]\n    },\n    /**\n     * Disconnect\n     * @function disconnect\n     * @instance\n     * @rtype () => void\n     * @return {void}\n     */\n    disconnect (forceConnectionClose = false) {\n      this.info.status = RPC_STATUS.DISCONNECTED\n      this.addressSubscription = []\n      this.accounts = {}\n      forceConnectionClose || this.connection.disconnect()\n    },\n    /**\n     * Update accounts and sent `update.address` notification to AEPP\n     * @param {{ current: Object, connected: Object }} accounts Object with current and connected accounts\n     * @param {{ forceNotification: Boolean }} [options={ forceNotification: false }] Don not sent update notification to AEPP\n     */\n    setAccounts (accounts, { forceNotification = false } = {}) {\n      if (!isValidAccounts(accounts)) {\n        throw new Error('Invalid accounts object. Should be object like: `{ connected: {}, selected: {} }`')\n      }\n      this.accounts = accounts\n      if (!forceNotification) {\n        // Sent notification about account updates\n        this.sendMessage(message(METHODS.wallet.updateAddress, this.accounts), true)\n      }\n    },\n    /**\n     * Update subscription\n     * @function updateSubscription\n     * @instance\n     * @rtype (type: String, value: String) => void\n     * @param {String} type Subscription type\n     * @param {String} value Subscription value\n     * @return {String[]}\n     */\n    updateSubscription (type, value) {\n      if (type === SUBSCRIPTION_TYPES.subscribe && !this.addressSubscription.includes(value)) {\n        this.addressSubscription.push(value)\n      }\n      if (type === SUBSCRIPTION_TYPES.unsubscribe && this.addressSubscription.includes(value)) {\n        this.addressSubscription = this.addressSubscription.filter(s => s !== value)\n      }\n      return this.addressSubscription\n    },\n    /**\n     * Add new action to actions\n     * @function addAction\n     * @instance\n     * @rtype (action: Object, [r: Function, j: Function]) => Object\n     * @param {Object} action Action object\n     * @param {Function[]} resolvers Array with two function [resolve, reject] action\n     * @return {Object}\n     */\n    addAction (action, [r, j]) {\n      const removeAction = ((ins) => (id) => delete ins[id])(this.actions)\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, action.id)) throw new Error('Action for this request already exist')\n      this.actions[action.id] = {\n        ...action,\n        accept (...args) {\n          removeAction(action.id)\n          r(...args)\n        },\n        deny (...args) {\n          removeAction(action.id)\n          j(...args)\n        }\n      }\n      return this.actions[action.id]\n    },\n    /**\n     * Make a request\n     * @function request\n     * @instance\n     * @rtype (name: String, params: Object) => Promise\n     * @param {String} name Method name\n     * @param {Object} params Method params\n     * @return {Promise} Promise which will be resolved after receiving response message\n     */\n    request (name, params) {\n      const msgId = this.sendMessage(message(name, params))\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, msgId)) throw new Error('Callback Already exist')\n      return new Promise((resolve, reject) => {\n        this.callbacks[msgId] = { resolve, reject }\n      })\n    },\n    /**\n     * Process response message\n     * @function processResponse\n     * @instance\n     * @rtype (msg: Object, transformResult: Function) => void\n     * @param {Object} msg Message object\n     * @param {Function=} transformResult Optional parser function for message\n     * @return {void}\n     */\n    processResponse ({ id, error, result }, transformResult) {\n      if (!this.callbacks[id]) throw new Error(`Can't find callback for this messageId ${id}`)\n      if (result) {\n        this.callbacks[id].resolve(...typeof transformResult === 'function'\n          ? transformResult({ id, result })\n          : [result])\n      } else {\n        this.callbacks[id].reject(error)\n      }\n      delete this.callbacks[id]\n    }\n  }\n})\n","/**\n * RPC handler for AEPP side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @export AeppRpc\n * @example import ContentScriptBridge from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc'\n */\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nimport Ae from '../../../ae'\nimport { RpcClient } from './rpc-clients'\nimport { getHandler, message, voidFn } from '../helpers'\nimport { METHODS, RPC_STATUS, VERSION } from '../schema'\n\nconst NOTIFICATIONS = {\n  [METHODS.wallet.updateAddress]: (instance) =>\n    ({ params }) => {\n      instance.rpcClient.accounts = params\n      instance.onAddressChange(params)\n    },\n  [METHODS.updateNetwork]: (instance) =>\n    (msg) => {\n      instance.rpcClient.info.networkId = msg.params.networkId\n      instance.onNetworkChange(msg.params)\n    },\n  [METHODS.closeConnection]: (instance) =>\n    (msg) => {\n      instance.disconnectWallet()\n      instance.onDisconnect(msg.params)\n    }\n}\n\nconst RESPONSES = {\n  [METHODS.aepp.address]: (instance) =>\n    (msg) => instance.rpcClient.processResponse(msg),\n  [METHODS.aepp.connect]: (instance) =>\n    (msg) => {\n      if (msg.result) instance.rpcClient.info.status = RPC_STATUS.CONNECTED\n      instance.rpcClient.processResponse(msg)\n    },\n  [METHODS.aepp.subscribeAddress]: (instance) =>\n    (msg) => {\n      if (msg.result) {\n        msg.result.address && (instance.rpcClient.accounts = msg.result.address)\n        msg.result.subscription && (instance.rpcClient.addressSubscription = msg.result.subscription)\n      }\n\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result])\n    },\n  [METHODS.aepp.sign]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signedTransaction || result.transactionHash])\n    },\n  [METHODS.aepp.signMessage]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signature])\n    }\n}\n\nconst REQUESTS = {}\n\nconst handleMessage = (instance) => async (msg) => {\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, { debug: instance.debug })(instance)(msg)\n  } else if (Object.prototype.hasOwnProperty.call(instance.rpcClient.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, { debug: instance.debug })(instance)(msg)\n  } else {\n    return getHandler(REQUESTS, msg, { debug: instance.debug })(instance)(msg)\n  }\n}\n\n/**\n * Contain functionality for wallet interaction and connect it to sdk\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Aepp name\n * @param {Function} onAddressChange Call-back function for update address event\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @param {Function} onNetworkChange Call-back function for update network event\n * @param {Object} connection Wallet connection object\n * @return {Object}\n */\nexport const AeppRpc = Ae.compose({\n  async init ({ name, onAddressChange = voidFn, onDisconnect = voidFn, onNetworkChange = voidFn, connection, forceValidation = false, debug = false }) {\n    const eventsHandlers = ['onDisconnect', 'onAddressChange', 'onNetworkChange']\n    this.connection = connection\n    this.name = name\n    this.debug = debug\n\n    if (connection) {\n      // Init RPCClient\n      await this.connectToWallet(connection)\n    }\n    // Event callbacks\n    this.onDisconnect = onDisconnect\n    this.onAddressChange = onAddressChange\n    this.onNetworkChange = onNetworkChange\n    // validation\n    eventsHandlers.forEach(event => {\n      if (!forceValidation && typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n  },\n  deepProps: { Ae: { defaults: { walletBroadcast: true } } },\n  methods: {\n    sign () {\n    },\n    addresses () {\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      return [this.rpcClient.currentAccount, ...Object.keys(this.rpcClient.accounts.connected)]\n    },\n    /**\n     * Connect to wallet\n     * @function connectToWallet\n     * @instance\n     * @rtype (connection: Object) => void\n     * @param {Object} connection Wallet connection object\n     * @return {void}\n     */\n    async connectToWallet (connection) {\n      if (this.rpcClient && this.rpcClient.isConnected()) throw new Error('You are already connected to wallet ' + this.rpcClient)\n      this.rpcClient = RpcClient({\n        connection,\n        networkId: this.getNetworkId({ force: true }),\n        ...connection.connectionInfo,\n        id: uuid(),\n        handlers: [handleMessage(this), this.onDisconnect]\n      })\n      return this.sendConnectRequest()\n    },\n    /**\n     * Disconnect from wallet\n     * @function disconnectWallet\n     * @instance\n     * @rtype (force: Boolean = false) => void\n     * @param {Boolean} sendDisconnect=false Force sending close connection message\n     * @return {void}\n     */\n    async disconnectWallet (sendDisconnect = true) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      sendDisconnect && this.rpcClient.sendMessage(message(METHODS.closeConnection, { reason: 'bye' }), true)\n      this.rpcClient.disconnect()\n      this.rpcClient = null\n    },\n    async address ({ onAccount } = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      const current = this.rpcClient.currentAccount\n      if (!current) throw new Error('You do not subscribed for accounts.')\n      if (onAccount && !this.rpcClient.hasAccessToAccount(onAccount)) throw new Error(`You are not have access to account ${onAccount}`)\n      return onAccount || current\n    },\n    /**\n     * Ask address from wallet\n     * @function askAddresses\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Address from wallet\n     */\n    async askAddresses () {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.request(METHODS.aepp.address)\n    },\n    /**\n     * Subscribe for addresses from wallet\n     * @function subscribeAddress\n     * @instance\n     * @rtype (type: String, value: String) => Promise\n     * @param {String} type Type of subscription can be one of ['current'(just for selected account updates), 'connected(all accounts)']\n     * @param {String} value Subscription action('subscribe'|'unsubscribe')\n     * @return {Promise} Address from wallet\n     */\n    async subscribeAddress (type, value) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      return this.rpcClient.request(METHODS.aepp.subscribeAddress, { type, value })\n    },\n    /**\n     * Overwriting of `signTransaction` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signTransaction\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signTransaction (tx, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) throw new Error(`You are not have access to account ${opt.onAccount}`)\n      return this.rpcClient.request(METHODS.aepp.sign, { ...opt, tx, returnSigned: true, networkId: this.getNetworkId() })\n    },\n    /**\n     * Overwriting of `signMessage` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signMessage\n     * @instance\n     * @rtype (msg: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signMessage (msg, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) throw new Error(`You are not have access to account ${opt.onAccount}`)\n      return this.rpcClient.request(METHODS.aepp.signMessage, { ...opt, message: msg })\n    },\n    /**\n     * Send connection request to wallet\n     * @function sendConnectRequest\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Connection response\n     */\n    async sendConnectRequest () {\n      return this.rpcClient.request(\n        METHODS.aepp.connect, {\n          name: this.name,\n          version: VERSION,\n          networkId: this.getNetworkId({ force: true })\n        }\n      )\n    },\n    /**\n     * Overwriting of `send` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * This method will sign, broadcast and wait until transaction will be accepted using rpc communication with wallet\n     * @function send\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @param {String} tx\n     * @param {Object} [options={}]\n     * @param {Object} [options.walletBroadcast=true]\n     * @return {Promise<Object>} Transaction broadcast result\n     */\n    async send (tx, options = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (options.onAccount && !this.rpcClient.hasAccessToAccount(options.onAccount)) throw new Error(`You are not have access to account ${options.onAccount}`)\n      const opt = R.merge(this.Ae.defaults, options)\n      if (!opt.walletBroadcast) {\n        const signed = await this.signTransaction(tx, { onAccount: opt.onAccount })\n        return this.sendTransaction(signed, opt)\n      }\n      return this.rpcClient.request(METHODS.aepp.sign, { onAccount: opt.onAccount, tx, returnSigned: false, networkId: this.getNetworkId() })\n    }\n  }\n})\n\nexport default AeppRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check, assertedType } from '../utils/crypto'\nimport { pause } from '../utils/other'\nimport { oracleQueryId } from '../tx/builder/helpers'\nimport { unpackTx } from '../tx/builder'\nimport { ORACLE_TTL, QUERY_FEE, QUERY_TTL, RESPONSE_TTL } from '../tx/builder/schema'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    pollQueries: this.pollForQueries.bind(this, oracleId),\n    postQuery: this.postQueryToOracle.bind(this, oracleId),\n    respondToQuery: this.respondToQuery.bind(this, oracleId),\n    extendOracle: this.extendOracleTtl.bind(this, oracleId),\n    getQuery: this.getQueryObject.bind(this, oracleId)\n  }\n}\n\n/**\n * Poll for oracle queries\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {Function} onQuery OnQuery callback\n * @param {Object} [options] Options object\n * @param {Number} [options.interval] Poll interval(default: 5000)\n * @return {Function} stopPolling - Stop polling function\n */\nfunction pollForQueries (oracleId, onQuery, { interval = 5000 } = {}) {\n  const knownQueryIds = new Set()\n  const checkNewQueries = async () => {\n    const queries = ((await this.getOracleQueries(oracleId)).oracleQueries || [])\n      .filter(({ id }) => !knownQueryIds.has(id))\n    queries.forEach(({ id }) => knownQueryIds.add(id))\n    if (queries.length) onQuery(queries)\n  }\n\n  checkNewQueries()\n  const intervalId = setInterval(checkNewQueries, interval)\n  // TODO: Return just a callback in the next major release\n  return Promise.resolve(() => clearInterval(intervalId))\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  const q = await this.getOracleQuery(oracleId, queryId)\n  return {\n    ...q,\n    decodedQuery: decodeBase64Check(q.query.slice(3)).toString(),\n    decodedResponse: decodeBase64Check(q.response.slice(3)).toString(),\n    respond: this.respondToQuery.bind(this, oracleId, queryId),\n    pollForResponse: this.pollForQueryResponse.bind(this, oracleId, queryId),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  for (let i = 0; i < attempts; i++) {\n    if (i) await pause(interval)\n    const { response } = await this.getOracleQuery(oracleId, queryId)\n    const responseBuffer = decodeBase64Check(assertedType(response, 'or'))\n    if (responseBuffer.length) {\n      return { response, decode: () => responseBuffer } // TODO: Return just responseBuffer\n    }\n  }\n  throw Error(`Giving up after ${(attempts - 1) * interval}ms`)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number|String} [options.fee] fee Transaction fee\n * @param {Number|String} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...await this.send(oracleRegisterTx, opt),\n    ...await this.getOracleObject(`ok_${accountId.slice(3)}`)\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  const queryId = oracleQueryId(senderId, unpackTx(oracleRegisterTx).tx.nonce, oracleId)\n  return {\n    ...await this.send(oracleRegisterTx, opt),\n    ...await this.getQueryObject(oracleId, queryId)\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...await this.send(oracleExtendTx, opt),\n    ...await this.getOracleObject(oracleId)\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...await this.send(oracleRespondTx, opt),\n    ...await this.getOracleObject(oracleId)\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    pollForQueries,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        queryFee: QUERY_FEE,\n        oracleTtl: ORACLE_TTL,\n        queryTtl: QUERY_TTL,\n        responseTtl: RESPONSE_TTL\n      }\n    }\n  }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI, ContractWithCompiler as Contract } from './contract'\nimport AeppRpc from '../utils/aepp-wallet-communication/rpc/aepp-rpc'\nimport Chain from '../chain/node'\nimport Tx from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nexport const Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\nexport const RpcAepp = Ae.compose(Tx, Oracle, Contract, Aens, Chain, AeppRpc)\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/**\n * RPC handler for WAELLET side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @export WalletRpc\n * @example import WalletRpc from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc'\n */\nimport Ae from '../../../ae'\nimport Accounts from '../../../accounts'\nimport Selector from '../../../account/selector'\nimport TxObject from '../../../tx/tx-object'\n\nimport { RpcClients } from './rpc-clients'\nimport { getBrowserAPI, getHandler, isValidAccounts, message, resolveOnAccount, sendResponseMessage } from '../helpers'\nimport { ERRORS, METHODS, RPC_STATUS, VERSION, WALLET_TYPE } from '../schema'\nimport { v4 as uuid } from 'uuid'\n\nconst rpcClients = RpcClients()\n\nconst NOTIFICATIONS = {\n  [METHODS.closeConnection]: (instance, { client }) =>\n    async (msg) => {\n      client.disconnect(true)\n      instance.onDisconnect(msg.params, client)\n    }\n}\n\nconst RESPONSES = {}\n\nconst REQUESTS = {\n  // Store client info and prepare two fn for each client `connect` and `denyConnection`\n  // which automatically prepare and send response for that client\n  [METHODS.aepp.connect] (callInstance, instance, client, { name, networkId, version, icons }) {\n    // Check if protocol and network is compatible with wallet\n    if (version !== VERSION) return { error: ERRORS.unsupportedProtocol() }\n\n    // Store new AEPP and wait for connection approve\n    rpcClients.updateClientInfo(client.id, {\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_APPROVE,\n      name,\n      networkId,\n      icons,\n      version\n    })\n\n    // Call onConnection callBack to notice Wallet about new AEPP\n    return callInstance(\n      'onConnection',\n      { name, networkId, version },\n      () => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTED })\n        return { result: instance.getWalletInfo() }\n      },\n      (error) => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTION_REJECTED })\n        return { error: ERRORS.connectionDeny(error) }\n      }\n    )\n  },\n  [METHODS.aepp.subscribeAddress] (callInstance, instance, client, { type, value }) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n\n    return callInstance(\n      'onSubscription',\n      { type, value },\n      async ({ accounts } = {}) => {\n        try {\n          const clientAccounts = accounts || instance.getAccounts()\n          if (!isValidAccounts(clientAccounts)) throw new Error('Invalid provided accounts object')\n          const subscription = client.updateSubscription(type, value)\n          client.setAccounts(clientAccounts, { forceNotification: true })\n          return {\n            result: {\n              subscription,\n              address: clientAccounts\n            }\n          }\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.address] (callInstance, instance, client) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    if (!client.isSubscribed()) return { error: ERRORS.notAuthorize() }\n\n    return callInstance(\n      'onAskAccounts',\n      {},\n      ({ accounts } = {}) => ({ result: accounts || [...Object.keys(client.accounts.current), ...Object.keys(client.accounts.connected)] }),\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.sign] (callInstance, instance, client, { tx, onAccount, networkId, returnSigned = false }) {\n    const address = onAccount || client.currentAccount\n    // Update client with new networkId\n    networkId && rpcClients.updateClientInfo(client.id, { networkId })\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    // Account permission check\n    if (!client.hasAccessToAccount(address)) return { error: ERRORS.permissionDeny({ account: address }) }\n    // NetworkId check\n    if (!networkId || networkId !== instance.getNetworkId()) return { error: ERRORS.unsupportedNetwork() }\n\n    return callInstance(\n      'onSign',\n      { tx, returnSigned, onAccount: address, txObject: TxObject.fromString(tx) },\n      async (rawTx, opt = {}) => {\n        let onAcc\n        try {\n          onAcc = resolveOnAccount(instance.addresses(), address, opt)\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n        try {\n          return {\n            result: {\n              ...returnSigned\n                ? { signedTransaction: await instance.signTransaction(rawTx || tx, { onAccount: onAcc }) }\n                : { transactionHash: await instance.send(rawTx || tx, { onAccount: onAcc, verify: false }) }\n            }\n          }\n        } catch (e) {\n          if (!returnSigned) {\n            // Validate transaction\n            const validationResult = await instance.unpackAndVerify(rawTx || tx)\n            if (validationResult.validation.length) return { error: ERRORS.invalidTransaction(validationResult) }\n            // Send broadcast failed error to aepp\n            return { error: ERRORS.broadcastFailde(e.message) }\n          }\n          throw e\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.signMessage] (callInstance, instance, client, { message, onAccount }) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    const address = onAccount || client.currentAccount\n    if (!client.hasAccessToAccount(address)) return { error: ERRORS.permissionDeny({ account: address }) }\n\n    return callInstance(\n      'onMessageSign',\n      { message, onAccount: address },\n      async (opt = {}) => {\n        try {\n          const onAcc = resolveOnAccount(instance.addresses(), address, opt)\n          return {\n            result: {\n              signature: await instance.signMessage(message, {\n                onAccount: onAcc,\n                returnHex: true\n              })\n            }\n          }\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  }\n}\n\nconst handleMessage = (instance, id) => async (msg, origin) => {\n  const client = rpcClients.getClient(id)\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, { debug: instance.debug })(instance, { client })(msg, origin)\n  }\n  if (Object.prototype.hasOwnProperty.call(client.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, { debug: instance.debug })(instance, { client })(msg, origin)\n  } else {\n    const { id, method } = msg\n    const callInstance = (methodName, params, accept, deny) => () => new Promise(resolve => {\n      instance[methodName](\n        client,\n        client.addAction({ id, method, params }, [\n          (...args) => resolve(accept(...args)), (...args) => resolve(deny(...args))\n        ]),\n        origin\n      )\n    })\n    // TODO make one structure for handler functions\n    const errorObjectOrHandler = getHandler(REQUESTS, msg, { debug: instance.debug })(callInstance, instance, client, msg.params)\n    const response = typeof errorObjectOrHandler === 'function' ? await errorObjectOrHandler() : errorObjectOrHandler\n    sendResponseMessage(client)(id, method, response)\n  }\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Wallet name\n * @param {Function} onConnection Call-back function for incoming AEPP connection (Second argument contain function for accept/deny request)\n * @param {Function} onSubscription Call-back function for incoming AEPP account subscription (Second argument contain function for accept/deny request)\n * @param {Function} onSign Call-back function for incoming AEPP sign request (Second argument contain function for accept/deny request)\n * @param {Function} onAskAccounts Call-back function for incoming AEPP get address request (Second argument contain function for accept/deny request)\n * @param {Function} onMessageSign Call-back function for incoming AEPP sign message request (Second argument contain function for accept/deny request)\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @return {Object}\n */\nexport const WalletRpc = Ae.compose(Accounts, Selector, {\n  init ({ name, onConnection, onSubscription, onSign, onDisconnect, onAskAccounts, onMessageSign, forceValidation = false, debug = false } = {}) {\n    this.debug = debug\n    const eventsHandlers = ['onConnection', 'onSubscription', 'onSign', 'onDisconnect', 'onMessageSign']\n    // CallBacks for events\n    this.onConnection = onConnection\n    this.onSubscription = onSubscription\n    this.onSign = onSign\n    this.onDisconnect = onDisconnect\n    this.onAskAccounts = onAskAccounts\n    this.onMessageSign = onMessageSign\n\n    eventsHandlers.forEach(event => {\n      if (!forceValidation && typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n    //\n    this.name = name\n    this.id = uuid()\n\n    const _selectAccount = this.selectAccount.bind(this)\n    const _addAccount = this.addAccount.bind(this)\n    const _selectNode = this.selectNode.bind(this)\n\n    // Overwrite AE methods\n    this.selectAccount = (address, { condition = () => true } = {}) => {\n      _selectAccount(address)\n      rpcClients.operationByCondition(\n        (client) =>\n          client.isConnected() &&\n          client.isSubscribed() &&\n          client.hasAccessToAccount(address) &&\n          condition(client),\n        (client) =>\n          client.setAccounts({\n            current: { [address]: {} },\n            connected: {\n              ...client.accounts.current,\n              ...Object.entries(client.accounts.connected)\n                .reduce((acc, [k, v]) => ({ ...acc, ...k !== address ? { [k]: v } : {} }), {})\n            }\n          })\n      )\n    }\n    this.addAccount = async (account, { select, meta = {}, condition = () => true } = {}) => {\n      await _addAccount(account, { select })\n      const address = await account.address()\n      // Send notification 'update.address' to all Aepp which are subscribed for connected accounts\n      rpcClients.operationByCondition(\n        (client) =>\n          client.isConnected() &&\n          client.isSubscribed() &&\n          condition(client),\n        (client) =>\n          client.setAccounts({\n            current: { ...select ? { [address]: meta } : client.accounts.current },\n            connected: {\n              ...select ? client.accounts.current : { [address]: meta },\n              ...client.accounts.connected\n            }\n          })\n      )\n    }\n    this.selectNode = (name) => {\n      _selectNode(name)\n      // Send notification 'update.network' to all Aepp which connected\n      rpcClients.sendNotificationByCondition(\n        message(METHODS.updateNetwork, { networkId: this.getNetworkId() }),\n        (client) => client.isConnected()\n      )\n    }\n  },\n  methods: {\n    /**\n     * Get RpcClients object which contain all connected AEPPS\n     * @function getClients\n     * @instance\n     * @rtype () => Object\n     * @return {Object}\n     */\n    getClients () {\n      return rpcClients\n    },\n    /**\n     * Remove specific RpcClient by ID\n     * @function removeRpcClient\n     * @instance\n     * @rtype (id: string) => Boolean\n     * @param {String} id Client ID\n     * @param {Object} [opt = {}]\n     * @return {Object}\n     */\n    removeRpcClient (id, opt = { forceConnectionClose: false }) {\n      return rpcClients.removeClient(id, opt)\n    },\n    /**\n     * Add new AEPP connection\n     * @function addRpcClient\n     * @instance\n     * @rtype (clientConnection: Object) => Object\n     * @param {Object} clientConnection AEPP connection object\n     * @return {String} Client ID\n     */\n    addRpcClient (clientConnection) {\n      // @TODO  detect if aepp has some history based on origin????: if yes use this instance for connection\n      const id = uuid()\n      rpcClients.addClient(\n        id,\n        {\n          id,\n          info: { status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST },\n          connection: clientConnection,\n          handlers: [handleMessage(this, id), this.onDisconnect]\n        }\n      )\n      return id\n    },\n    /**\n     * Share wallet info\n     * Send shareWalletInfo message to notify AEPP about wallet\n     * @function shareWalletInfo\n     * @instance\n     * @rtype (postFn: Function) => void\n     * @param {Function} postFn Send message function like `(msg) => void`\n     * @return {void}\n     */\n    shareWalletInfo (postFn) {\n      postFn({\n        jsonrpc: '2.0',\n        ...message(METHODS.wallet.readyToConnect, { ...this.getWalletInfo() })\n      })\n    },\n    /**\n     * Get Wallet info object\n     * @function getWalletInfo\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with wallet information(id, name, network, ...)\n     */\n    getWalletInfo () {\n      const runtime = getBrowserAPI(true).runtime\n      return {\n        id: runtime && runtime.id ? runtime.id : this.id,\n        name: this.name,\n        networkId: this.getNetworkId(),\n        origin: window.location.origin,\n        type: runtime && runtime.id ? WALLET_TYPE.extension : WALLET_TYPE.window\n      }\n    },\n    /**\n     * Get Wallet accounts\n     * @function getAccounts\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with accounts information({ connected: Object, current: Object })\n     */\n    getAccounts () {\n      return {\n        current: this.Selector.address ? { [this.Selector.address]: {} } : {},\n        connected: this.addresses()\n          .filter(a => a !== this.Selector.address)\n          .reduce((acc, a) => ({ ...acc, [a]: {} }), {})\n      }\n    }\n  }\n})\n\nexport default WalletRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport * as R from 'ramda'\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport Tx from '../tx/tx'\nimport TxBase from '../tx'\nimport Contract from './contract'\nimport GeneralizeAccount from '../contract/ga'\nimport { WalletRpc } from '../utils/aepp-wallet-communication/rpc/wallet-rpc'\nimport Oracle from './oracle'\nimport Aens from './aens'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(TxBase.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nexport const Wallet = Ae.compose(Accounts, Chain, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport const RpcWallet = Ae.compose(WalletRpc, Tx, Contract, Oracle, Aens, GeneralizeAccount, Chain)\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport JsonBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection, awaitingReconnection, channelOpen } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nexport const options = new WeakMap()\nexport const status = new WeakMap()\nexport const state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nexport const eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nexport const channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\nexport const fsmId = new WeakMap()\n\nexport function emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nexport function changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nexport function changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nexport function send (channel, message) {\n  const { debug = false } = options.get(channel)\n  if (debug) console.log('Send message: ', message)\n  websockets.get(channel).send(JsonBig.stringify(message))\n}\n\nexport function enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JsonBig.parse(data)\n  const { debug = false } = options.get(channel)\n  if (debug) console.log('Receive message: ', message)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nexport function call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nexport function disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nexport async function initialize (channel, { url, ...channelOptions }) {\n  options.set(channel, channelOptions)\n  fsm.set(channel, {\n    handler: channelOptions.existingFsmId ? awaitingReconnection : awaitingConnection\n  })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n\n  const wsUrl = new URL(url)\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value))\n  wsUrl.searchParams.set('protocol', 'json-rpc')\n  changeStatus(channel, 'connecting')\n  const ws = new W3CWebSocket(wsUrl.toString())\n  await new Promise((resolve, reject) => Object.assign(ws, {\n    onerror: reject,\n    onopen: () => {\n      resolve()\n      changeStatus(channel, 'connected')\n      if (channelOptions.reconnectTx) {\n        enterState(channel, { handler: channelOpen })\n        setTimeout(async () => changeState(channel,\n          (await call(channel, 'channels.get.offchain_state', {})).signed_tx\n        ))\n      }\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  }))\n  websockets.set(channel, ws)\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  call,\n  send,\n  emit,\n  channelId,\n  disconnect,\n  fsmId\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (typeof result === 'string') {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n  return result\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state && state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      return { handler: awaitingConnection }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingReconnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx)\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    channelId.set(channel, message.params.channel_id)\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id)\n          return { handler: channelOpen }\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n        case 'shutdown':\n          return { handler: channelOpen }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingOffChainTx, state }\n    }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (typeof signedTx === 'string') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n      if (typeof signedTx === 'number') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { error: signedTx } })\n        return { handler: awaitingUpdateConflict, state }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict, state }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    // state.resolve(message.params.data.tx)\n    return { handler: channelClosed, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { error: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { error: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx, { updates: message.params.data.updates }))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractForceProgressUpdate (channel, message, state) {\n  if (message.method === 'channels.sign.force_progress_tx') {\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      state.sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.force_progress_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingForceProgressCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingForceProgressCompletion (channel, message, state) {\n  console.log('From force progress await completion ->', message)\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data)\n    }\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    state.resolve({ accepted: true, tx: message.params.data.tx })\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  if (!state) return { handler: channelClosed }\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state }\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx\n    return { handler: channelClosed, state }\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx)\n    return { handler: channelClosed }\n  }\n  return { handler: channelClosed, state }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport { buildTx, unpackTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  state as channelState,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect,\n  fsmId as channelFsmId\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Remove event listener function\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction off (event, callback) {\n  eventEmitters.get(this).removeListener(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get current round\n *\n * If round cannot be determined (for example when channel has not been opened)\n * it will return `null`.\n *\n * @return {Number}\n */\nfunction round () {\n  const state = channelState.get(this)\n  if (!state) {\n    return null\n  }\n  const { txType, tx } = unpackTx(channelState.get(this)).tx.encodedTx\n  switch (txType) {\n    case TX_TYPE.channelCreate:\n      return 1\n    case TX_TYPE.channelOffChain:\n    case TX_TYPE.channelWithdraw:\n    case TX_TYPE.channelDeposit:\n      return parseInt(tx.round, 10)\n    default:\n      return null\n  }\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Get channel's fsm id\n *\n * @return {String}\n */\nfunction fsmId () {\n  return channelFsmId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @param {Array<String>} metadata\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign, metadata) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount, meta: metadata }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger a force progress contract call\n * This call is going on-chain\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Number} [options.gasPrice=1000000000] - Gas price\n * @param {Number} [options.gas=1000000] - Gas limit\n * @param {Function} sign - Function which verifies and signs contract force progress transaction\n * @param {{ onOnChainTxL: Function }} callbacks\n * @return {Promise<Object>}\n * @example channel.forceProgress({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1,\n *   gasPrice: 1000005554\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract force progress call successful')\n *   } else {\n *     console.log('Contract force progress call has been rejected')\n *   }\n * })\n */\nfunction forceProgress ({ amount, callData, contract, abiVersion, gas = 1000000, gasPrice = 1000000000, nonce }, sign, { onOnChainTx } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.force_progress',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion,\n            gas_price: gasPrice,\n            gas\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractForceProgressUpdate,\n          state: { resolve, reject, sign, onOnChainTx }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  const doSend = (channel) => send(channel, {\n    jsonrpc: '2.0',\n    method: 'channels.message',\n    params: { info, to: recipient }\n  })\n  if (this.status() === 'connecting') {\n    const onStatusChanged = (status) => {\n      if (status !== 'connecting') {\n        // For some reason we can't immediately send a message when connection is\n        // established. Thus we wait 500ms which seems to work.\n        setTimeout(() => doSend(this), 500)\n        this.off('statusChanged', onStatusChanged)\n      }\n    }\n    this.on('statusChanged', onStatusChanged)\n  } else {\n    doSend(this)\n  }\n}\n\nasync function reconnect (options, txParams) {\n  const { sign } = options\n\n  return Channel({\n    ...options,\n    reconnectTx: await sign('reconnect', buildTx(txParams, TX_TYPE.channelReconnect).tx)\n  })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Number} [options.debug=false] - Log websocket communication\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    off,\n    status,\n    state,\n    round,\n    id,\n    fsmId,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls,\n    forceProgress\n  },\n  statics: {\n    reconnect\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport default Universal\n"],"sourceRoot":""}