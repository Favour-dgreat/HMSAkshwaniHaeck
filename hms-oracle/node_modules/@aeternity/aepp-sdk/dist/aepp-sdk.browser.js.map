{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/tx-object.js","webpack://Ae/./es/ae/index.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./node_modules/buffer/index.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./es/account/index.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/external {\"commonjs\":\"uuid\",\"commonjs2\":\"uuid\"}","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/./es/utils/bignumber.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/node.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/contract/index.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/always.js","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/external {\"commonjs\":\"ed2curve\",\"commonjs2\":\"ed2curve\"}","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/lt.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/./es/utils/keystore.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/cond.js","webpack://Ae/./node_modules/ramda/src/lte.js","webpack://Ae/./node_modules/ramda/src/T.js","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/external {\"commonjs\":\"@aeternity/json-bigint\",\"commonjs2\":\"@aeternity/json-bigint\"}","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/./node_modules/events/events.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/(webpack)/buildin/global.js","webpack://Ae/./node_modules/base64-js/index.js","webpack://Ae/./node_modules/ieee754/index.js","webpack://Ae/./node_modules/isarray/index.js","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/max.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/paths.js","webpack://Ae/./node_modules/ramda/src/internal/_isInteger.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_clone.js","webpack://Ae/./node_modules/ramda/src/internal/_cloneRegExp.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/process/browser.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://Ae/external {\"commonjs\":\"libsodium-wrappers-sumo\",\"commonjs2\":\"libsodium-wrappers-sumo\"}","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/utils/other.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/contract/ga/helpers.js","webpack://Ae/./es/contract/ga/index.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/utils/aepp-wallet-communication/schema.js","webpack://Ae/./es/utils/aepp-wallet-communication/helpers.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/rpc-clients.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/aepp-rpc.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/utils/aepp-wallet-communication/rpc/wallet-rpc.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js"],"names":["root","factory","exports","module","require","define","amd","undefined","window","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__9__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__22__","__WEBPACK_EXTERNAL_MODULE__34__","__WEBPACK_EXTERNAL_MODULE__36__","__WEBPACK_EXTERNAL_MODULE__60__","__WEBPACK_EXTERNAL_MODULE__66__","__WEBPACK_EXTERNAL_MODULE__84__","__WEBPACK_EXTERNAL_MODULE__85__","__WEBPACK_EXTERNAL_MODULE__96__","__WEBPACK_EXTERNAL_MODULE__115__","__WEBPACK_EXTERNAL_MODULE__116__","__WEBPACK_EXTERNAL_MODULE__117__","__WEBPACK_EXTERNAL_MODULE__127__","__WEBPACK_EXTERNAL_MODULE__135__","__WEBPACK_EXTERNAL_MODULE__137__","__WEBPACK_EXTERNAL_MODULE__184__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","VSN","VSN_2","TX_TTL","QUERY_FEE","ORACLE_TTL","type","QUERY_TTL","RESPONSE_TTL","DEPOSIT","AMOUNT","GAS","MIN_GAS_PRICE","MAX_AUTH_FUN_GAS","DRY_RUN_ACCOUNT","pub","amount","AENS_NAME_DOMAINS","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","NAME_FEE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_BID_MAX_LENGTH","NAME_ID_KEY","ak","ok","ct","ch","NAME_BID_RANGES","31","BigNumber","times","30","29","28","27","26","25","24","23","22","21","20","19","18","17","16","15","14","13","12","11","10","9","8","7","6","5","4","3","2","1","NAME_BID_TIMEOUTS","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channelForceProgress","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","channelReconnect","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","NO_VM","SOPHIA","SOLIDITY","SOPHIA_IMPROVEMENTS_MINERVA","SOPHIA_IMPROVEMENTS_FORTUNA","FATE","SOPHIA_IMPROVEMENTS_LIMA","ABI_VERSIONS","NO_ABI","VM_TYPE","AEVM","FATE_ABI","VM_ABI_MAP_ROMA","vmVersion","abiVersion","VM_ABI_MAP_MINERVA","VM_ABI_MAP_FORTUNA","VM_ABI_MAP_LIMA","PROTOCOL_VM_ABI","OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","any","stateTree","BASE_GAS","GAS_PER_BYTE","DEFAULT_FEE","KEY_BLOCK_INTERVAL","TX_FEE_BASE_GAS","txType","backend","TX_FEE_OTHER_GAS","txSize","relativeTtl","plus","Math","ceil","floor","ID_TAG","commitment","oracle","PREFIX_ID_TAG","nm","cm","ID_TAG_PREFIX","entries","reduce","acc","VALIDATION_MESSAGE","isMinusValue","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_LIMA","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_CLAIM_TX_2","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_FORCE_PROGRESS_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_RECONNECT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","TX_DESERIALIZATION_SCHEMA","ERROR_TYPE","VERIFICATION_FIELD","msg","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","insufficientBalanceForFeeNameFee","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","consensusProtocolVersion","JSON","stringify","NAME_CLAIM_VERIFICATION_SCHEMA","balance","BASE_VERIFICATION_SCHEMA","minFee","height","accountNonce","Ecb","aesjs","ModeOfOperation","ecb","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","toString","getAddressFromPriv","secret","keys","nacl","sign","keyPair","fromSecretKey","str2buf","publicBuffer","Buffer","from","publicKey","encodeBase58Check","isAddressValid","isValid","decodeBase58Check","assertedType","length","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","toBytes","hash","input","blake2b","sha256hash","shajs","update","digest","salt","random","Number","MAX_SAFE_INTEGER","encodeBase64Check","buffer","checksum","checkSumFn","concat","slice","decodeBase64Check","str","newChecksum","equals","decodeRaw","Error","bs58check","encode","decode","hexStringToByte","Uint8Array","a","len","push","parseInt","substr","encodeUnsigned","allocUnsafe","writeUInt32BE","findIndex","encodeContractAddress","owner","nonce","generateKeyPairFromSecret","generateKeyPair","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","rightPad","encryptPrivateKey","leftPad","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","data","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","message","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","RegExp","test","split","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","WALLET_PRIV","WALLET_PUB","encryptData","ephemeralKeyPair","box","pubKeyUInt8Array","randomBytes","nonceLength","encryptedMessage","ed2curve","convertPublicKey","ciphertext","ephemPubKey","version","decryptData","encryptedData","receiverSecretKeyUint8Array","convertSecretKey","decrypted","open","rlp","_objectAssign","merge","_curry2","createSalt","base64Types","buildContractId","ownerId","ownerIdAndNonce","buildHash","options","oracleQueryId","senderId","oracleId","val","nonceBE","alloc","formatSalt","padStart","nameHash","buf","fill","labels","produceNameId","toLowerCase","commitmentHash","namespace","includes","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","map","readPointers","assign","isNameValid","throwError","classify","match","klass","validatePointers","find","getMinimumNameFee","domain","nameLength","replace","computeBidFee","startFee","increment","eq","computeAuctionEndBlock","claimHeight","getContractBackendFromTx","isAuctionName","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","arrayWithoutHoles","iterableToArray","nonIterableSpread","head","nth","_typeof","iterator","constructor","_curry1","_isPlaceholder","f2","b","_b","_a","ORACLE_TTL_TYPES","serializeField","mpt","transformParams","params","denomination","filter","formatAmount","schemaKeys","getOracleRelativeTtl","ttlKey","calculateMinFee","gas","vsn","multiplier","actualFee","buildFee","fee","expected","buildTx","rlpEncoded","calculateFee","showWarning","console","warn","validateParams","excludeKeys","assert","valid","isNaN","isBigNumber","lt","gte","Array","isArray","validateField","buildRawTx","AE_AMOUNT_FORMATS","AETTOS","filteredSchema","fieldType","unpackRawTx","index","vm","abi","unpackTx","v","funHash","fnName","argType","outType","deserializeField","getSchema","objId","isDeserialize","firstKey","tx","txObject","fromRlpBinary","buildTxHash","rawTx","indexOf","snakeToPascal","pascalToSnake","isHex","isAeAddress","isBase64","inputBuffer","fillArray","bigNumberToByteArray","x","isInteger","toFixed","hexString","big","enc","String","buildTransaction","values","unpackTransaction","isBuffer","initTransaction","TxObject","stampit","init","isSigned","statics","fromString","fromRlp","methods","setProp","props","getSignatures","addSignature","opt","Ae","defaults","getAccount","gaId","contractId","authFun","signUsingGA","signTransaction","sendTransaction","authData","createMetaTx","recipientIdOrName","resolveName","recipientId","spendTx","send","fraction","desiredAmount","integerValue","ROUND_HALF_UP","TxBuilder","gt","minus","Tx","Account","Chain","transferFunds","destroyInstance","forEach","deepProps","deepConfiguration","f1","asyncInit","stamp","instance","compose","AsyncInit","initializers","ret","deepConf","composers","composables","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","encodingOrOffset","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","actual","write","checked","copy","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","SlowBuffer","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","y","list","pos","swap16","swap32","swap64","inspect","max","join","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","DENOMINATION_MAGNITUDE","toAe","targetDenomination","toAettos","asBigNumber","shiftedBy","prefixes","magnitude","getNearestPrefix","exponent","abs","getLowerBoundPrefix","precision","sendAndProcess","waitMined","getTxInfo","result","returnType","handleCallError","returnValue","contractDecodeDataAPI","decodedError","source","contractEncodeCallDataAPI","callValue","callResult","contractDecodeCallResultAPI","top","bytecode","onAccount","dryRunAccount","callerId","contractEncodeCall","callData","getKeyBlock","contractCreateTx","dryRunContractTx","resolveByNode","contractCallTx","dryRunAmount","pubKey","txDryRun","results","status","callObj","reason","dryRunParams","accounts","contractDecodeData","argsOrCallData","initState","freeze","transaction","callStatic","contractCallStatic","createdAt","Date","compileContractAPI","encodeCall","deploy","contractDeploy","deployStatic","getNetworkId","delegateSignatureCommon","queryId","ContractAPI","ContractBase","ContractACI","contractCompile","delegateNamePreclaimSignature","delegateNameClaimSignature","delegateNameTransferSignature","delegateNameRevokeSignature","delegateOracleRegisterSignature","delegateOracleExtendSignature","delegateOracleRespondSignature","deposit","gasPrice","ContractWithCompiler","NodePool","ContractCompilerAPI","paths","path","pathAr","getFunctionACI","aci","external","functions","f","bindings","state","type_defs","event","variant","buildContractMethods","aciArgs","stateful","parseArguments","decodeEvents","events","externalAci","unpackByteCode","prepareArgsForEncode","validateArguments","all","transform","fnACI","eventsSchema","types","unpackEvents","decodeCallResult","transformDecodedData","returns","log","decodedResult","decodedEvents","_has","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","idx","prop","nIdx","ks","checkArgsLength","signHash","networkId","rlpBinaryTx","txWithNetworkId","returnHex","sig","signMessage","verifyMessage","required","fromPairs","pairs","last","_includes","select","selectAccount","Accounts","process","addAccount","MemoryAccount","Selector","signWith","removeAccount","addresses","isMemoryAccount","resolveOnAccount","operation","memoryAccount","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","gaAttachTx","getVmVersion","prepareTxParams","prepareNodeObject","node","url","internalUrl","nodeNetworkId","nodes","pool","Map","validateNodes","addNode","selectNode","propertyDescriptors","currentNode","getterForCurrentNode","selectedNode","nodeInstance","has","isNodeConnected","getNodeInfo","getNodesInPool","nodeProps","k","_toString","jsonBig","JsonBig","storeAsString","convertValuesToBigNumbers","bn","parse","pluck","_isArray","_isTransformer","methodNames","xf","pop","transducer","parseBigNumber","number","bigNumber","ROUND_CEIL","SOPHIA_TYPES","ChainTtl","topics","eName","eParams","hexHash","decoded","el","transformEvent","tail","injectVars","aciType","typedef","baseType","generic","varianValue","vars","linkTypeDefs","typeDef","contractTypeDefs","isTypedDefOrState","isRemoteAddress","readType","tuple","option","record","transformMap","transformVariant","variantArgs","skipTransformDecoded","addressPrefix","keyT","valueT","variantType","genericMap","prepareSchema","Joi","getJoiErrorMsg","alternatives","g","or","regex","items","ordered","label","JoiBinary","bufferCheck","optional","errors","context","extend","joi","base","pre","convert","rules","validate","createError","validationSchema","sparse","abortEarly","pick","names","invoker","secrets","WeakMap","isGa","Crypto","pubBuffer","validateKeyPair","setSecret","Oracle","awaitHeight","topBlock","poll","getBalance","mempool","expandPath","replacements","lookupType","spec","conformTypes","integer","properties","pascalizeKeys","missing","extendingErrorPath","conform","$ref","allOf","conformDispatch","httpConfig","headers","transformResponse","transformRequest","httpClients","config","axios","post","classifyParameters","parameters","req","opts","query","body","pathArgs","queryArgs","bodyArgs","pascalizeParameters","traverseKeys","snakizeKeys","operationSignature","assertOne","coll","destructureClientError","method","response","statusText","toUpperCase","resolveRef","ref","swag","Swagger","axiosConfig","definition","errorHandler","operationId","description","param","pascalized","optNames","indexedParameters","client","debug","conformed","definitions","expandedPath","axiosError","fullResponse","defineProperties","op","urlFor","basePath","txEncoding","debugSwagger","remoteSwag","loader","tags","protocols","getCurrentKeyBlock","effectiveAtHeight","Node","handler","getConsensusProtocolVersion","forceCompatibility","getStatus","revision","nodeRevision","genesisHash","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","processResponse","baseUrl","put","Http","changeBaseUrl","newUrl","delete","http","isInit","function","prepareCompilerOption","calldata","compilerOptions","getCompilerVersion","compilerVersion","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","compilerUrl","contractGetACI","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","setCompilerUrl","validateByteCodeAPI","filesystem","file_system","getFateAssembler","getBytecodeCompilerVersion","isNil","geVersion","ltVersion","versionComponents","geComponents","ltComponents","toNumber","components","reverse","vNumber","geNumber","ltNumber","Contract","_isArrayLike","_xwrap","_iterableReduce","iter","step","next","_methodReduce","methodName","symIterator","_arrayReduce","f3","_c","_complement","pred","filterable","always","_reduce","mapObjIndexed","_arity","_curryN","curryN","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_indexOf","prepareArgs","contractAddress","forceCodeCheck","defaultOptions","skipArgsConvert","interface","external_encoded_aci","compiled","deployInfo","setOptions","getContract","active","getContractByteCode","onChanByteCode","compile","eventDecode","payable","getContractInstance","ownerPublicKey","txHashWithNetworkId","decodedPub","lte","ttl","supportedProtocol","txProtocol","nameFee","resolveDataForBase","chain","accountBalance","getAccountByPubkey","getCurrentKeyBlockHeight","verifySchema","validatorKey","unpackedTx","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","flatten","_makeFlat","zipObj","OracleBase","getOracle","getOracleQueries","getOracleQuery","arrayLikeToArray","minLen","_isFunction","arity","received","combined","argsIdx","left","combinedIdx","_isString","charAt","_curry3","flip","curry","toUpper","deserialize","rootHash","prev","serialize","tree","mptHash","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","lVal","rVal","_checkForMethod","groupBy","reduceBy","identity","indexBy","elem","vals","defaultTo","arr2","is","functor","nodeType","_dispatchable","_map","_xmap","output","nextKey","methodname","_clone","valueFn","valueAcc","keyFn","elt","fromIndex","toIndex","_sodium","DEFAULTS","crypto","secret_type","symmetric_alg","kdf","kdf_params","memlimit_kib","opslimit","parallelism","DERIVED_KEY_FUNCTIONS","argon2id","deriveKeyUsingArgon2id","memoryCost","timeCost","ready","sodium","crypto_pwhash","crypto_pwhash_ALG_ARGON2ID13","CRYPTO_FUNCTIONS","plaintext","secretbox","algo","deriveKey","marshal","derivedKey","public_key","uuid","cipher_params","recover","keyObject","validateKeyObj","kdfParams","dump","missingRootKeys","missingCryptoKeys","ED25519_CURVE","derivePathFromKey","segments","toPathArray","segment","parentKey","deriveChild","derivePathFromSeed","seed","masterKey","getMasterKeyFromSeed","formatAccount","getKeyPair","fromSeed","I","hmac","chainCode","indexBuffer","getHdWalletAccountFromMnemonic","mnemonic","accountIdx","walletKey","mnemonicToSeed","getSaveHDWalletAccounts","saveHDWallet","accountCount","_","generateSaveHDWallet","validateMnemonic","generateMnemonic","genMnemonic","toLower","cond","pair","without","xs","_includesWith","uniqWith","_objectIs","identical","_Set","difference","first","second","firstLen","secondLen","toFilterOut","add","mergeAll","assoc","hasPath","_xdrop","drop","_dropLast","dropLast","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertyNames","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","_addListener","prepend","existing","warning","newListener","emit","unshift","warned","w","emitter","count","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","position","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","awrap","async","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","_n","_d","_e","_s","_i","_quote","_toISOString","seen","recur","mapPairs","sort","valueOf","repr","inf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","aItem","typeA","ignoreCase","multiline","sticky","unicode","keysA","extendedStackA","extendedStackB","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","_filter","_isObject","_xfilter","XWrap","thisObj","_xfBase","XFilter","XMap","recursive","flatt","jlen","ilen","_isInteger","pathsArray","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","bIdx","mergeWithKey","_cloneRegExp","refFrom","refTo","deep","copiedValue","pattern","XReduceBy","inputs","_xreduceBy","_path","XDrop","take","_xtake","_reduced","XTake","XDropLast","full","store","_xdropLast","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","binding","cwd","chdir","umask","XFind","_xfind","sourceKeys","getOracleByPubkey","getOracleQueriesByPubkey","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","pause","duration","verifyTxBeforeSend","errorData","postTransaction","confirm","waitForTxConfirm","confirmationHeight","blockHeight","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getTransactionByHash","interval","attempts","currentHeight","getTopBlock","th","blocks","allowUnsynced","getTransactionInfoByHash","callInfo","getPendingTransactions","getCurrentGeneration","hashOrHeight","getGenerationByHash","getGenerationByHeight","getMicroBlockTransactionsByHash","transactions","getKeyBlockByHash","getKeyBlockByHeight","getMicroBlockHeaderByHash","txs","dryRunTxs","getContractCode","getNameEntryByName","nameOrId","getName","pointer","ChainNode","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","nameId","postNameTransfer","nameTtl","clientTtl","postNameUpdate","postNameRevoke","postContractCreate","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","postOracleRegister","postOracleExtend","responseTtl","queryTtl","postOracleQuery","postOracleRespond","channelId","fromId","poi","postChannelCloseSolo","postChannelSlash","initiatorAmountFinal","responderAmountFinal","postChannelSettle","postChannelSnapshotSolo","calculateTtl","relative","absoluteTtl","Transaction","protocolForTX","extendPointers","aensUpdate","aensQuery","transfer","aensTransfer","revoke","aensRevoke","extendTtl","minNameFee","claimTx","nameInter","_salt","preclaimTx","claim","aensClaim","Aens","aensPreclaim","aensBid","prepareGaParams","ins","authFnName","authCallData","getContractAuthFan","wrapInEmptySignedTx","GeneralizeAccount","createGeneralizeAccount","isGA","gaContractId","rawTransaction","metaTxRlp","RpcClient","receive","callbacks","parent","sequence","postMessage","jsonrpc","session","addEventListener","destroyClient","removeEventListener","rpcMethods","asEnum","WALLET_TYPE","NOTIFICATIONS","REQUESTS","SUBSCRIPTION_TYPES","METHODS","wallet","readyToConnect","updateAddress","aepp","connect","subscribeAddress","updateNetwork","closeConnection","RPC_STATUS","getBrowserAPI","chrome","getHandler","sendResponseMessage","sendMessage","responseMessage","voidFn","isValidAccounts","RpcClients","clients","hasClient","addClient","connectionData","getClient","removeClient","forceConnectionClose","disconnect","updateClientInfo","sendNotificationByCondition","condition","transformMessage","operationByCondition","icons","connection","handlers","onMessage","onDisconnect","actions","addressSubscription","messageId","isNotificationOrResponse","msgData","origin","currentAccount","isHasAccounts","current","connected","isSubscribed","hasAccessToAccount","isConnected","getCurrentAccount","setAccounts","forceNotification","updateSubscription","subscribe","unsubscribe","addAction","action","removeAction","accept","deny","request","msgId","transformResult","rpcClient","onAddressChange","onNetworkChange","disconnectWallet","RESPONSES","subscription","signedTransaction","transactionHash","handleMessage","AeppRpc","forceValidation","eventsHandlers","connectToWallet","walletBroadcast","connectionInfo","sendConnectRequest","sendDisconnect","askAddresses","returnSigned","queries","oracleQueries","pollQueries","pollForQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","q","decodedQuery","decodedResponse","respond","pollForResponse","pollForQueryResponse","responseBuffer","getOracleObject","registerOracle","onQuery","knownQueryIds","checkNewQueries","intervalId","setInterval","clearInterval","Aepp","Rpc","RpcAepp","rpcSessions","RpcServer","destroyServer","createSession","hello","rpcClients","callInstance","getWalletInfo","clientAccounts","getAccounts","onAcc","validationResult","errorObjectOrHandler","WalletRpc","onConnection","onSubscription","onSign","onAskAccounts","onMessageSign","_selectAccount","_addAccount","_selectNode","meta","getClients","removeRpcClient","addRpcClient","clientConnection","shareWalletInfo","postFn","location","extension","TxBase","deepProperties","Wallet","onTx","onChain","onContract","rpc","RpcWallet","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","fsmId","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","enqueueAction","guard","locked","dequeueMessage","ping","callback","channel_id","details","wrapCallErrorMessage","close","initialize","channelOptions","existingFsmId","awaitingReconnection","awaitingConnection","wsUrl","URL","searchParams","ws","W3CWebSocket","onerror","onopen","reconnectTx","channelOpen","signed_tx","onclose","onmessage","encodeRlpTx","appendSignature","signFn","signedTx","handleUnexpectedMessage","wsMessage","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","fsm_id","channelClosed","initiator","responder","role","awaitingOnChainTx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","updates","awaitingOffChainUpdate","accepted","errorCode","error_code","errorMessage","error_msg","awaitingUpdateConflict","to","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","round","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallContractForceProgressUpdate","awaitingForceProgressCompletion","awaitingCallsPruned","channels","closeTx","snakeToPascalObjKeys","contracts","call_data","contract_id","abi_version","caller","caller_id","pubkey","txParams","Channel","channelStatus","channelState","channelFsmId","metadata","balances","leave","shutdown","recipient","doSend","onStatusChanged","withdraw","createContract","vm_version","callContract","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","forceProgress","gas_price","reconnect","Universal"],"mappings":"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","file":"aepp-sdk.browser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"@aeternity/json-bigint\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"bignumber.js\"), require(\"@stamp/required\"), require(\"@stamp/it\"), require(\"tweetnacl\"), require(\"joi-browser\"), require(\"axios\"), require(\"uuid\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"ed2curve\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"@aeternity/json-bigint\"), require(\"websocket\"), require(\"bip32-path\"), require(\"libsodium-wrappers-sumo\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__9__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__22__, __WEBPACK_EXTERNAL_MODULE__34__, __WEBPACK_EXTERNAL_MODULE__36__, __WEBPACK_EXTERNAL_MODULE__60__, __WEBPACK_EXTERNAL_MODULE__66__, __WEBPACK_EXTERNAL_MODULE__84__, __WEBPACK_EXTERNAL_MODULE__85__, __WEBPACK_EXTERNAL_MODULE__96__, __WEBPACK_EXTERNAL_MODULE__115__, __WEBPACK_EXTERNAL_MODULE__116__, __WEBPACK_EXTERNAL_MODULE__117__, __WEBPACK_EXTERNAL_MODULE__127__, __WEBPACK_EXTERNAL_MODULE__135__, __WEBPACK_EXTERNAL_MODULE__137__, __WEBPACK_EXTERNAL_MODULE__184__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 185);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\nexport const VSN_2 = 2\n\n// # TRANSACTION DEFAULT TTL\nexport const TX_TTL = 0\n// # ORACLE\nexport const QUERY_FEE = 30000\nexport const ORACLE_TTL = { type: 'delta', value: 500 }\nexport const QUERY_TTL = { type: 'delta', value: 10 }\nexport const RESPONSE_TTL = { type: 'delta', value: 10 }\n// # CONTRACT\nexport const DEPOSIT = 0\nexport const AMOUNT = 0\nexport const GAS = 1600000 - 21000\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000\nexport const DRY_RUN_ACCOUNT = { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n// # AENS\nexport const AENS_NAME_DOMAINS = ['chain']\nexport const NAME_TTL = 50000\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000\nexport const NAME_MAX_CLIENT_TTL = 84600\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL\nexport const NAME_FEE = 0\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05 // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480 // # ~1 day\nexport const NAME_BID_MAX_LENGTH = 12 // # this is the max length for a domain to be part of a bid\nexport const NAME_ID_KEY = {\n  ak: 'account_pubkey',\n  ok: 'oracle_pubkey',\n  ct: 'contract_pubkey',\n  ch: 'channel'\n}\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # bid ranges:\nexport const NAME_BID_RANGES = {\n  31: BigNumber(3).times(NAME_FEE_MULTIPLIER),\n  30: BigNumber(5).times(NAME_FEE_MULTIPLIER),\n  29: BigNumber(8).times(NAME_FEE_MULTIPLIER),\n  28: BigNumber(13).times(NAME_FEE_MULTIPLIER),\n  27: BigNumber(21).times(NAME_FEE_MULTIPLIER),\n  26: BigNumber(34).times(NAME_FEE_MULTIPLIER),\n  25: BigNumber(55).times(NAME_FEE_MULTIPLIER),\n  24: BigNumber(89).times(NAME_FEE_MULTIPLIER),\n  23: BigNumber(144).times(NAME_FEE_MULTIPLIER),\n  22: BigNumber(233).times(NAME_FEE_MULTIPLIER),\n  21: BigNumber(377).times(NAME_FEE_MULTIPLIER),\n  20: BigNumber(610).times(NAME_FEE_MULTIPLIER),\n  19: BigNumber(987).times(NAME_FEE_MULTIPLIER),\n  18: BigNumber(1597).times(NAME_FEE_MULTIPLIER),\n  17: BigNumber(2584).times(NAME_FEE_MULTIPLIER),\n  16: BigNumber(4181).times(NAME_FEE_MULTIPLIER),\n  15: BigNumber(6765).times(NAME_FEE_MULTIPLIER),\n  14: BigNumber(10946).times(NAME_FEE_MULTIPLIER),\n  13: BigNumber(17711).times(NAME_FEE_MULTIPLIER),\n  12: BigNumber(28657).times(NAME_FEE_MULTIPLIER),\n  11: BigNumber(46368).times(NAME_FEE_MULTIPLIER),\n  10: BigNumber(75025).times(NAME_FEE_MULTIPLIER),\n  9: BigNumber(121393).times(NAME_FEE_MULTIPLIER),\n  8: BigNumber(196418).times(NAME_FEE_MULTIPLIER),\n  7: BigNumber(317811).times(NAME_FEE_MULTIPLIER),\n  6: BigNumber(514229).times(NAME_FEE_MULTIPLIER),\n  5: BigNumber(832040).times(NAME_FEE_MULTIPLIER),\n  4: BigNumber(1346269).times(NAME_FEE_MULTIPLIER),\n  3: BigNumber(2178309).times(NAME_FEE_MULTIPLIER),\n  2: BigNumber(3524578).times(NAME_FEE_MULTIPLIER),\n  1: BigNumber(5702887).times(NAME_FEE_MULTIPLIER)\n}\n\n// # ref: https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273\n// # name bid timeouts\nexport const NAME_BID_TIMEOUTS = {\n  13: BigNumber(0),\n  12: BigNumber(NAME_BID_TIMEOUT_BLOCKS), // # 480 blocks\n  8: BigNumber(31).times(NAME_BID_TIMEOUT_BLOCKS), // # 14880 blocks\n  4: BigNumber(62).times(NAME_BID_TIMEOUT_BLOCKS) // # 29760 blocks\n}\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX = 521\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_CHANNEL_RECONNECT_TX = 575\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channelForceProgress: 'channelForceProgress',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  channelReconnect: 'channelReconnect',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4,\n  FATE: 5,\n  SOPHIA_IMPROVEMENTS_LIMA: 6\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  FATE: 3\n}\n\nexport const VM_TYPE = { FATE: 'fate', AEVM: 'aevm' }\nexport const FATE_ABI = [3]\n\n// First abi/vm by default\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_LIMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.FATE, VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.FATE, ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  1: VM_ABI_MAP_ROMA,\n  // Minerva\n  2: VM_ABI_MAP_MINERVA,\n  // Fortuna\n  3: VM_ABI_MAP_FORTUNA,\n  // Lima\n  4: VM_ABI_MAP_LIMA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX]: TX_TYPE.channelForceProgress,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: TX_TYPE.channelReconnect,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  amount: 'amount',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload',\n  any: 'any',\n  stateTree: 'stateTree'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType, { backend = VM_TYPE.FATE }) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber((backend === VM_TYPE.FATE ? 12 : 30) * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  ak: ID_TAG.account,\n  nm: ID_TAG.name,\n  cm: ID_TAG.commitment,\n  ok: ID_TAG.oracle,\n  ct: ID_TAG.contract,\n  ch: ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.amount]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR('Not a string'),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR('Value must be of type Array and contains only object\\'s like \\'{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}\\''),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR('Value must be an object with \"vmVersion\" and \"abiVersion\" fields')\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_LIMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string),\n  TX_FIELD('payable', FIELD_TYPES.bool)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('nameFee', FIELD_TYPES.amount),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, ['ak', 'nm']),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.amount)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.amount),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, ['ct', 'nm']),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.amount),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, ['ok', 'nm']),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.amount),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_FORCE_PROGRESS_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('update', FIELD_TYPES.binary),\n  TX_FIELD('stateHash', FIELD_TYPES.binary),\n  TX_FIELD('offChainTrees', FIELD_TYPES.stateTree),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_RECONNECT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('role', FIELD_TYPES.string),\n  TX_FIELD('pubkey', FIELD_TYPES.id, 'ak')\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelForceProgress]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_FORCE_PROGRESS_TX, OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.channelReconnect]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION),\n    2: TX_SCHEMA_FIELD(NAME_CLAIM_TX_2, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_RECONNECT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_RECONNECT_TX, OBJECT_TAG_CHANNEL_RECONNECT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_FORCE_PROGRESS_TX, OBJECT_TAG_CHANNEL_FORCE_PROGRESS_TX)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    3: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_LIMA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion',\n  insufficientBalanceForFeeNameFee: 'insufficientBalanceForFeeNameFee'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' },\n  insufficientBalanceForFeeNameFee: { key: 'insufficientBalanceForFeeNameFee', type: ERROR_TYPE.ERROR, txKey: 'nameFee' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => 'The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address',\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const NAME_CLAIM_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForFeeNameFee,\n    ERRORS.insufficientBalanceForFeeNameFee\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport ed2curve from 'ed2curve'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport shajs from 'sha.js'\n\nimport { leftPad, rightPad, str2buf, toBytes } from './bytes'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Generate address from secret key\n * @rtype (secret: String) => tx: Promise[String]\n * @param {String} secret - Private key\n * @return {String} Public key\n */\nexport function getAddressFromPriv (secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret))\n  const publicBuffer = Buffer.from(keys.publicKey)\n  return `ak_${encodeBase58Check(publicBuffer)}`\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @param {String} prefix Transaction prefix. Default: 'ak'\n * @return {Boolean} valid\n */\nexport function isAddressValid (address, prefix = 'ak') {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, prefix)).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String|Buffer} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  const a = []\n  for (let i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  const hashedPasswordBytes = sha256hash(password)\n  const aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer|Uint8Array} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String|Buffer} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('aeternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(hash(personalMessageToBinary(message)), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(hash(personalMessageToBinary(str)), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  const keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} txHash - Transaction hash\n * @return {Buffer} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @param {Boolean} [force=false] Force throwing error\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env.WALLET_PRIV,\n    publicKey: env.WALLET_PUB\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * This function encrypts a message using base58check encoded and 'ak' prefixed\n * publicKey such that only the corresponding secretKey will\n * be able to decrypt\n * @rtype (msg: String, publicKey: String) => Object\n * @param {Buffer} msg - Data to encode\n * @param {String} publicKey - Public key\n * @return {Object}\n */\nexport function encryptData (msg, publicKey) {\n  const ephemeralKeyPair = nacl.box.keyPair()\n  const pubKeyUInt8Array = decodeBase58Check(assertedType(publicKey, 'ak'))\n  const nonce = nacl.randomBytes(nacl.box.nonceLength)\n\n  const encryptedMessage = nacl.box(\n    Buffer.from(msg),\n    nonce,\n    ed2curve.convertPublicKey(pubKeyUInt8Array),\n    ephemeralKeyPair.secretKey\n  )\n\n  return {\n    ciphertext: Buffer.from(encryptedMessage).toString('hex'),\n    ephemPubKey: Buffer.from(ephemeralKeyPair.publicKey).toString('hex'),\n    nonce: Buffer.from(nonce).toString('hex'),\n    version: 'x25519-xsalsa20-poly1305'\n  }\n}\n\n/**\n * This function decrypt a message using secret key\n * @rtype (secretKey: String, encryptedData: Object) => Buffer|null\n * @param {String} secretKey - Secret key\n * @param {Object} encryptedData - Encrypted data\n * @return {Buffer|null}\n */\nexport function decryptData (secretKey, encryptedData) {\n  const receiverSecretKeyUint8Array = ed2curve.convertSecretKey(Buffer.from(secretKey, 'hex'))\n  const nonce = Buffer.from(encryptedData.nonce, 'hex')\n  const ciphertext = Buffer.from(encryptedData.ciphertext, 'hex')\n  const ephemPubKey = Buffer.from(encryptedData.ephemPubKey, 'hex')\n  const decrypted = nacl.box.open(\n    ciphertext,\n    nonce,\n    ephemPubKey,\n    receiverSecretKeyUint8Array\n  )\n  return decrypted ? Buffer.from(decrypted) : decrypted\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;","import * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport {\n  ID_TAG_PREFIX,\n  PREFIX_ID_TAG,\n  AENS_NAME_DOMAINS,\n  NAME_BID_RANGES,\n  NAME_BID_MAX_LENGTH,\n  NAME_FEE,\n  NAME_FEE_BID_INCREMENT,\n  NAME_BID_TIMEOUTS,\n  FATE_ABI,\n  VM_TYPE, NAME_ID_KEY\n} from './schema'\nimport { ceil } from '../../utils/bignumber'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @param {{ raw: boolean = false }} options Options\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data, options = { raw: false }) {\n  return options.raw ? hash(data) : encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameHash (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Encode a domain name\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Name to encode\n * @return {String} `nm_` prefixed encoded domain name\n */\nexport function produceNameId (name) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return encode(hash(name.toLowerCase()), 'nm')\n  return encode(nameHash(name), 'nm')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport function commitmentHash (name, salt = createSalt()) {\n  const namespace = R.last(name.split('.'))\n  if (namespace === 'chain') return `cm_${encodeBase58Check(hash(Buffer.concat([Buffer.from(name.toLowerCase()), formatSalt(salt)])))}`\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameHash(name.toLowerCase()), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type = '') {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p.key),\n      writeId(p.id)\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\n/**\n * Is name valid\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} name\n * @param {boolean} [throwError=true] Throw error on invalid\n * @return Boolean\n * @throws Error\n */\nexport function isNameValid (name, throwError = true) {\n  if ((!name || typeof name !== 'string') && throwError) throw new Error('AENS: Name must be a string')\n  if (!AENS_NAME_DOMAINS.includes(R.last(name.split('.')))) {\n    if (throwError) throw new Error(`AENS: Invalid name domain. Possible domains [${AENS_NAME_DOMAINS}]`)\n    return false\n  }\n  return true\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nexport function classify (s) {\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in NAME_ID_KEY) {\n    return NAME_ID_KEY[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Validate name pointers array\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String[]} pointers Pointers array. Allowed values is: account(ak_), oracle(ok_), contract(ct_), channel(ch_)\n * @return {Boolean}\n */\nexport function validatePointers (pointers = []) {\n  return !pointers\n    .find(p => !p || typeof p !== 'string' || !['ak', 'ok', 'ct', 'ch'].includes(p.split('_')[0]))\n}\n\n/**\n * Get the minimum name fee for a domain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @return {String} the minimum fee for the domain auction\n */\nexport function getMinimumNameFee (domain) {\n  const nameLength = domain.replace('.chain', '').length\n  return NAME_BID_RANGES[nameLength >= NAME_BID_MAX_LENGTH ? NAME_BID_MAX_LENGTH : nameLength]\n}\n\n/**\n * Compute bid fee for AENS auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} startFee Auction start fee\n * @param {Number} [increment=0.5] Bid multiplier(In percentage, must be between 0 and 1)\n * @return {String} Bid fee\n */\nexport function computeBidFee (domain, startFee = NAME_FEE, increment = NAME_FEE_BID_INCREMENT) {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new Error(`Increment must be float. Current increment ${increment}`)\n  if (increment < NAME_FEE_BID_INCREMENT) throw new Error(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`)\n  return ceil(\n    BigNumber(BigNumber(startFee).eq(NAME_FEE) ? getMinimumNameFee(domain) : startFee).times(BigNumber(NAME_FEE_BID_INCREMENT).plus(1))\n  )\n}\n\n/**\n * Compute auction end height\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} domain the domain name to get the fee for\n * @param {Number|String} claimHeight Auction starting height\n * @return {String} Auction end height\n */\nexport function computeAuctionEndBlock (domain, claimHeight) {\n  return R.cond([\n    [R.lt(5), R.always(NAME_BID_TIMEOUTS[4].plus(claimHeight))],\n    [R.lt(9), R.always(NAME_BID_TIMEOUTS[8].plus(claimHeight))],\n    [R.lte(NAME_BID_MAX_LENGTH), R.always(NAME_BID_TIMEOUTS[12].plus(claimHeight))],\n    [R.T, R.always(BigNumber(claimHeight))]\n  ])(domain.replace('.chain', '').length).toString(10)\n}\n\n/**\n * Get contract backend by abiVersion\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Object} { abiVersion } abiVersion Transaction abiVersion\n * @return {String} Backend\n */\nexport function getContractBackendFromTx ({ abiVersion } = {}) {\n  return FATE_ABI.includes(parseInt(abiVersion))\n    ? VM_TYPE.FATE\n    : VM_TYPE.AEVM\n}\n\n/**\n * Is name accept going to auction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} name Transaction abiVersion\n * @return {Boolean}\n */\nexport function isAuctionName (name) {\n  return name.replace('.chain', '').length < 13\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  getContractBackendFromTx,\n  createSalt,\n  buildHash,\n  isNameValid,\n  produceNameId,\n  classify,\n  isAuctionName,\n  validatePointers\n}\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head =\n/*#__PURE__*/\nnth(0);\nmodule.exports = head;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;","import BigNumber from 'bignumber.js'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../utils/amount-formatter'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  TX_TYPE,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport {\n  readInt,\n  readId,\n  readPointers,\n  writeId,\n  writeInt,\n  buildPointers,\n  encode,\n  decode,\n  buildHash,\n  getContractBackendFromTx\n} from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion: {\n      const [vm, , abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    }\n    case FIELD_TYPES.amount:\n      return readInt(value)\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.stateTree:\n      return encode(value, 'ss')\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.stateTree:\n      return decode(value, 'ss')\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.amount:\n    case FIELD_TYPES.int: {\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    }\n    case FIELD_TYPES.id:\n      if (Array.isArray(prefix)) {\n        const p = prefix.find(p => p === value.split('_')[0])\n        return assert(p && PREFIX_ID_TAG[value.split('_')[0]], { value, prefix })\n      }\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, 'abiVersion') && Object.prototype.hasOwnProperty.call(value, 'vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params, schema, { denomination } = {}) {\n  params = schema\n    .filter(([_, t]) => t === FIELD_TYPES.amount)\n    .reduce((acc, [key]) => ({ ...params, [key]: formatAmount(params[key], { denomination }) }), params)\n  const schemaKeys = schema.map(([k]) => k)\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        if (schemaKeys.includes(key)) acc[key] = value\n        if (['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) {\n          acc[`${key}Type`] = value.type === ORACLE_TTL_TYPES.delta ? 0 : 1\n          acc[`${key}Value`] = value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params, txType) {\n  const ttlKey = {\n    [TX_TYPE.oracleRegister]: 'oracleTtl',\n    [TX_TYPE.oracleExtend]: 'oracleTtl',\n    [TX_TYPE.oracleQuery]: 'queryTtl',\n    [TX_TYPE.oracleResponse]: 'responseTtl'\n  }[txType]\n\n  if (params[ttlKey] || params[`${ttlKey}Value`]) {\n    return params[`${ttlKey}Value`] || params[ttlKey].value\n  }\n  return 1\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params, vsn }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas, vsn })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas, vsn })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @param vsn\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier, vsn }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType, { vsn })\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType, { backend: getContractBackendFromTx(params) })\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params, txType) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true, vsn } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  return fee || calculateMinFee(txType, { params, gas, vsn })\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Array} [options.excludeKeys=[]] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.denomination='aettos'] denomination Denomination of amounts (default: aettos)\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [], denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const filteredSchema = schema.filter(([key]) => !excludeKeys.includes(key))\n\n  // Transform `amount` type fields to `aettos`\n  params = transformParams(params, filteredSchema, { denomination })\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return filteredSchema\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Get transaction serialization/deserialization schema\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {{ vsn: String, objId: Number, type: String }}\n * @throws {Error} Schema not found error\n * @return {Object} Schema\n */\nconst getSchema = ({ vsn, objId, type }) => {\n  const isDeserialize = !!objId\n  const firstKey = isDeserialize ? objId : type\n  const schema = isDeserialize ? TX_DESERIALIZATION_SCHEMA : TX_SERIALIZATION_SCHEMA\n\n  if (!schema[firstKey]) {\n    throw new Error(`Transaction ${isDeserialize ? 'deserialization' : 'serialization'} not implemented for ${isDeserialize ? 'tag ' + objId : type}`)\n  }\n  if (!schema[firstKey][vsn]) {\n    throw new Error(`Transaction ${isDeserialize ? 'deserialization' : 'serialization'} not implemented for ${isDeserialize ? 'tag ' + objId : type} version ${vsn}`)\n  }\n  return schema[firstKey][vsn]\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx', vsn = VSN, denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const [schema, tag] = getSchema({ type, vsn })\n  const binary = buildRawTx({ ...params, VSN: vsn, tag }, schema, { excludeKeys, denomination: params.denomination || denomination }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Buffer} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  const vsn = readInt(binary[1])\n  const [schema] = getSchema({ objId, vsn })\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @param {{ raw: boolean = false }}  options Options\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx, options = { raw: false }) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded, options)\n  return buildHash('th', rawTx, options)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\nimport { isAddressValid } from './crypto'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(typeof str === 'string' && str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n\n/**\n * Check whether a string is Aeternity address\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid AE address\n */\nexport function isAeAddress (str) {\n  if (typeof str !== 'string') return false\n  return str.split('_')[0].length === 2 && isAddressValid(str)\n}\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+/=]/i)) return false\n  const index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport BigNumber from 'bignumber.js'\nimport { isBase64, isHex } from './string'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  if (!x.isInteger()) throw new Error(`Unexpected not integer value: ${x.toFixed()}`)\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined || val === null) return Buffer.from([])\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param {string} str String to be converted.\n * @param {string=} enc Encoding of the input string (optional).\n * @return {buffer} Buffer (bytearray) containing the input data.\n */\nexport function str2buf (str, enc) {\n  if (!str || str.constructor !== String) return str\n  if (!enc && isHex(str)) enc = 'hex'\n  if (!enc && isBase64(str)) enc = 'base64'\n  return Buffer.from(str, enc)\n}\n","/**\n * TxObject module\n * @module @aeternity/aepp-sdk/es/tx/tx-object\n * @export TxObject\n * @example import TxObject from '@aeternity/aepp-sdk/es/tx/tx-object'\n */\nimport stampit from '@stamp/it'\nimport { assertedType } from '../utils/crypto'\nimport { buildTx, calculateFee, unpackTx } from './builder'\nimport { TX_TYPE } from './builder/schema'\nimport { encode } from './builder/helpers'\nimport { isHex } from '../utils/string'\n\n/**\n * Build transaction from object\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {String} type Transaction type\n * @param {Object} params Transaction params\n * @param {Object} [options={}] Options\n * @throws {Error} Arguments validation error's\n * @return {{ encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, params: Object, type: String }}\n */\nconst buildTransaction = (type, params, options = {}) => {\n  if (typeof params !== 'object') throw new Error('\"params\" should be an object')\n  if (typeof type !== 'string' || !Object.values(TX_TYPE).includes(type)) throw new Error(`Unknown transaction type ${type}`)\n  const fee = calculateFee(params.fee, type, { gas: params.gas, params, vsn: params.vsn })\n  const { rlpEncoded, binary, tx: encodedTx, txObject } = buildTx({ ...params, fee }, type, { vsn: params.vsn, ...options })\n  return { rlpEncoded, binary, encodedTx, params: txObject, type }\n}\n\n/**\n * Unpack transaction from RLP encoded binary or base64c string\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {Buffer|String} tx RLP encoded binary or base64c(rlpBinary) string\n * @throws {Error} Arguments validation error's\n * @return {{ encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, type: String, params: Object }}\n */\nconst unpackTransaction = (tx) => {\n  if (!tx) throw new Error(`Invalid transaction: ${tx}`)\n  if (typeof tx === 'string') {\n    if (!assertedType(tx, 'tx', true)) throw new Error('Invalid transaction string. Tx should be `tx` prefixed base58c string')\n    const { txType: type, tx: params, rlpEncoded, binary } = unpackTx(tx)\n    return { encodedTx: tx, type, params, rlpEncoded, binary }\n  }\n  if (Buffer.isBuffer(tx)) {\n    const { txType: type, tx: params, rlpEncoded, binary } = unpackTx(tx, true)\n    return { encodedTx: encode(tx, 'tx'), type, params, rlpEncoded, binary }\n  }\n}\n\n/**\n * Helper which build or unpack transaction base on constructor arguments\n * Need to provide one of arguments: [tx] -> unpack flow or [params, type] -> build flow\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @param {Buffer|String} [tx] Transaction rlp binary or vase64c string\n * @param {Object} params Transaction params\n * @param {String} type Transaction type\n * @param {Object} [options={}] Options\n * @throws {Error} Arguments validation error's\n * @return {{encodedTx: String, binary: Array<Buffer>, rlpEncoded: Buffer, type: String, params: Object}}\n */\nconst initTransaction = ({ tx, params, type, options = {} } = {}) => {\n  if (params && type) return buildTransaction(type, params, options)\n  if (tx) return unpackTransaction(tx)\n  throw new Error('Invalid TxObject arguments. Please provide one of { tx: \"tx_asdasd23...\" } or { type: \"spendTx\", params: {...} }')\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Buffer|String} [options.tx] - Rlp binary or base64c transaction\n * @param {Object} [options.params] - Transaction params\n * @param {String} [options.type] - Transaction type\n * @param {Object} [options.options] - Build options\n * @return {Object} TxObject instance\n * @example TxObject({ params: {...}, type: 'spendTx' })\n */\nexport const TxObject = stampit({\n  init ({ tx, params, type, options = {} } = {}) {\n    this.options = options\n    this.signatures = []\n    Object.assign(this, initTransaction({ tx, params, type, options }))\n\n    if (this.type === TX_TYPE.signed) {\n      const { signatures, encodedTx: { txType, tx } } = this.params\n      this.signatures = signatures\n      this.params = tx\n      this.type = txType\n      this.isSigned = true\n    }\n  },\n  statics: {\n    /**\n     * Create txObject from base64c RLP encoded transaction string with 'tx_' prefix\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @static\n     * @param {String} tx Transaction string (tx_23fsdgsdfg...)\n     * @return {TxObject}\n     */\n    fromString: (tx) => TxObject({ tx }),\n    /**\n     * Create txObject from transaction RLP binary\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @static\n     * @param {Buffer} tx Transaction RLP binary\n     * @return {TxObject}\n     */\n    fromRlp: (tx) => TxObject({ tx })\n  },\n  methods: {\n    /**\n     * Rebuild transaction with new params and recalculate fee\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Object} props Transaction properties for update\n     * @param options\n     * @return {TxObject}\n     */\n    setProp (props = {}, options = {}) {\n      if (typeof props !== 'object') throw new Error('Props should be an object')\n      this.isSigned = false\n      this.signatures = []\n      Object.assign(this, buildTransaction(this.type, { ...this.params, ...props, fee: null }, { ...this.options, ...options }))\n      return this\n    },\n    /**\n     * Get signatures\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @return {Array} Array of signatures\n     */\n    getSignatures () {\n      if (!this.isSigned) throw new Error('Signature not found, transaction is not signed')\n      return this.signatures\n    },\n    /**\n     * Add signature\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Buffer|String} signature Signature to add ( Can be: Buffer | Uint8Array | HexString )\n     * @return {void}\n     */\n    addSignature (signature) {\n      signature = isHex(signature) ? Buffer.from(signature, 'hex') : signature\n      if (!Buffer.isBuffer(signature) && !(signature instanceof Uint8Array)) throw new Error('Invalid signature, signature must be of type Buffer or Uint8Array')\n      Object.assign(this, buildTransaction(TX_TYPE.signed, { encodedTx: this.rlpEncoded, signatures: [[...this.signatures, signature]] }))\n\n      const { signatures, encodedTx: { txType, tx } } = this.params\n      this.signatures = signatures\n      this.params = tx\n      this.type = txType\n      this.isSigned = true\n    },\n    /**\n     * Calculate fee\n     * @alias module:@aeternity/aepp-sdk/es/tx/tx-object\n     * @param {Object} props\n     * @return {String} fee\n     */\n    calculateMinFee (props = {}) {\n      const params = { ...this.params, ...props }\n      return calculateFee(0, this.type, { gas: params.gas, params, vsn: params.vsn })\n    }\n  }\n})\n\nexport default TxObject\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\nimport { AE_AMOUNT_FORMATS } from '../utils/amount-formatter'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {Object} Transaction\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  const signed = gaId\n    ? await this.signUsingGA(tx, { ...opt, authFun })\n    : await this.signTransaction(tx, opt)\n  return this.sendTransaction(signed, opt)\n}\n\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientIdOrName: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientIdOrName - Address or name of recipient account\n * @param {Object} [options] - Options\n * @return {Object} Transaction\n */\nasync function spend (amount, recipientIdOrName, options) {\n  const opt = { ...this.Ae.defaults, ...options }\n  return this.send(\n    await this.spendTx({\n      ...opt,\n      senderId: await this.address(opt),\n      recipientId: await this.resolveName(recipientIdOrName, 'ak', opt),\n      amount\n    }),\n    opt\n  )\n}\n\n// TODO: Rename to spendFraction\n/**\n * Send a fraction of token balance to another account\n * @instance\n * @category async\n * @rtype (fraction: Number|String, recipientIdOrName: String, options?: Object) => Promise[String]\n * @param {Number|String} fraction - Fraction of balance to spend (between 0 and 1)\n * @param {String} recipientIdOrName - Address or name of recipient account\n * @param {Object} [options] - Options\n * @return {Object} Transaction\n */\nasync function transferFunds (fraction, recipientIdOrName, options) {\n  if (fraction < 0 || fraction > 1) {\n    throw new Error(`Fraction should be a number between 0 and 1, got ${fraction}`)\n  }\n  const opt = { ...this.Ae.defaults, ...options }\n  const recipientId = await this.resolveName(recipientIdOrName, 'ak', opt)\n  const senderId = await this.address(opt)\n  const balance = new BigNumber(await this.balance(senderId))\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP)\n  const { tx: { fee } } = TxBuilder.unpackTx(\n    await this.spendTx({ ...opt, senderId, recipientId, amount: desiredAmount })\n  )\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount\n  return this.send(await this.spendTx({ ...opt, senderId, recipientId, amount }), opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance, signUsingGA },\n  deepProps: { Ae: { defaults: { denomination: AE_AMOUNT_FORMATS.AETTOS } } },\n  deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","var _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__22__;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Amount Formatter\n * @module @aeternity/aepp-sdk/es/utils/amount-formatter\n * @example import { format, toAettos, AE_AMOUNT_FORMATS } from '@aeternity/aepp-sdk/es/utils/amount-formatter'\n */\nimport { asBigNumber, isBigNumber } from './bignumber'\nimport BigNumber from 'bignumber.js'\n\n/**\n * AE amount formats\n */\nexport const AE_AMOUNT_FORMATS = {\n  AE: 'ae',\n  MILI_AE: 'miliAE',\n  MICRO_AE: 'microAE',\n  NANO_AE: 'nanoAE',\n  PICO_AE: 'picoAE',\n  FEMTO_AE: 'femtoAE',\n  AETTOS: 'aettos'\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nexport const DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18\n}\n\n/**\n * Convert amount to AE\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAe = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE })\n\n/**\n * Convert amount to aettos\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='ae'] denomination of amount, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const toAettos = (value, { denomination = AE_AMOUNT_FORMATS.AE } = {}) => formatAmount(value, { denomination })\n\n/**\n * Convert amount from one to other denomination\n * @param {String|Number|BigNumber} value amount to convert\n * @param {Object} [options={}] options\n * @param {String} [options.denomination='aettos'] denomination of amount, can be ['ae', 'aettos']\n * @param {String} [options.targetDenomination='aettos'] target denomination, can be ['ae', 'aettos']\n * @return {String}\n */\nexport const formatAmount = (value, { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS } = {}) => {\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(denomination)) throw new Error(`Invalid denomination. Current: ${denomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!Object.values(AE_AMOUNT_FORMATS).includes(targetDenomination)) throw new Error(`Invalid target denomination. Current: ${targetDenomination}, available [${Object.keys(AE_AMOUNT_FORMATS)}]`)\n  if (!isBigNumber(value)) throw new Error(`Value ${value} is not type of number`)\n\n  return asBigNumber(value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed()\n}\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/string'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\nimport { AMOUNT, DEPOSIT, DRY_RUN_ACCOUNT, GAS, MIN_GAS_PRICE } from '../tx/builder/schema'\nimport { decode, produceNameId } from '../tx/builder/helpers'\nimport TxObject from '../tx/tx-object'\n\nasync function sendAndProcess (tx, options) {\n  const txData = await this.send(tx, options)\n\n  if (options.waitMined === false) {\n    return { hash: txData.hash, rawTx: txData.rawTx }\n  }\n\n  const result = await this.getTxInfo(txData.hash)\n\n  if (result.returnType !== 'ok') {\n    await this.handleCallError({ result, tx: TxObject({ tx: txData.rawTx }), rawTx: txData.rawTx })\n  }\n\n  return { hash: txData.hash, tx: TxObject({ tx: txData.rawTx }), result, txData, rawTx: txData.rawTx }\n}\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @param {Object} tx Unpacked transaction\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError ({ result, tx, rawTx }) {\n  const error = Buffer.from(result.returnValue).toString()\n  const decodedError = isBase64(error.slice(3))\n    ? Buffer.from(error.slice(3), 'base64').toString()\n    : await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(\n    new Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), {\n      ...result,\n      tx,\n      error,\n      rawTx,\n      decodedError\n    }\n  )\n}\n\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @param {Object} [options.backend='fate'] Compiler backend\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args, options) {\n  return this.contractEncodeCallDataAPI(source, name, args, options)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem={}] Contract external namespaces map\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array|String} args Argument's or callData for call/deploy transaction\n * @param {Object} [options={}]  Options\n * @param {String} [options.top] Block hash on which you want to call contract\n * @param {String} [options.bytecode] Block hash on which you want to call contract\n * @param {Object} [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.options.filesystem] Contract external namespaces map\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {}, bytecode } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Prepare call-data\n  const callData = Array.isArray(args) ? await this.contractEncodeCall(source, name, args, opt) : args\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n  // Prepare nonce\n  const nonce = top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n  if (name === 'init') {\n    // Prepare deploy transaction\n    const { tx } = await this.contractCreateTx(R.merge(opt, {\n      callData,\n      code: bytecode,\n      ownerId: callerId,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  } else {\n    // Prepare `call` transaction\n    const tx = await this.contractCallTx(R.merge(opt, {\n      callerId,\n      contractId: await this.resolveName(address, 'ct', { resolveByNode: true }),\n      callData,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  }\n}\n\nasync function dryRunContractTx (tx, callerId, source, name, opt = {}) {\n  const { top } = opt\n  // Resolve Account for Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  // Dry-run\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // Process response\n  if (status !== 'ok') throw Object.assign(new Error('Dry run error, ' + reason), { tx: TxObject({ tx }), dryRunParams: { accounts: [dryRunAccount], top } })\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError({ result: callObj, tx: TxObject({ tx }) })\n  }\n  return {\n    tx: TxObject({ tx }),\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, opt)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address or AENS name\n * @param {String} name Name of function to call\n * @param {Array|String} argsOrCallData Argument's array or callData for call function\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, argsOrCallData = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: await this.resolveName(address, 'ct', { resolveByNode: true }),\n    callData: Array.isArray(argsOrCallData) ? await this.contractEncodeCall(source, name, argsOrCallData, opt) : argsOrCallData\n  }))\n\n  const { hash, rawTx, result, txData } = await sendAndProcess.call(this, tx, opt)\n  return {\n    hash,\n    rawTx,\n    result,\n    txData,\n    decode: () => result ? this.contractDecodeData(source, name, result.returnValue, result.returnType, opt) : {}\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array|String} initState Arguments of contract constructor(init) function. Can be array of arguments or callData string\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = Array.isArray(initState) ? await this.contractEncodeCall(source, 'init', initState, opt) : initState\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx, result, txData } = await sendAndProcess.call(this, tx, opt)\n  return Object.freeze({\n    result,\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    txData,\n    address: contractId,\n    call: async (name, args = [], options = {}) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n    callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, {\n      ...options,\n      options: { onAccount: opt.onAccount, ...R.merge(opt, options.options) }\n    }),\n    createdAt: new Date()\n  })\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} [options={}] Transaction options (fee, ttl, gas, amount, deposit)\n * @param {Object} [options.filesystem={}] Contract external namespaces map* @return {Promise<Object>} Result object\n * @param {Object} [options.backend='aevm'] Contract backend version (aevm|fate)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args, R.merge(opt, options)),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, R.merge(opt, options)),\n    deployStatic: async (init, options = {}) => this.contractCallStatic(source, null, 'init', init, {\n      bytecode,\n      top: options.top,\n      options: R.merge(opt, options)\n    })\n  }, { bytecode }))\n}\n\n/**\n * Utility method to create a delegate signature for a contract\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String[]} ids The list of id's to prepend\n * @param {Object} [opt={}] options\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature in hex representation\n */\nasync function delegateSignatureCommon (ids = [], opt = {}) {\n  return this.sign(\n    Buffer.concat(\n      [\n        Buffer.from(this.getNetworkId(opt)),\n        decode(await this.address(opt)),\n        ...ids.map(e => decode(e))\n      ]\n    ),\n    opt\n  ).then(s => Buffer.from(s).toString('hex'))\n}\n\n/**\n * Helper to generate a signature to delegate a name pre-claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNamePreclaimSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name claim to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} name The name being claimed\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameClaimSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name transfer to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being transferred\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameTransferSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a name revoke to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {String} name The name being revoked\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateNameRevokeSignature (contractId, name, opt = {}) {\n  return this.delegateSignatureCommon([produceNameId(name), contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle register to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRegisterSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle extend to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleExtendSignature (contractId, opt = {}) {\n  return this.delegateSignatureCommon([contractId], opt)\n}\n\n/**\n * Helper to generate a signature to delegate a Oracle respond to a contract.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} queryId Oracle Query Id\n * @param {String} contractId Contract Id\n * @param {{ onAccount: String | Object }} [opt={}] opt Options\n * @return {Promise<String>} Signature for delegation\n */\nasync function delegateOracleRespondSignature (queryId, contractId, opt = {}) {\n  return this.delegateSignatureCommon([queryId, contractId], opt)\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    dryRunContractTx,\n    handleCallError,\n    // Delegation for contract\n    // AENS\n    delegateSignatureCommon,\n    delegateNamePreclaimSignature,\n    delegateNameClaimSignature,\n    delegateNameTransferSignature,\n    delegateNameRevokeSignature,\n    // Oracle\n    delegateOracleRegisterSignature,\n    delegateOracleExtendSignature,\n    delegateOracleRespondSignature\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: DEPOSIT,\n        gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n        amount: AMOUNT,\n        gas: GAS,\n        options: '',\n        dryRunAccount: DRY_RUN_ACCOUNT\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar paths =\n/*#__PURE__*/\nrequire(\"./paths\");\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nmodule.exports = path;","import * as R from 'ramda'\nimport { unpackTx } from '../../tx/builder'\nimport { decodeEvents as unpackEvents, transform, transformDecodedData, validateArguments } from './transformation'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @param external\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name, { external }) {\n  if (!aci) throw new Error('ACI required')\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: [\n      {\n        state: aci.state,\n        type_defs: aci.type_defs,\n        name: aci.name\n      },\n      ...external.map(R.pick(['state', 'type_defs', 'name']))\n    ],\n    event: aci.event ? aci.event.variant : []\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              },\n              decodeEvents (events) {\n                return instance.decodeEvents(name, events)\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {},\n  ...instance.aci ? {\n    init: Object.assign(\n      function () {\n        const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n        const { opt, args } = parseArguments(aciArgs)(arguments)\n        return instance.deploy(args, opt)\n      },\n      {\n        get () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: true })\n        },\n        send () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: false })\n        }\n      }\n    )\n  } : {}\n})\n\nexport const parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n\nexport const unpackByteCode = (bytecode) => unpackTx(bytecode, false, 'cb').tx\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nexport const prepareArgsForEncode = async (aci, params) => {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\nexport const decodeEvents = (events, fnACI) => {\n  if (!fnACI || !fnACI.event || !fnACI.event.length) return []\n\n  const eventsSchema = fnACI.event.map(e => {\n    const name = Object.keys(e)[0]\n    return { name, types: e[name] }\n  })\n  return unpackEvents(events, { schema: eventsSchema })\n}\n\nexport const decodeCallResult = async (result, fnACI, opt) => {\n  return {\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, bindings: fnACI.bindings }\n    ),\n    decodedEvents: decodeEvents(result.result.log, fnACI)\n  }\n}\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\"); // cover IE < 9 keys issues\n\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nmodule.exports = keys;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\nimport { hash, personalMessageToBinary, decodeBase64Check, assertedType, verifyPersonalMessage } from '../utils/crypto'\nimport { buildTx, buildTxHash } from '../tx/builder'\nimport { decode } from '../tx/builder/helpers'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport { getNetworkId } from '../node'\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = { signHash: true }) {\n  const networkId = this.getNetworkId(opt)\n  const rlpBinaryTx = decodeBase64Check(assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), opt.signHash ? buildTxHash(rlpBinaryTx, { raw: true }) : rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Get network Id\n * @instance\n * @function getNetworkId\n * @category async\n * @rtype () => networkId: String\n * @return {String} Network Id\n */\n\n/**\n * Sign message\n * @instance\n * @category async\n * @rtype (msg: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to sign\n * @param {Object} opt - Options\n * @return {String} Signature\n */\nasync function signMessage (message, opt = { returnHex: false }) {\n  const sig = await this.sign(hash(personalMessageToBinary(message)), opt)\n  return opt.returnHex ? Buffer.from(sig).toString('hex') : sig\n}\n\n/**\n * Verify message\n * @instance\n * @category async\n * @rtype (msg: String, signature: String, publicKey: String) => signature: Promise[String], throws: Error\n * @param {String} message - Message to verify\n * @param {String} signature - Signature\n * @param {Object} opt - Options\n * @return {Boolean}\n */\nasync function verifyMessage (message, signature, opt = {}) {\n  return verifyPersonalMessage(message, typeof signature === 'string' ? Buffer.from(signature, 'hex') : signature, decode(await this.address(opt)))\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId, signMessage, verifyMessage },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId', 'signMessage', 'verifyMessage']\n    }\n  }\n}, required({\n  methods: {\n    sign: required,\n    address: required\n  }\n}))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = fromPairs;","var nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nmodule.exports = last;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__34__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = _has;","module.exports = __WEBPACK_EXTERNAL_MODULE__36__;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nmodule.exports = type;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair } from './utils/crypto'\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [] }) {\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    const keypair = envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\nimport MemoryAccount from './memory'\n\nexport const isMemoryAccount = (acc) => !['sign', 'address'].find(f => typeof acc[f] !== 'function')\n\nasync function sign (data, { onAccount } = {}) {\n  if (!onAccount) return this.signWith(this.Selector.address, data)\n  // onAccount can be account address(should exist in sdk instance) or MemoryAccount\n  return this.resolveOnAccount(onAccount, 'sign', data)\n}\n\nasync function resolveOnAccount (onAccount, operation = 'address', data) {\n  switch (typeof onAccount) {\n    case 'string':\n      if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n      if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n      if (operation === 'sign') return this.signWith(onAccount, data)\n      if (operation === 'address') return onAccount\n      break\n    case 'object':\n      try {\n        const memoryAccount = isMemoryAccount(onAccount)\n          ? onAccount\n          : MemoryAccount({ keypair: onAccount })\n        if (operation === 'sign') return memoryAccount.sign(data)\n        if (operation === 'address') return memoryAccount.address()\n        break\n      } catch (e) {\n        e.message = `Invalid 'onAccount' option: ${e.message}`\n        throw e\n      }\n    default:\n      throw new Error('Invalid `onAccount` option: should be keyPair object or account address')\n  }\n}\nasync function address ({ onAccount } = {}) {\n  if (!onAccount) {\n    if (this.Selector.address) return Promise.resolve(this.Selector.address)\n    throw new Error('You don\\'t have selected account')\n  }\n  return this.resolveOnAccount(onAccount, 'address')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error('Invalid account address')\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount, resolveOnAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'getVmVersion', 'prepareTxParams',\n        'gaAttachTx'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error('You can\\'t use Node API. Node is not connected or not defined!')\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport { getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\nimport { getNetworkId } from '../node'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [] } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach((node, i) => {\n      const { name, instance } = node\n      this.addNode(name, instance, i === 0)\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId,\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _toString =\n/*#__PURE__*/\nrequire(\"./internal/_toString\");\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nmodule.exports = toString;","import JsonBig from '@aeternity/json-bigint'\nimport BigNumber from 'bignumber.js'\n\nconst jsonBig = JsonBig({ storeAsString: true })\n\nconst convertValuesToBigNumbers = value => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return Object.entries(value)\n      .map(([key, value]) => [key, convertValuesToBigNumbers(value)])\n      .reduce((p, [k, v]) => ({ ...p, [k]: v }), {})\n  }\n  if (Array.isArray(value)) {\n    return value.map(item => convertValuesToBigNumbers(item))\n  }\n  if (typeof value === 'string' && BigNumber(value).toString(10) === value) {\n    const bn = BigNumber(value)\n    bn.toJSON = () => bn.toString(10)\n    return bn\n  }\n  return value\n}\n\nexport default {\n  stringify: (object, ...args) => jsonBig.stringify(convertValuesToBigNumbers(object), ...args),\n  parse: jsonBig.parse\n}\n","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nmodule.exports = pluck;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","/**\n * Big Number Helpers\n * @module @aeternity/aepp-sdk/es/utils/bignumber\n * @example import { parseBigNumber, asBigNumber, isBigNumber, ceil } from '@aeternity/aepp-sdk/es/utils/bignumber'\n */\nimport BigNumber from 'bignumber.js'\n\n/**\n * Convert number to string\n * @param {String|Number|BigNumber} number number to convert\n * @return {String}\n */\nexport function parseBigNumber (number) {\n  return BigNumber(number.toString()).toString(10)\n}\n\n/**\n * Convert number to BigNumber instance\n * @param {String|Number|BigNumber} number number to convert\n * @return {BigNumber}\n */\nexport function asBigNumber (number) {\n  return BigNumber(number.toString())\n}\n\n/**\n * Check if value is BigNumber, Number or number string representation\n * @param {String|Number|BigNumber} number number to convert\n * @return {Boolean}\n */\nexport function isBigNumber (number) {\n  return !isNaN(number) || Number.isInteger(number) || BigNumber.isBigNumber(number)\n}\n\n/**\n * BigNumber ceil operation\n * @param {String|Number|BigNumber} bigNumber\n * @return {BigNumber}\n */\nexport function ceil (bigNumber) {\n  return bigNumber.integerValue(BigNumber.ROUND_CEIL)\n}\n\nexport default { ceil, isBigNumber, asBigNumber, parseBigNumber }\n","import Joi from 'joi-browser'\nimport { isAeAddress, isHex } from '../../utils/string'\nimport { toBytes } from '../../utils/bytes'\nimport { decode } from '../../tx/builder/helpers'\nimport { parseBigNumber } from '../../utils/bignumber'\nimport { addressFromDecimal, hash } from '../../utils/crypto'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), { ChainTtl: 'Chain.ttl' })\n\n/**\n * Transform decoded event to JS type\n * @param {Object[]} events Array of events\n * @param {Object} [options={}] Options\n * @param {Object} [options.schema=[]] SC function ACI schema\n * @return {Object}\n */\nexport function decodeEvents (events, options = { schema: [] }) {\n  if (!events.length) return []\n\n  return events.map(l => {\n    const [eName, ...eParams] = l.topics\n    const hexHash = toBytes(eName, true).toString('hex')\n    const { schema } = options.schema\n      .reduce(\n        (acc, el) => {\n          if (hash(el.name).toString('hex') === hexHash) {\n            l.name = el.name\n            return {\n              schema: el.types,\n              name: el.name\n            }\n          }\n          return acc\n        },\n        { schema: [] }\n      )\n    const { decoded } = schema.reduce((acc, el) => {\n      if (el === SOPHIA_TYPES.string) {\n        return { decoded: [...acc.decoded, transformEvent(l.data, el)], params: acc.params }\n      }\n      const [event, ...tail] = acc.params\n      return { decoded: [...acc.decoded, transformEvent(event, el)], params: tail }\n    }, { decoded: [], params: eParams })\n\n    return {\n      ...l,\n      decoded\n    }\n  })\n}\n\n/**\n * Transform Event based on type\n * @param {String|Number} event Event data\n * @param {String} type Event type from schema\n * @return {*}\n */\nexport function transformEvent (event, type) {\n  switch (type) {\n    case SOPHIA_TYPES.int:\n      return parseBigNumber(event)\n    case SOPHIA_TYPES.bool:\n      return !!event\n    case SOPHIA_TYPES.hash:\n      return toBytes(event, true).toString('hex')\n    case SOPHIA_TYPES.address:\n      return addressFromDecimal(event).split('_')[1]\n    case SOPHIA_TYPES.string:\n      return decode(event).toString('utf-8')\n    default:\n      return toBytes(event, true)\n  }\n}\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [root, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const contractTypeDefs = bindings.find(c => c.name === root)\n  const aciType = [\n    ...contractTypeDefs.type_defs,\n    { name: 'state', typedef: contractTypeDefs.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n  return isTypedDefOrState(aciType.typedef, bindings) ? linkTypeDefs(aciType.typedef, bindings) : aciType.typedef\n}\n\nconst isTypedDefOrState = (t, bindings) => {\n  if (!['string', 'object'].includes(typeof t)) return false\n\n  t = typeof t === 'object' ? Object.keys(t)[0] : t\n  const [root, ...path] = t.split('.')\n  // Remote Contract Address\n  if (!path.length) return false\n  return bindings.map(c => c.name).includes(root)\n}\n\nconst isRemoteAddress = (t) => {\n  if (typeof t !== 'string') return false\n  const [root, ...path] = t.split('.')\n  return !path.length && !Object.values(SOPHIA_TYPES).includes(root)\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // If remote address\n  if (isRemoteAddress(t)) return { t: SOPHIA_TYPES.address }\n  // Link State and typeDef\n  if (isTypedDefOrState(t, bindings)) t = linkTypeDefs(t, bindings)\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport function transform (type, value, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.ChainTtl:\n      return `${value}`\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${value.map(el => transform(generic, el, { bindings }))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${value.map((el, i) => transform(generic[i], el, {\n        bindings\n      }))})`\n    case SOPHIA_TYPES.option: {\n      return value === undefined ? 'None' : `Some(${transform(generic, value, {\n        bindings\n      })})`\n    }\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      if (typeof value === 'string') {\n        if (isHex(value)) return `#${value}`\n        if (isAeAddress(value)) return `#${decode(value).toString('hex')}`\n      }\n      return `#${Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${generic.reduce(\n        (acc, { name, type }, i) => {\n          acc += `${i !== 0 ? ',' : ''}${name} = ${transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nexport function transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${variantArgs.slice(0, type.length).map((el, i) => transform(type[i], el, {\n      bindings\n    }))})`\n  }`\n}\n\nexport function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${value\n    .reduce(\n      (acc, [key, value], i) => {\n        if (i !== 0) acc += ','\n        acc += `[${transform(generic[0], key, {\n          bindings\n        })}] = ${transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ''\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map: {\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    }\n    case SOPHIA_TYPES.option: {\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    }\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record: {\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n    }\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  const { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.ChainTtl:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return prepareSchema(generic, { bindings }).optional().error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = Object.prototype.hasOwnProperty.call(context, 'value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      if (isAeAddress(value)) {\n        return decode(value)\n      }\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).sparse(true).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nmodule.exports = join;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  if (this.isGa) throw new Error('You are trying to sign data using GA account without keypair')\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (opt = { format: Crypto.ADDRESS_FORMAT.api }) {\n  return Promise.resolve(Crypto.formatAddress(opt.format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair, gaId }) {\n    this.isGa = !!gaId\n    if (gaId) {\n      if (!Crypto.isAddressValid(gaId)) throw new Error('Invalid GA address')\n      secrets.set(this, { publicKey: gaId })\n    } else {\n      validateKeyPair(keypair)\n\n      this.setSecret(keypair)\n    }\n  },\n  props: { isGa: false },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Ae: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Ae: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'getBalance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount', 'getContractByteCode', 'getContract', 'waitForTxConfirm', 'resolveName'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    getBalance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object} Transaction\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Wait for transaction confirmation\n * @function waitForTxConfirm\n * @instance\n * @abstract\n * @category async\n * @rtype (txHash: String, { confirm: Number | Boolean } = { confirm: 3 }) => Promise<Number>\n * @param {String} txHash - Generation hash or height\n * @param {String} [options={}] - options\n * @param {String} [options.confirm=3] - Block confirmation count\n * @return {Promise<Number>} Current Height\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== undefined) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError('Not a string', spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError('Not an object', spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError('Not an array', spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data, statusText } = error.response\n  const reason = R.has('reason', data) ? data.reason : data ? R.toString(data) : statusText\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Resolve reference\n * @rtype (ref: String, swag: Object) => Object\n * @param {String} ref - Reference to resolve\n * @param {Object} swag\n * @return {Object} Resolved reference definition\n */\nfunction resolveRef (ref, swag) {\n  const match = ref.match(/^#\\/(.+)$/)\n  if (match !== undefined) {\n    const value = R.path(match[1].split('/'), swag)\n    if (value != null) {\n      return value\n    }\n  }\n\n  throw Error(`Could not resolve reference: ${ref}`)\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, swag, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  const parameters = (definition.parameters || []).map(param =>\n    param.$ref ? resolveRef(param.$ref, swag) : param\n  )\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], swag.definitions)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], swag.definitions)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, swag, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Obtain networkId from account or node\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nexport function getNetworkId ({ networkId, force = false } = {}) {\n  if (!force && !networkId && !this.networkId && (!this.selectedNode || !this.selectedNode.networkId)) throw new Error('networkId is not provided')\n  if (force && !networkId && !this.networkId && (!this.selectedNode || !this.selectedNode.networkId)) return null\n  return networkId || this.networkId || this.selectedNode.networkId\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      (\n        !semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION) ||\n        this.version === '5.0.0-rc1'\n      ) &&\n      // Todo implement 'rc' version comparision in semverSatisfies\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '5.0.0'\nconst NODE_LT_VERSION = '6.0.0'\n\nexport default Node\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { error: e }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    delete: _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\nimport { VM_TYPE } from '../tx/builder/schema'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/api-version', options)\n    .then((res) => res['api-version'])\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, function: name, arguments: args, options: this.prepareCompilerOption(options) }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, backend = this.compilerOptions.backend, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata, backend }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { function: fn, source, calldata: callData, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { function: fn, source, 'call-result': callResult, 'call-value': callValue, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function validateByteCodeAPI (bytecode, source, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/validate-byte-code', { bytecode, source, options: this.prepareCompilerOption(options) }, options)\n    .then(res => typeof res === 'object' ? true : res)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options: this.prepareCompilerOption(options) }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getFateAssembler (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/fate-assembler', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function getBytecodeCompilerVersion (bytecode, options = {}) {\n  this.isInit()\n  return this.http.post('/compiler-version', { bytecode, options: this.prepareCompilerOption(options) }, options)\n}\n\nasync function setCompilerUrl (url, { forceCompatibility = false } = {}) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  await this.checkCompatibility({ forceCompatibility })\n}\n\nasync function checkCompatibility ({ force = false, forceCompatibility = false } = {}) {\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (!forceCompatibility && this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction prepareCompilerOption ({ backend = this.compilerOptions.backend, filesystem = {} } = {}) {\n  return { backend, file_system: filesystem }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl, forceCompatibility = false }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n    await this.checkCompatibility({ force: true, forceCompatibility })\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    validateByteCodeAPI,\n    isInit,\n    checkCompatibility,\n    prepareCompilerOption,\n    getFateAssembler,\n    getBytecodeCompilerVersion\n  },\n  props: {\n    compilerVersion: null,\n    compilerOptions: {\n      backend: VM_TYPE.FATE\n    }\n  }\n})\n\nconst COMPILER_GE_VERSION = '4.0.0'\nexport const COMPILER_LT_VERSION = '5.0.0'\n\nexport default ContractCompilerAPI\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nmodule.exports = isNil;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nmodule.exports = prop;","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('-')[0].split('.')\n  const geComponents = geVersion.split('-')[0].split('.')\n  const ltComponents = ltVersion.split('-')[0].split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI',\n        'validateByteCodeAPI',\n        'getFateAssembler',\n        'getBytecodeCompilerVersion'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required,\n    validateByteCodeAPI: required,\n    getFateAssembler: required,\n    getBytecodeCompilerVersion: required\n  }\n}))\n\n/**\n * Get contract ACI\n * @function contractGetACI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, options: Array) => aciObject: Promise[Object]\n * @param {String} source - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} - Contract aci object\n */\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array, options: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String, options: Array) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @param {String} backend - Contract vm(default: aevm)\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}]  Options\n * @param {Object} [options.filesystem]  Contract external namespaces map\n * @param {Object} [options.backend]  Contract vm(default: aevm)\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","module.exports = __WEBPACK_EXTERNAL_MODULE__60__;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./_xwrap\");\n\nvar bind =\n/*#__PURE__*/\nrequire(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;","var _complement =\n/*#__PURE__*/\nrequire(\"./internal/_complement\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar filter =\n/*#__PURE__*/\nrequire(\"./filter\");\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nmodule.exports = reject;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nmodule.exports = always;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nmodule.exports = mapObjIndexed;","module.exports = __WEBPACK_EXTERNAL_MODULE__66__;","function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;","var _indexOf =\n/*#__PURE__*/\nrequire(\"./_indexOf\");\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\n\nmodule.exports = _includes;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\nimport BigNumber from 'bignumber.js'\n\nimport AsyncInit from '../../utils/async-init'\nimport semverSatisfies from '../../utils/semver-satisfies'\nimport {\n  buildContractMethods,\n  decodeCallResult,\n  decodeEvents,\n  getFunctionACI,\n  prepareArgsForEncode as prepareArgs\n} from './helpers'\nimport { isAddressValid } from '../../utils/crypto'\nimport { COMPILER_LT_VERSION } from '../compiler'\nimport { AMOUNT, DEPOSIT, GAS, MIN_GAS_PRICE } from '../../tx/builder/schema'\n// TODO remove when Breaking Changes release is coming\nexport const prepareArgsForEncode = prepareArgs\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options={}] Options object\n * @param {String} [options.aci] Contract ACI\n * @param {String} [options.contractAddress] Contract address\n * @param {Object} [options.filesystem] Contact source external namespaces map\n * @param {Object} [options.forceCodeCheck=true] Don't check contract code\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, filesystem = {}, forceCodeCheck = true, opt } = {}) {\n  aci = aci || await this.contractGetACI(source, { filesystem })\n  if (contractAddress) contractAddress = await this.resolveName(contractAddress, 'ct', { resolveByNode: true })\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: DEPOSIT,\n    gasPrice: MIN_GAS_PRICE, // min gasPrice 1e9\n    amount: AMOUNT,\n    gas: GAS,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false,\n    filesystem\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    externalAci: aci.external_encoded_aci ? aci.external_encoded_aci.map(a => a.contract || a.namespace) : [],\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  // Check for valid contract address and contract code\n  if (contractAddress) {\n    if (!isAddressValid(contractAddress, 'ct')) throw new Error('Invalid contract address')\n    const contract = await this.getContract(contractAddress).catch(e => null)\n    if (!contract || !contract.active) throw new Error(`Contract with address ${contractAddress} not found on-chain or not active`)\n    // Check if we are using compiler version gte then 4.1.0(has comparing bytecode API)\n    if (!forceCodeCheck && semverSatisfies(this.compilerVersion, '4.1.0', COMPILER_LT_VERSION)) {\n      const onChanByteCode = (await this.getContractByteCode(contractAddress)).bytecode\n      const isCorrespondingBytecode = await this.validateByteCodeAPI(onChanByteCode, instance.source, instance.options).catch(e => false)\n      if (!isCorrespondingBytecode) throw new Error('Contract source do not correspond to the contract bytecode deployed on the chain')\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n  /**\n   * Decode Events\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (fn: String, events: Array) => DecodedEvents: Array\n   * @param {String} fn Function name\n   * @param {Array} events Array of encoded events(callRes.result.log)\n   * @return {Object} DecodedEvents\n   */\n  instance.decodeEvents = eventDecode({ instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst eventDecode = ({ instance }) => (fn, events) => {\n  return decodeEvents(events, getFunctionACI(instance.aci, fn, { external: instance.externalAci }))\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn, { external: instance.externalAci })\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n  if (\n    BigNumber(opt.amount).gt(0) &&\n    (Object.prototype.hasOwnProperty.call(fnACI, 'payable') && !fnACI.payable)\n  ) throw new Error(`You try to pay \"${opt.amount}\" to function \"${fn}\" which is not payable. Only payable function can accept tokens`)\n  params = !opt.skipArgsConvert ? await prepareArgs(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    ...opt.waitMined ? await decodeCallResult(result, fnACI, opt) : {}\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init', { external: instance.externalAci })\n  const source = opt.source || instance.source\n\n  if (!instance.compiled) await instance.compile(opt)\n  init = !opt.skipArgsConvert ? await prepareArgs(fnACI, init) : init\n\n  if (opt.callStatic) {\n    return client.contractCallStatic(source, null, 'init', init, {\n      top: opt.top,\n      options: opt,\n      bytecode: instance.compiled\n    })\n  } else {\n    const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n    instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n    return instance.deployInfo\n  }\n}\n\nconst compile = ({ client, instance }) => async (options = {}) => {\n  const { bytecode } = await client.contractCompile(instance.source, { ...instance.options, ...options })\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\n\nexport const ContractACI = AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\nexport default ContractACI\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport BigNumber from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA,\n  CONTRACT_VERIFICATION_SCHEMA,\n  MIN_GAS_PRICE,\n  NAME_CLAIM_VERIFICATION_SCHEMA,\n  OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION,\n  PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA,\n  TX_TYPE\n} from './builder/schema'\nimport { buildTxHash, calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    const txHashWithNetworkId = Buffer.concat([Buffer.from(networkId), buildTxHash(rlpEncoded, { raw: true })])\n    const decodedPub = decodeBase58Check(assertedType(ownerPublicKey, 'ak'))\n    return verify(txWithNetworkId, signature, decodedPub) || verify(txHashWithNetworkId, signature, decodedPub)\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gte(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gte(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  },\n  insufficientBalanceForFeeNameFee ({ nameFee, fee, balance, VSN }) {\n    return VSN === 1 || BigNumber(balance).gte(BigNumber(nameFee).plus(fee))\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = Object.prototype.hasOwnProperty.call(tx, 'gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    case TX_TYPE.nameClaim:\n      return verifySchema(NAME_CLAIM_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _makeFlat =\n/*#__PURE__*/\nrequire(\"./internal/_makeFlat\");\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nmodule.exports = flatten;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = zipObj;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isFunction =\n/*#__PURE__*/\nrequire(\"./internal/_isFunction\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar toString =\n/*#__PURE__*/\nrequire(\"./toString\");\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of any of the target object's methods to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n *\n *      const dog = {\n *        speak: async () => 'Woof!'\n *      };\n *      const speak = R.invoker(0, 'speak');\n *      speak(dog).then(console.log) //~> 'Woof!'\n *\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nmodule.exports = invoker;","var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nmodule.exports = nth;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nmodule.exports = flip;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__84__;","module.exports = __WEBPACK_EXTERNAL_MODULE__85__;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nmodule.exports = lt;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nmodule.exports = toPairs;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\nrequire(\"./mergeDeepWithKey\");\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepRight;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nmodule.exports = groupBy;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nmodule.exports = identity;","var reduceBy =\n/*#__PURE__*/\nrequire(\"./reduceBy\");\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nmodule.exports = values;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nmodule.exports = defaultTo;","module.exports = __WEBPACK_EXTERNAL_MODULE__96__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}\n\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _map;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./_isString\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nmodule.exports = _isArrayLike;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nmodule.exports = _isString;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xmap =\n/*#__PURE__*/\nrequire(\"./internal/_xmap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nmodule.exports = map;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;","var _clone =\n/*#__PURE__*/\nrequire(\"./internal/_clone\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xreduceBy =\n/*#__PURE__*/\nrequire(\"./internal/_xreduceBy\");\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nmodule.exports = reduceBy;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\n\nmodule.exports = _reduced;","import nacl from 'tweetnacl'\nimport { v4 as uuid } from 'uuid'\n\nimport { encodeBase58Check } from './crypto'\nimport { isBase64, isHex } from './string'\n\nconst _sodium = require('libsodium-wrappers-sumo')\n\n/**\n * KeyStore module\n * @module @aeternity/aepp-sdk/es/utils/keystore\n * @example import * as Keystore from '@aeternity/aepp-sdk/es/utils/keystore'\n * @example const { Keystore } = require('@aeternity/aepp-sdk')\n */\n\nconst DEFAULTS = {\n  crypto: {\n    secret_type: 'ed25519',\n    symmetric_alg: 'xsalsa20-poly1305',\n    kdf: 'argon2id',\n    kdf_params: {\n      memlimit_kib: 65536,\n      opslimit: 3,\n      parallelism: 1\n    }\n  }\n}\n\n// DERIVED KEY PART\nconst DERIVED_KEY_FUNCTIONS = {\n  argon2id: deriveKeyUsingArgon2id\n}\n\nexport async function deriveKeyUsingArgon2id (password, salt, options) {\n  const { memlimit_kib: memoryCost, opslimit: timeCost } = options.kdf_params\n  // const isBrowser = !(typeof module !== 'undefined' && module.exports)\n\n  return _sodium.ready.then(async () => {\n    // tslint:disable-next-line:typedef\n    const sodium = _sodium\n\n    const result = sodium.crypto_pwhash(\n      32,\n      password,\n      salt,\n      timeCost,\n      memoryCost * 1024,\n      sodium.crypto_pwhash_ALG_ARGON2ID13\n    )\n    return Buffer.from(result)\n  })\n}\n\n// CRYPTO PART\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': { encrypt: encryptXsalsa20Poly1305, decrypt: decryptXsalsa20Poly1305 }\n}\n\nfunction encryptXsalsa20Poly1305 ({ plaintext, key, nonce }) {\n  return nacl.secretbox(plaintext, nonce, key)\n}\n\nfunction decryptXsalsa20Poly1305 ({ ciphertext, key, nonce }) {\n  const res = nacl.secretbox.open(ciphertext, nonce, key)\n  if (!res) throw new Error('Invalid password or nonce')\n  return res\n}\n\n/**\n * Convert a string to a Buffer.  If encoding is not specified, hex-encoding\n * will be used if the input is valid hex.  If the input is valid base64 but\n * not valid hex, base64 will be used.  Otherwise, utf8 will be used.\n * @param {string} str String to be converted.\n * @param {string=} enc Encoding of the input string (optional).\n * @return {buffer} Buffer (bytearray) containing the input data.\n */\nfunction str2buf (str, enc) {\n  if (!str || str.constructor !== String) return str\n  if (!enc && isHex(str)) enc = 'hex'\n  if (!enc && isBase64(str)) enc = 'base64'\n  return Buffer.from(str, enc)\n}\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @param {buffer|string} plaintext Data to be encrypted.\n * @param {buffer|string} key Secret key.\n * @param {buffer|string} nonce Randomly generated nonce.\n * @param {string=} algo Encryption algorithm (default: DEFAULTS.crypto.symmetric_alg).\n * @return {buffer} Encrypted data.\n */\nfunction encrypt (plaintext, key, nonce, algo = DEFAULTS.crypto.symmetric_alg) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].encrypt({ plaintext, nonce, key })\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @param {buffer|Uint8Array} ciphertext Data to be decrypted.\n * @param {buffer|Uint8Array} key Secret key.\n * @param {buffer|Uint8Array} nonce Nonce from key-object.\n * @param {string=} algo Encryption algorithm.\n * @return {buffer} Decrypted data.\n */\nfunction decrypt (ciphertext, key, nonce, algo) {\n  if (!CRYPTO_FUNCTIONS[algo]) throw new Error(algo + ' is not available')\n  return CRYPTO_FUNCTIONS[algo].decrypt({ ciphertext, nonce, key })\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @param {string} password User-supplied password.\n * @param {buffer|Uint8Array} nonce Randomly generated nonce.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: DEFAULTS.crypto.kdf).\n * @param {Object=} options.kdf_params KDF parameters (default: DEFAULTS.crypto.kdf_params).\n * @return {buffer} Secret key derived from password.\n */\nasync function deriveKey (password, nonce, options = {\n  kdf_params: DEFAULTS.crypto.kdf_params,\n  kdf: DEFAULTS.crypto.kdf\n}) {\n  if (typeof password === 'undefined' || password === null || !nonce) {\n    throw new Error('Must provide password and nonce to derive a key')\n  }\n\n  if (!Object.prototype.hasOwnProperty.call(DERIVED_KEY_FUNCTIONS, options.kdf)) throw new Error('Unsupported kdf type')\n\n  return DERIVED_KEY_FUNCTIONS[options.kdf](password, nonce, options)\n}\n\n/**\n * Assemble key data object in secret-storage format.\n * @param {buffer} name Key name.\n * @param {buffer} derivedKey Password-derived secret key.\n * @param {buffer} privateKey Private key.\n * @param {buffer} nonce Randomly generated 24byte nonce.\n * @param {buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {string=} options.kdf Key derivation function (default: argon2id).\n * @param {string=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdf_params KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nfunction marshal (name, derivedKey, privateKey, nonce, salt, options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return Object.assign(\n    { name, version: 1, public_key: getAddressFromPriv(privateKey), id: uuid() },\n    {\n      crypto: Object.assign(\n        {\n          secret_type: opt.secret_type,\n          symmetric_alg: opt.symmetric_alg,\n          ciphertext: Buffer.from(encrypt(Buffer.from(privateKey), derivedKey, nonce, opt.symmetric_alg)).toString('hex'),\n          cipher_params: { nonce: Buffer.from(nonce).toString('hex') }\n        },\n        { kdf: opt.kdf, kdf_params: { ...opt.kdf_params, salt: Buffer.from(salt).toString('hex') } }\n      )\n    }\n  )\n}\n\nexport function getAddressFromPriv (secret) {\n  const keys = nacl.sign.keyPair.fromSecretKey(str2buf(secret))\n  const publicBuffer = Buffer.from(keys.publicKey)\n  return `ak_${encodeBase58Check(publicBuffer)}`\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @param {String} password Keystore object password.\n * @param {Object} keyObject Keystore object.\n * @return {Buffer} Plaintext private key.\n */\nexport async function recover (password, keyObject) {\n  validateKeyObj(keyObject)\n  const nonce = Uint8Array.from(str2buf(keyObject.crypto.cipher_params.nonce))\n  const salt = Uint8Array.from(str2buf(keyObject.crypto.kdf_params.salt))\n  const kdfParams = keyObject.crypto.kdf_params\n  const kdf = keyObject.crypto.kdf\n\n  const key = await decrypt(\n    Uint8Array.from(str2buf(keyObject.crypto.ciphertext)),\n    await deriveKey(password, salt, { kdf, kdf_params: kdfParams }),\n    nonce,\n    keyObject.crypto.symmetric_alg\n  )\n  if (!key) throw new Error('Invalid password')\n\n  if (Buffer.from(key).length === 64) return Buffer.from(key).toString('hex')\n  return Buffer.from(key).toString('utf-8')\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @param {String} name Key name.\n * @param {String} password User-supplied password.\n * @param {String} privateKey Private key.\n * @param {Buffer} nonce Randomly generated 24byte nonce.\n * @param {Buffer} salt Randomly generated 16byte salt.\n * @param {Object=} options Encryption parameters.\n * @param {String=} options.kdf Key derivation function (default: pbkdf2).\n * @param {String=} options.cipher Symmetric cipher (default: constants.cipher).\n * @param {Object=} options.kdfparams KDF parameters (default: constants.<kdf>).\n * @return {Object}\n */\nexport async function dump (name, password, privateKey, nonce = nacl.randomBytes(24), salt = nacl.randomBytes(16), options = {}) {\n  const opt = Object.assign({}, DEFAULTS.crypto, options)\n  return marshal(\n    name,\n    await deriveKey(password, salt, opt),\n    privateKey,\n    nonce,\n    salt,\n    opt\n  )\n}\n\nexport function validateKeyObj (obj) {\n  const root = ['crypto', 'id', 'version', 'public_key']\n  const cryptoKeys = ['cipher_params', 'ciphertext', 'symmetric_alg', 'kdf', 'kdf_params']\n\n  const missingRootKeys = root.filter(key => !Object.prototype.hasOwnProperty.call(obj, key))\n  if (missingRootKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingRootKeys}`)\n\n  const missingCryptoKeys = cryptoKeys.filter(key => !Object.prototype.hasOwnProperty.call(obj.crypto, key))\n  if (missingCryptoKeys.length) throw new Error(`Invalid key file format. Require properties: ${missingCryptoKeys}`)\n\n  return true\n}\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(secretKey), Buffer.from(indexBuffer)])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport const getHdWalletAccountFromMnemonic = (mnemonic, accountIdx) => {\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey)\n  const keyPair = getKeyPair(derived.secretKey)\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx\n  }\n}\n\nexport default {\n  getHdWalletAccountFromMnemonic,\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__115__;","module.exports = __WEBPACK_EXTERNAL_MODULE__116__;","module.exports = __WEBPACK_EXTERNAL_MODULE__117__;","var invoker =\n/*#__PURE__*/\nrequire(\"./invoker\");\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nmodule.exports = cond;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nmodule.exports = lte;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\n\nmodule.exports = T;","var _includes =\n/*#__PURE__*/\nrequire(\"./internal/_includes\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar flip =\n/*#__PURE__*/\nrequire(\"./flip\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"./reject\");\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nmodule.exports = without;","var _includesWith =\n/*#__PURE__*/\nrequire(\"./internal/_includesWith\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = uniqWith;","var _objectIs =\n/*#__PURE__*/\nrequire(\"./internal/_objectIs\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nmodule.exports = identical;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _Set =\n/*#__PURE__*/\nrequire(\"./internal/_Set\");\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nmodule.exports = difference;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nmodule.exports = mergeAll;","module.exports = __WEBPACK_EXTERNAL_MODULE__127__;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nmodule.exports = assoc;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar hasPath =\n/*#__PURE__*/\nrequire(\"./hasPath\");\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nmodule.exports = has;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xdrop =\n/*#__PURE__*/\nrequire(\"./internal/_xdrop\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nmodule.exports = drop;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _dropLast =\n/*#__PURE__*/\nrequire(\"./internal/_dropLast\");\n\nvar _xdropLast =\n/*#__PURE__*/\nrequire(\"./internal/_xdropLast\");\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nmodule.exports = dropLast;","var curry =\n/*#__PURE__*/\nrequire(\"./curry\");\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xfind =\n/*#__PURE__*/\nrequire(\"./internal/_xfind\");\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nmodule.exports = find;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","module.exports = __WEBPACK_EXTERNAL_MODULE__135__;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__137__;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _isFunction(x) {\n  var type = Object.prototype.toString.call(x);\n  return type === '[object Function]' || type === '[object AsyncFunction]' || type === '[object GeneratorFunction]' || type === '[object AsyncGeneratorFunction]';\n}\n\nmodule.exports = _isFunction;","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./_map\");\n\nvar _quote =\n/*#__PURE__*/\nrequire(\"./_quote\");\n\nvar _toISOString =\n/*#__PURE__*/\nrequire(\"./_toISOString\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar reject =\n/*#__PURE__*/\nrequire(\"../reject\");\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\n\nmodule.exports = _toString;","var equals =\n/*#__PURE__*/\nrequire(\"../equals\");\n\nfunction _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}\n\nmodule.exports = _indexOf;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;","var _arrayFromIterator =\n/*#__PURE__*/\nrequire(\"./_arrayFromIterator\");\n\nvar _includesWith =\n/*#__PURE__*/\nrequire(\"./_includesWith\");\n\nvar _functionName =\n/*#__PURE__*/\nrequire(\"./_functionName\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _objectIs =\n/*#__PURE__*/\nrequire(\"./_objectIs\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}\n\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\nmodule.exports = _functionName;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\n\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\n\nmodule.exports = _complement;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _filter =\n/*#__PURE__*/\nrequire(\"./internal/_filter\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xfilter =\n/*#__PURE__*/\nrequire(\"./internal/_xfilter\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nmodule.exports = filter;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\n\nmodule.exports = _isTransformer;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _filter;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\n\nmodule.exports = _xwrap;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nmodule.exports = _xfilter;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nmodule.exports = _xmap;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nmodule.exports = max;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = _makeFlat;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.0\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nmodule.exports = paths;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","var _includes =\n/*#__PURE__*/\nrequire(\"./_includes\");\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nmodule.exports = _Set;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar mergeWithKey =\n/*#__PURE__*/\nrequire(\"./mergeWithKey\");\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nmodule.exports = mergeDeepWithKey;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = mergeWithKey;","var _cloneRegExp =\n/*#__PURE__*/\nrequire(\"./_cloneRegExp\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\n\nfunction _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}\n\nmodule.exports = _clone;","function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}\n\nmodule.exports = _cloneRegExp;","var _curryN =\n/*#__PURE__*/\nrequire(\"./_curryN\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nmodule.exports = _xreduceBy;","function _identity(x) {\n  return x;\n}\n\nmodule.exports = _identity;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar isNil =\n/*#__PURE__*/\nrequire(\"./isNil\");\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0 || isNil(obj)) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (!isNil(val) && _has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nmodule.exports = hasPath;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nmodule.exports = _xdrop;","var take =\n/*#__PURE__*/\nrequire(\"../take\");\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\n\nmodule.exports = dropLast;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _xtake =\n/*#__PURE__*/\nrequire(\"./internal/_xtake\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nmodule.exports = take;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nmodule.exports = _xtake;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nmodule.exports = _xdropLast;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _reduced =\n/*#__PURE__*/\nrequire(\"./_reduced\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nmodule.exports = _xfind;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","module.exports = __WEBPACK_EXTERNAL_MODULE__184__;","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","export const pause = duration => new Promise(resolve => setTimeout(resolve, duration))\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\n\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\nimport { assertedType } from '../utils/crypto'\nimport { pause } from '../utils/other'\nimport { isNameValid, produceNameId } from '../tx/builder/helpers'\nimport { NAME_ID_KEY } from '../tx/builder/schema'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Ae.defaults, options)\n  // Verify transaction before broadcast\n  if (verify || (typeof verify !== 'boolean' && this.verifyTxBeforeSend)) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error: ' + JSON.stringify(validation)), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n\n    if (waitMined) {\n      const txData = { ...await this.poll(txHash, options), rawTx: tx }\n      // wait for transaction confirmation\n      if (options.confirm) {\n        return { ...txData, confirmationHeight: await this.waitForTxConfirm(txHash, options) }\n      }\n      return txData\n    }\n    return { hash: txHash, rawTx: tx }\n  } catch (error) {\n    throw Object.assign(error, { rawTx: tx, verifyTx: () => this.unpackAndVerify(tx) })\n  }\n}\n\nasync function waitForTxConfirm (txHash, options = { confirm: 3 }) {\n  options.confirm = options.confirm === true ? 3 : options.confirm\n  const { blockHeight } = await this.tx(txHash)\n  return this.awaitHeight(blockHeight + options.confirm, options)\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\n/**\n * @function\n * @deprecated\n */\nasync function balance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function getBalance (address, { height, hash, format = AE_AMOUNT_FORMATS.AETTOS } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height }).catch(_ => ({ balance: 0 }))\n\n  return formatAmount(balance, { targetDenomination: format }).toString()\n}\n\nasync function tx (hash, info = true) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx', 'ChannelForceProgressTx'].includes(tx.tx.type) && info && tx.blockHeight !== -1) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {}\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function awaitHeight (height, { interval = 5000, attempts = 20 } = {}) {\n  let currentHeight\n  for (let i = 0; i < attempts; i++) {\n    if (i) await pause(interval)\n    currentHeight = await this.height()\n    if (currentHeight >= height) return currentHeight\n  }\n  throw Error(`Giving up after ${(attempts - 1) * interval}ms, current height: ${currentHeight}, desired height: ${height}`)\n}\n\nasync function topBlock () {\n  return Object.values(await this.api.getTopBlock())[0]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000, allowUnsynced = false } = {}) {\n  const max = await this.height() + blocks\n  do {\n    const tx = await this.tx(th).catch(_ => null)\n    if (tx && (tx.blockHeight !== -1 || (allowUnsynced && tx.height))) {\n      return tx\n    }\n    await pause(interval)\n  } while (await this.height() < max)\n  throw new Error(`Giving up after ${blocks} blocks mined, transaction hash: ${th}`)\n}\n\nasync function getTxInfo (hash) {\n  const result = await this.api.getTransactionInfoByHash(hash)\n  return result.callInfo || result\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs: txs.map(tx => ({ tx })), accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getContract (contractId) {\n  return this.api.getContract(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * Resolve AENS name and return name hash\n * @param {String} nameOrId\n * @param {String} prefix\n * @param {Boolean} verify\n * @param {Boolean} resolveByNode\n * @return {String} Address or AENS name hash\n */\nasync function resolveName (nameOrId, prefix, { verify = false, resolveByNode = false } = {}) {\n  const prefixes = Object.keys(NAME_ID_KEY)\n  if (!nameOrId || typeof nameOrId !== 'string') throw new Error('Invalid name or address. Should be a string')\n  if (!prefixes.includes(prefix)) throw new Error(`Invalid prefix ${prefix}. Should be one of [${prefixes}]`)\n  if (assertedType(nameOrId, prefix, true)) return nameOrId\n\n  if (isNameValid(nameOrId)) {\n    if (resolveByNode || verify) {\n      const name = await this.getName(nameOrId).catch(_ => null)\n      if (!name) throw new Error('Name not found')\n      const pointer = name.pointers.find(({ id }) => id.split('_')[0] === prefix)\n      if (!pointer) throw new Error(`Name ${nameOrId} do not have pointers for ${prefix}`)\n      return pointer.id\n    }\n    return produceNameId(nameOrId)\n  }\n  throw new Error('Invalid name or address')\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = true }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getBalance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getContract,\n    getName,\n    waitForTxConfirm,\n    resolveName\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\n\nimport ChainNode from '../chain/node'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { ABI_VERSIONS, MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE, VM_TYPE, TX_TTL } from './builder/schema'\nimport { buildContractId } from './builder/helpers'\nimport { TxObject } from './tx-object'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), {\n          recipientId,\n          senderId,\n          nonce,\n          ttl,\n          payload\n        }),\n        type: TX_TYPE.spend\n      }).encodedTx\n    }\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.namePreClaim\n      }).encodedTx\n    }\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt, vsn = 2 }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments), vsn })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee, vsn }),\n        type: TX_TYPE.nameClaim\n      }).encodedTx\n    }\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }),\n        type: TX_TYPE.nameTransfer\n      }).encodedTx\n    }\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.nameUpdate\n      }).encodedTx\n    }\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee }),\n        type: TX_TYPE.nameRevoke\n      }).encodedTx\n    }\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...{\n        tx: TxObject({\n          params: R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }),\n          type: TX_TYPE.contractCreate\n        }).encodedTx\n      },\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }),\n        type: TX_TYPE.contractCall\n      }).encodedTx\n    }\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion = ABI_VERSIONS.NO_ABI }) {\n  // const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: {\n          accountId,\n          queryFee,\n          abiVersion,\n          fee,\n          oracleTtl,\n          nonce,\n          ttl,\n          queryFormat,\n          responseFormat\n        },\n        type: TX_TYPE.oracleRegister\n      }).encodedTx\n    }\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, fee, oracleTtl, nonce, ttl },\n        type: TX_TYPE.oracleExtend\n      }).encodedTx\n    }\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId },\n        type: TX_TYPE.oracleQuery\n      }).encodedTx\n    }\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return tx\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? {\n      tx: TxObject({\n        params: { oracleId, responseTtl, queryId, response, fee, ttl, nonce },\n        type: TX_TYPE.oracleResponse\n      }).encodedTx\n    }\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData, backend }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...{ tx: TxObject({ params: R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), type: TX_TYPE.gaAttach }).encodedTx },\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number, backend: string })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion, backend } = {}) {\n  const { consensusProtocolVersion } = this.getNodeInfo()\n  const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : backend === VM_TYPE.AEVM ? protocolForTX.abiVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.abiVersion[0] : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : backend === VM_TYPE.AEVM ? protocolForTX.vmVersion[1] : backend === VM_TYPE.FATE ? protocolForTX.vmVersion[0] : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (protocolForTX.abiVersion.length && !R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = TX_TTL, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl, vsn }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await calculateTtl.call(this, t, !absoluteTtl)\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }), vsn })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = ChainNode.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: true,\n    showWarning: false\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { salt } from '../utils/crypto'\nimport {\n  commitmentHash,\n  isNameValid,\n  getMinimumNameFee,\n  classify,\n  isAuctionName,\n  validatePointers, encode, produceNameId\n} from '../tx/builder/helpers'\nimport Ae from './'\nimport { CLIENT_TTL, NAME_FEE, NAME_TTL } from '../tx/builder/schema'\n\n/**\n * Revoke a name\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} name Name hash\n * @param {Object} [options={}] options\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n */\nasync function revoke (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * Update a name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String[]} pointers Array of name pointers. Can be oracle|account|contract|channel public key\n * @param {Object} [options={}]\n * @param {Boolean} [options.extendPointers=false] extendPointers Get the pointers from the node and merge with provided one. Pointers with the same type will be overwrited\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @param {(Number|String|BigNumber)} [options.nameTtl=50000] nameTtl Name ttl represented in number of blocks (Max value is 50000 blocks)\n * @param {(Number|String|BigNumber)} [options.clientTtl=84600] clientTtl a suggestion as to how long any clients should cache this information\n * @return {Promise<Object>}\n * @throws Invalid pointer array error\n * @example\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n */\nasync function update (name, pointers = [], options = { extendPointers: false }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  if (!validatePointers(pointers)) throw new Error('Invalid pointers array')\n\n  pointers = [\n    ...options.extendPointers ? (await this.getName(name)).pointers : [],\n    ...pointers.map(p => R.fromPairs([['id', p], ['key', classify(p)]]))\n  ].reduce((acc, el) => [...acc.filter(p => p.key !== el.key), el], [])\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    pointers\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name AENS name\n * @param {String} account Recipient account publick key\n * @param {Object} [options={}]\n * @param {(String|Object)} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {(Number|String|BigNumber)} [options.fee] fee\n * @param {(Number|String|BigNumber)} [options.ttl] ttl\n * @param {(Number|String|BigNumber)} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n */\nasync function transfer (name, account, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId: produceNameId(name),\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} opt Options\n * @return {Promise<Object>}\n * @example\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n */\nasync function query (name, opt = {}) {\n  isNameValid(name)\n  const o = await this.getName(name)\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || [],\n    update: async (pointers = [], options = {}) => {\n      return {\n        ...(await this.aensUpdate(name, pointers, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options = {}) => {\n      return {\n        ...(await this.aensTransfer(name, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options = {}) => this.aensRevoke(name, R.merge(opt, options)),\n    extendTtl: async (nameTtl = NAME_TTL, options = {}) => {\n      if (!nameTtl || typeof nameTtl !== 'number' || nameTtl > NAME_TTL) throw new Error('Ttl must be an number and less then 50000 blocks')\n\n      return {\n        ...(await this.aensUpdate(name, o.pointers.map(p => p.id), { ...R.merge(opt, options), nameTtl })),\n        ...(await this.aensQuery(name))\n      }\n    }\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Number} salt Salt from pre-claim, or 0 if it's a bid\n * @param {Object} [options={}] options\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @param {Number|String} [options.nameFee] Name Fee (By default calculated by sdk)\n * @param {Number|String} [options.vsn = 2] Transaction vsn from Lima is 2\n * @return {Promise<Object>} the result of the claim\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n */\nasync function claim (name, salt, options = { vsn: 2 }) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const minNameFee = getMinimumNameFee(name)\n  if (opt.nameFee !== this.Ae.defaults.nameFee && minNameFee.gt(opt.nameFee)) {\n    throw new Error(`the provided fee ${opt.nameFee} is not enough to execute the claim, required: ${minNameFee}`)\n  }\n  opt.nameFee = opt.nameFee !== this.Ae.defaults.nameFee ? opt.nameFee : minNameFee\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: encode(name, 'nm')\n  }))\n\n  const result = await this.send(claimTx, opt)\n  if (!isAuctionName(name)) {\n    delete opt.vsn\n    const nameInter = opt.waitMined ? await this.aensQuery(name, opt) : {}\n    return Object.assign(result, nameInter)\n  }\n  return { ...result, nameFee: opt.nameFee }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>}\n * @example\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n */\nasync function preclaim (name, options = {}) {\n  isNameValid(name)\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const commitmentId = commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId\n  })\n}\n\n/**\n * Bid to name auction\n * @instance\n * @function\n * @category async\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name Domain name\n * @param {String|Number} nameFee Name fee (bid fee)\n * @param {Object} [options={}]\n * @param {String|Object} [options.onAccount] onAccount Make operation on specific account from sdk(you pass publickKey) or\n * using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param {Number|String|BigNumber} [options.fee] fee\n * @param {Number|String|BigNumber} [options.ttl] ttl\n * @param {Number|String|BigNumber} [options.nonce] nonce\n * @return {Promise<Object>} Transaction result\n * @example\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, startFee, incrementPercentage)\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n */\nasync function bid (name, nameFee = NAME_FEE, options = {}) {\n  return this.aensClaim(name, 0, { ...options, nameFee, vsn: 2 })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke,\n    aensBid: bid\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        clientTtl: CLIENT_TTL,\n        nameTtl: NAME_TTL, // aec_governance:name_claim_max_expiration() => 50000\n        nameFee: NAME_FEE\n      }\n    }\n  }\n})\n\nexport default Aens\n","import BigNumber from 'bignumber.js'\nimport { MAX_AUTH_FUN_GAS, TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { hash } from '../../utils/crypto'\n\nexport const prepareGaParams = (ins) => async (authData, authFnName) => {\n  if (typeof authData !== 'object') throw new Error('AuthData must be an object')\n  if (authData.gas && BigNumber(authData.gas).gt(MAX_AUTH_FUN_GAS)) throw new Error(`the maximum gas value for ga authFun is ${MAX_AUTH_FUN_GAS}, got ${authData.gas}`)\n  const gas = authData.gas || MAX_AUTH_FUN_GAS\n  if (authData.callData) {\n    if (authData.callData.split('_')[0] !== 'cb') throw new Error('Auth data must be a string with \"cb\" prefix.')\n    return { authCallData: authData.callData, gas }\n  } else {\n    if (!authData.source || !authData.args) throw new Error('Auth data must contain source code and arguments.')\n    return { authCallData: await ins.contractEncodeCall(authData.source, authFnName, authData.args), gas }\n  }\n}\n\nexport const getContractAuthFan = (ins) => async (source, fnName) => {\n  const { bytecode } = await ins.contractCompile(source)\n\n  return { bytecode, authFun: hash(fnName) }\n}\n\nexport const wrapInEmptySignedTx = (rlp) => buildTx({ encodedTx: rlp, signatures: [] }, TX_TYPE.signed)\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Generalize Account module - routines to use generalize account\n *\n * @module @aeternity/aepp-sdk/es/contract/ga\n * @export GeneralizeAccount\n * @example import GeneralizeAccount from '@aeternity/aepp-sdk/es/contract/ga' (Using tree-shaking)\n * @example import { GeneralizeAccount } from '@aeternity/aepp-sdk' (Using bundle)\n */\nimport * as R from 'ramda'\n\nimport { ContractAPI } from '../../ae/contract'\nimport { TX_TYPE } from '../../tx/builder/schema'\nimport { buildTx } from '../../tx/builder'\nimport { getContractAuthFan, prepareGaParams, wrapInEmptySignedTx } from './helpers'\nimport { assertedType, decodeBase64Check } from '../../utils/crypto'\n\n/**\n * GeneralizeAccount Stamp\n *\n * Provide Generalize Account implementation\n * {@link module:@aeternity/aepp-sdk/es/contract/ga} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} GeneralizeAccount instance\n * @example\n * const authContract = ``\n * await client.createGeneralizeAccount(authFnName, authContract, [...authFnArguments]\n * // Make spend using GA\n * const callData = 'cb_...' // encoded call data for auth contract\n * await client.spend(10000, receiverPub, { authData: { callData } })\n * // or\n * await client.spend(10000, receiverPub, { authData: { source: authContract, args: [...authContractArgs] } }) // sdk will prepare callData itself\n */\nexport const GeneralizeAccount = ContractAPI.compose({\n  methods: {\n    createGeneralizeAccount,\n    createMetaTx,\n    isGA\n  }\n})\nexport default GeneralizeAccount\n\n/**\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * Check if account is GA account\n * @param {String} address - Account address\n * @return {Boolean}\n */\nasync function isGA (address) {\n  const { contractId } = await this.getAccount(address)\n  return !!contractId\n}\n\n/**\n * Convert current account to GA account\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} authFnName - Authorization function name\n * @param {String} source - Auth contract source code\n * @param {Array} args - init arguments\n * @param {Object} options - Options\n * @return {Promise<Readonly<{result: *, owner: *, createdAt: Date, address, rawTx: *, transaction: *}>>}\n */\nasync function createGeneralizeAccount (authFnName, source, args, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const ownerId = await this.address(opt)\n\n  if (await this.isGA(ownerId)) throw new Error(`Account ${ownerId} is already GA`)\n\n  const { authFun, bytecode } = await getContractAuthFan(this)(source, authFnName)\n  const callData = await this.contractEncodeCall(source, 'init', args)\n\n  const { tx, contractId } = await this.gaAttachTx(R.merge(opt, { ownerId, code: bytecode, callData, authFun }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction: hash,\n    rawTx,\n    gaContractId: contractId\n  })\n}\n\n/**\n * Create a metaTx transaction\n * @alias module:@aeternity/aepp-sdk/es/contract/ga\n * @function\n * @param {String} rawTransaction Inner transaction\n * @param {Object} authData Object with gaMeta params\n * @param {String} authFnName - Authorization function name\n * @param {Object} options - Options\n * @return {String}\n */\nasync function createMetaTx (rawTransaction, authData, authFnName, options = {}) {\n  if (!authData) throw new Error('authData is required')\n  // Check if authData is callData or if it's an object prepare a callData from source and args\n  const { authCallData, gas } = await prepareGaParams(this)(authData, authFnName)\n  const opt = R.merge(this.Ae.defaults, options)\n  // Get transaction rlp binary\n  const rlpBinaryTx = decodeBase64Check(assertedType(rawTransaction, 'tx'))\n  // Wrap in SIGNED tx with empty signatures\n  const { rlpEncoded } = wrapInEmptySignedTx(rlpBinaryTx)\n  // Get abi\n  const { abiVersion } = await this.getVmVersion(TX_TYPE.contractCall)\n  // Prepare params for META tx\n  const params = { ...opt, tx: rlpEncoded, gaId: await this.address(opt), abiVersion: abiVersion, authData: authCallData, gas }\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl } = await this.prepareTxParams(TX_TYPE.gaMeta, params)\n  // Build META tx\n  const { rlpEncoded: metaTxRlp } = buildTx({ ...params, fee: `${fee}`, ttl }, TX_TYPE.gaMeta)\n  // Wrap in empty signed tx\n  const { tx } = wrapInEmptySignedTx(metaTxRlp)\n  // Send tx to the chain\n  return tx\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve !== undefined) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","import * as R from 'ramda'\n\nconst asEnum = (array) => R.zipObj(array, array)\n\nexport const VERSION = 1\n\nexport const MESSAGE_DIRECTION = asEnum(['to_waellet', 'to_aepp'])\n\nexport const WALLET_TYPE = asEnum([\n  'window',\n  'extension'\n])\n\nexport const NOTIFICATIONS = asEnum([\n  'readyToConnect',\n  'closeConnection',\n  'updateNetwork',\n  'updateAddress'\n])\n\nexport const REQUESTS = asEnum([\n  'connect',\n  'subscribeAddress',\n  'sign',\n  'address',\n  'signMessage'\n])\n\nexport const SUBSCRIPTION_VALUES = asEnum([\n  'current',\n  'connected'\n])\n\nexport const SUBSCRIPTION_TYPES = asEnum([\n  'subscribe',\n  'unsubscribe'\n])\n\nexport const METHODS = {\n  wallet: {\n    [NOTIFICATIONS.readyToConnect]: 'connection.announcePresence',\n    [NOTIFICATIONS.updateAddress]: 'address.update'\n  },\n  aepp: {\n    [REQUESTS.address]: 'address.get',\n    [REQUESTS.connect]: 'connection.open',\n    [REQUESTS.sign]: 'transaction.sign',\n    [REQUESTS.signMessage]: 'message.sign',\n    [REQUESTS.subscribeAddress]: 'address.subscribe'\n  },\n  [NOTIFICATIONS.updateNetwork]: 'networkId.update',\n  [NOTIFICATIONS.closeConnection]: 'connection.close'\n}\n\nexport const RPC_STATUS = {\n  CONNECTED: 'CONNECTED',\n  DISCONNECTED: 'DISCONNECTED',\n  CONNECTION_REJECTED: 'CONNECTION_REJECTED',\n  WAITING_FOR_CONNECTION_APPROVE: 'WAITING_FOR_CONNECTION_APPROVE',\n  WAITING_FOR_CONNECTION_REQUEST: 'WAITING_FOR_CONNECTION_REQUEST',\n  WAITING_FOR_SUBSCRIPTION: 'WAITING_FOR_SUBSCRIPTION'\n}\n\nexport const ERRORS = {\n  broadcastFailde: (error = {}) => ({\n    code: 3,\n    data: error,\n    message: 'Broadcast failed'\n  }),\n  invalidTransaction: (error = {}) => ({\n    code: 2,\n    data: error,\n    message: 'Invalid transaction'\n  }),\n  rejectedByUser: (error = {}) => ({\n    code: 4,\n    data: error,\n    message: 'Operation rejected by user'\n  }),\n  connectionDeny: (error = {}) => ({\n    code: 9,\n    data: error,\n    message: 'Wallet deny your connection request'\n  }),\n  permissionDeny: (error = {}) => ({\n    code: 11,\n    data: error,\n    message: `You are not subscribed for account ${error.account}`\n  }),\n  internalError: (error = {}) => ({\n    code: 12,\n    data: error,\n    message: error.msg\n  }),\n  notAuthorize: (error = {}) => ({\n    code: 10,\n    data: error,\n    message: 'You are not connected to the wallet'\n  }),\n  unsupportedProtocol: (error = {}) => ({\n    code: 5,\n    data: error,\n    message: 'Unsupported Protocol Version'\n  }),\n  unsupportedNetwork: (error = {}) => ({\n    code: 8,\n    data: error,\n    message: 'Unsupported Network'\n  })\n}\n","/**\n * Browser helper functions\n */\nimport { isMemoryAccount } from '../../account/selector'\n\nconst isWeb = () => window && window.location && window.location.protocol.startsWith('http')\n\nexport const getBrowserAPI = (force = false) => {\n  const { chrome, browser } = window\n  // Chrome, Opera support\n  if (typeof chrome !== 'undefined' && chrome === Object(chrome)) return chrome\n  // Firefox support\n  if (typeof browser !== 'undefined' && browser === Object(browser)) return browser\n  if (!force) throw new Error('Browser is not detected')\n  return {}\n}\n\nconst isExtensionContext = () => {\n  const browser = getBrowserAPI(true)\n  return typeof browser === 'object' && browser && typeof browser.extension === 'object'\n}\n\nexport const isContentScript = () => isExtensionContext() && isWeb()\n\nexport const isInIframe = () => window !== window.parent\n\nexport const getWindow = (force = false) => {\n  if (!window && !force) throw new Error('Browser is not detected')\n  return window\n}\n\n/**\n * RPC helper functions\n */\nexport const sendMessage = (connection) => {\n  let messageId = 0\n\n  return ({ id, method, params, result, error }, isNotificationOrResponse = false) => {\n    // Increment id for each request\n    isNotificationOrResponse || (messageId += 1)\n    id = isNotificationOrResponse ? (id || null) : messageId\n    const msgData = params\n      ? { params }\n      : result\n        ? { result }\n        : { error }\n    connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id ? { id } : {},\n      method,\n      ...msgData\n    })\n    return id\n  }\n}\n\nexport const receive = (handler) => (msg, origin) => {\n  if (!msg || !msg.jsonrpc || msg.jsonrpc !== '2.0' || !msg.method) {\n    console.warn('Receive invalid message', msg)\n    return\n  }\n  handler(msg, origin)\n}\n\nexport const getHandler = (schema, msg, { debug = false } = {}) => {\n  const handler = schema[msg.method]\n  if (!handler || typeof handler !== 'function') {\n    debug && console.log(`Unknown message method ${msg.method}`)\n    return () => async () => true\n  }\n  return handler\n}\n\nexport const message = (method, params = {}) => ({ method, params })\n\nexport const responseMessage = (id, method, { error, result } = {}) => ({ id, method, ...(error ? { error } : { result }) })\n\nexport const sendResponseMessage = (client) => (id, method, data) => client.sendMessage(responseMessage(id, method, data), true)\n\nexport const voidFn = () => undefined\n\nexport const isValidAccounts = (accounts) => (['', 'connected', 'current'].filter(k => typeof (k ? accounts[k] : accounts) === 'object')).length === 3\n\nexport const resolveOnAccount = (addresses, onAccount, opt = {}) => {\n  if (!addresses.find(a => a === onAccount)) {\n    if (typeof opt.onAccount !== 'object' || !isMemoryAccount(opt.onAccount)) throw new Error('Provided onAccount should be a MemoryAccount')\n    onAccount = opt.onAccount\n  }\n  return onAccount\n}\n","/**\n * RPC client helpers\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @export { RpcClient, RpcClients }\n * @example import RpcClient from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n * @example import RpcClients from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client'\n */\nimport stampit from '@stamp/it'\n\nimport { METHODS, RPC_STATUS, SUBSCRIPTION_TYPES } from '../schema'\nimport { receive, sendMessage, message, isValidAccounts } from '../helpers'\n\n/**\n * Contain functionality for managing multiple RPC clients (RpcClient stamp)\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client.RpcClients\n * @function\n * @rtype Stamp\n * @return {Object}\n */\nexport const RpcClients = stampit({\n  init () {\n    this.clients = new Map()\n  },\n  methods: {\n    /**\n     * Check if has client by id\n     * @function hasClient\n     * @instance\n     * @memberOf @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n     * @rtype (id: (String|Number)) => Boolean\n     * @param {(String|Number)} id Client ID\n     * @return {Boolean}\n     */\n    hasClient (id) {\n      return this.clients.has(id)\n    },\n    /**\n     * Add new client\n     * @function addClient\n     * @instance\n     * @rtype (id: (String|Number), connectionInfo: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} connectionData Object containing `connectionInfo` and `connection` objects\n     * @return {void}\n     */\n    addClient (id, connectionData) {\n      if (this.hasClient(id)) console.warn(`Wallet RpcClient with id ${id} already exist`)\n      this.clients.set(id, RpcClient({ id, ...connectionData }))\n    },\n    /**\n     * Get clien by id\n     * @function getClient\n     * @instance\n     * @rtype (id: (String|Number)) => Object\n     * @param {(String|Number)} id Client ID\n     * @return {Object} RpcClient\n     */\n    getClient (id) {\n      return this.clients.get(id)\n    },\n    /**\n     * Remove and disiconnect client by ID\n     * @function removeClient\n     * @instance\n     * @rtype (id: (String|Number), { forceConnectionClose: boolean = false }) => boolean\n     * @param {(String|Number)} id Client ID\n     * @param forceConnectionClose\n     * @return {Boolean}\n     */\n    removeClient (id, { forceConnectionClose = false } = {}) {\n      if (!this.hasClient(id)) throw new Error(`Wallet RpcClient with id ${id} do not exist`)\n      this.clients.get(id).disconnect(forceConnectionClose)\n      this.clients.delete(id)\n      return true\n    },\n    /**\n     * Update client info by id\n     * @function updateClientInfo\n     * @instance\n     * @rtype (id: (String|Number), info: Object) => void\n     * @param {(String|Number)} id Client ID\n     * @param {Object} info Info to update (will be merged with current info object)\n     * @return {void}\n     */\n    updateClientInfo (id, info) {\n      const client = this.getClient(id)\n      client.info = { ...client.info, ...info }\n      this.clients.set(id, client)\n    },\n    /**\n     * Send notification to all client passing condition\n     * @function sendNotificationByCondition\n     * @instance\n     * @rtype (msg: Object, condition: Function) => void\n     * @param {Object} msg Msg object\n     * @param {Function} condition Condition function of (client: RpcClient) => Boolean\n     * @param transformMessage\n     * @return {void}\n     */\n    sendNotificationByCondition (msg, condition, transformMessage) {\n      if (typeof condition !== 'function') throw new Error('Condition argument must be a function which return boolean')\n      const clients = Array.from(\n        this.clients.values()\n      )\n        .filter(condition)\n      clients.forEach(client => client.sendMessage(typeof transformMessage === 'function' ? transformMessage(client, msg) : msg, true))\n    },\n    /**\n     * Call provided function for each rpc client which by condition\n     * @function operationByCondition\n     * @instance\n     * @rtype (condition: Function, operation: Function) => void\n     * @param {Function} condition Condition function of (client: RpcClient) => Boolean\n     * @param {Function} operation Operation function of (client: RpcClient) => void\n     * @return {void}\n     */\n    operationByCondition (condition, operation) {\n      if (typeof condition !== 'function') throw new Error('Condition argument must be a function which return boolean')\n      if (typeof operation !== 'function') throw new Error('Operation argument must be a function which return boolean')\n      Array\n        .from(this.clients.values())\n        .filter(condition)\n        .forEach(operation)\n    }\n  }\n})\n\n/**\n * Contain functionality for using RPC conection\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/rpc-client\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String} param.id Client id\n * @param {String} param.name Client name\n * @param {Object} param.connection Connection object\n * @param {Function[]} param.handlers Arrays with two function for handling messages ([ onMessage: Function, onDisconnect: Function])\n * @return {Object}\n */\nexport const RpcClient = stampit({\n  init ({ id, name, networkId, icons, connection, handlers: [onMessage, onDisconnect] }) {\n    this.id = id\n    this.connection = connection\n    this.info = { name, networkId, icons }\n    // {\n    //    [msg.id]: { resolve, reject }\n    // }\n    this.callbacks = {}\n    // {\n    //    [id]: { accept, deny }\n    // }\n    this.actions = {}\n    // ['connected', 'current']\n    this.addressSubscription = []\n    // {\n    //    connected: { [pub]: {...meta} },\n    //    current: { [pub]: {...meta} }\n    // }\n    this.accounts = {}\n\n    this.sendMessage = sendMessage(this.connection)\n    const disconnect = (aepp, connection) => {\n      this.disconnect(true)\n      typeof onDisconnect === 'function' && onDisconnect(connection, this)\n    }\n    connection.connect(receive(onMessage), disconnect)\n  },\n  propertyDescriptors: {\n    currentAccount: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.isHasAccounts()\n          ? Object.keys(this.accounts.current)[0]\n          : undefined\n      }\n    },\n    addresses: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.isHasAccounts()\n          ? [...Object.keys(this.accounts.current), ...Object.keys(this.accounts.connected)]\n          : []\n      }\n    },\n    origin: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return this.connection\n      }\n    }\n  },\n  methods: {\n    isHasAccounts () {\n      return typeof this.accounts === 'object' &&\n        typeof this.accounts.connected === 'object' &&\n        typeof this.accounts.current === 'object'\n    },\n    isSubscribed () {\n      return this.addressSubscription.length && this.isHasAccounts()\n    },\n    /**\n     * Check if aepp has access to account\n     * @function hasAccessToAccount\n     * @instance\n     * @rtype (address: String) => Boolean\n     * @param {String} address Account address\n     * @return {Boolean} is connected\n     */\n    hasAccessToAccount (address) {\n      return !!address && this.addresses.find(a => a === address)\n    },\n    /**\n     * Check if is connected\n     * @function isConnected\n     * @instance\n     * @rtype () => Boolean\n     * @return {Boolean} is connected\n     */\n    isConnected () {\n      return this.connection.isConnected() && this.info.status === RPC_STATUS.CONNECTED\n    },\n    /**\n     * Get selected account\n     * @function getCurrentAccount\n     * @instance\n     * @rtype ({ onAccount } = {}) => String\n     * @param {Object} options Options\n     * @return {String}\n     */\n    getCurrentAccount ({ onAccount } = {}) {\n      return onAccount || Object.keys(this.accounts.current)[0]\n    },\n    /**\n     * Disconnect\n     * @function disconnect\n     * @instance\n     * @rtype () => void\n     * @return {void}\n     */\n    disconnect (forceConnectionClose = false) {\n      this.info.status = RPC_STATUS.DISCONNECTED\n      this.addressSubscription = []\n      this.accounts = {}\n      forceConnectionClose || this.connection.disconnect()\n    },\n    /**\n     * Update accounts and sent `update.address` notification to AEPP\n     * @param {{ current: Object, connected: Object }} accounts Object with current and connected accounts\n     * @param {{ forceNotification: Boolean }} [options={ forceNotification: false }] Don not sent update notification to AEPP\n     */\n    setAccounts (accounts, { forceNotification = false } = {}) {\n      if (!isValidAccounts(accounts)) {\n        throw new Error('Invalid accounts object. Should be object like: `{ connected: {}, selected: {} }`')\n      }\n      this.accounts = accounts\n      if (!forceNotification) {\n        // Sent notification about account updates\n        this.sendMessage(message(METHODS.wallet.updateAddress, this.accounts), true)\n      }\n    },\n    /**\n     * Update subscription\n     * @function updateSubscription\n     * @instance\n     * @rtype (type: String, value: String) => void\n     * @param {String} type Subscription type\n     * @param {String} value Subscription value\n     * @return {String[]}\n     */\n    updateSubscription (type, value) {\n      if (type === SUBSCRIPTION_TYPES.subscribe && !this.addressSubscription.includes(value)) {\n        this.addressSubscription.push(value)\n      }\n      if (type === SUBSCRIPTION_TYPES.unsubscribe && this.addressSubscription.includes(value)) {\n        this.addressSubscription = this.addressSubscription.filter(s => s !== value)\n      }\n      return this.addressSubscription\n    },\n    /**\n     * Add new action to actions\n     * @function addAction\n     * @instance\n     * @rtype (action: Object, [r: Function, j: Function]) => Object\n     * @param {Object} action Action object\n     * @param {Function[]} resolvers Array with two function [resolve, reject] action\n     * @return {Object}\n     */\n    addAction (action, [r, j]) {\n      const removeAction = ((ins) => (id) => delete ins[id])(this.actions)\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, action.id)) throw new Error('Action for this request already exist')\n      this.actions[action.id] = {\n        ...action,\n        accept (...args) {\n          removeAction(action.id)\n          r(...args)\n        },\n        deny (...args) {\n          removeAction(action.id)\n          j(...args)\n        }\n      }\n      return this.actions[action.id]\n    },\n    /**\n     * Make a request\n     * @function request\n     * @instance\n     * @rtype (name: String, params: Object) => Promise\n     * @param {String} name Method name\n     * @param {Object} params Method params\n     * @return {Promise} Promise which will be resolved after receiving response message\n     */\n    request (name, params) {\n      const msgId = this.sendMessage(message(name, params))\n      if (Object.prototype.hasOwnProperty.call(this.callbacks, msgId)) throw new Error('Callback Already exist')\n      return new Promise((resolve, reject) => {\n        this.callbacks[msgId] = { resolve, reject }\n      })\n    },\n    /**\n     * Process response message\n     * @function processResponse\n     * @instance\n     * @rtype (msg: Object, transformResult: Function) => void\n     * @param {Object} msg Message object\n     * @param {Function=} transformResult Optional parser function for message\n     * @return {void}\n     */\n    processResponse ({ id, error, result }, transformResult) {\n      if (!this.callbacks[id]) throw new Error(`Can't find callback for this messageId ${id}`)\n      if (result) {\n        this.callbacks[id].resolve(...typeof transformResult === 'function'\n          ? transformResult({ id, result })\n          : [result])\n      } else {\n        this.callbacks[id].reject(error)\n      }\n      delete this.callbacks[id]\n    }\n  }\n})\n","/**\n * RPC handler for AEPP side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @export AeppRpc\n * @example import ContentScriptBridge from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc'\n */\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nimport Ae from '../../../ae'\nimport { RpcClient } from './rpc-clients'\nimport { getHandler, message, voidFn } from '../helpers'\nimport { METHODS, RPC_STATUS, VERSION } from '../schema'\n\nconst NOTIFICATIONS = {\n  [METHODS.wallet.updateAddress]: (instance) =>\n    ({ params }) => {\n      instance.rpcClient.accounts = params\n      instance.onAddressChange(params)\n    },\n  [METHODS.updateNetwork]: (instance) =>\n    (msg) => {\n      instance.rpcClient.info.networkId = msg.params.networkId\n      instance.onNetworkChange(msg.params)\n    },\n  [METHODS.closeConnection]: (instance) =>\n    (msg) => {\n      instance.disconnectWallet()\n      instance.onDisconnect(msg.params)\n    }\n}\n\nconst RESPONSES = {\n  [METHODS.aepp.address]: (instance) =>\n    (msg) => instance.rpcClient.processResponse(msg),\n  [METHODS.aepp.connect]: (instance) =>\n    (msg) => {\n      if (msg.result) instance.rpcClient.info.status = RPC_STATUS.CONNECTED\n      instance.rpcClient.processResponse(msg)\n    },\n  [METHODS.aepp.subscribeAddress]: (instance) =>\n    (msg) => {\n      if (msg.result) {\n        msg.result.address && (instance.rpcClient.accounts = msg.result.address)\n        msg.result.subscription && (instance.rpcClient.addressSubscription = msg.result.subscription)\n      }\n\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result])\n    },\n  [METHODS.aepp.sign]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signedTransaction || result.transactionHash])\n    },\n  [METHODS.aepp.signMessage]: (instance) =>\n    (msg) => {\n      instance.rpcClient.processResponse(msg, ({ id, result }) => [result.signature])\n    }\n}\n\nconst REQUESTS = {}\n\nconst handleMessage = (instance) => async (msg) => {\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, { debug: instance.debug })(instance)(msg)\n  } else if (Object.prototype.hasOwnProperty.call(instance.rpcClient.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, { debug: instance.debug })(instance)(msg)\n  } else {\n    return getHandler(REQUESTS, msg, { debug: instance.debug })(instance)(msg)\n  }\n}\n\n/**\n * Contain functionality for wallet interaction and connect it to sdk\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/aepp-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Aepp name\n * @param {Function} onAddressChange Call-back function for update address event\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @param {Function} onNetworkChange Call-back function for update network event\n * @param {Object} connection Wallet connection object\n * @return {Object}\n */\nexport const AeppRpc = Ae.compose({\n  async init ({ name, onAddressChange = voidFn, onDisconnect = voidFn, onNetworkChange = voidFn, connection, forceValidation = false, debug = false }) {\n    const eventsHandlers = ['onDisconnect', 'onAddressChange', 'onNetworkChange']\n    this.connection = connection\n    this.name = name\n    this.debug = debug\n\n    if (connection) {\n      // Init RPCClient\n      await this.connectToWallet(connection)\n    }\n    // Event callbacks\n    this.onDisconnect = onDisconnect\n    this.onAddressChange = onAddressChange\n    this.onNetworkChange = onNetworkChange\n    // validation\n    eventsHandlers.forEach(event => {\n      if (!forceValidation && typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n  },\n  deepProps: { Ae: { defaults: { walletBroadcast: true } } },\n  methods: {\n    sign () {\n    },\n    addresses () {\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      return [this.rpcClient.currentAccount, ...Object.keys(this.rpcClient.accounts.connected)]\n    },\n    /**\n     * Connect to wallet\n     * @function connectToWallet\n     * @instance\n     * @rtype (connection: Object) => void\n     * @param {Object} connection Wallet connection object\n     * @return {void}\n     */\n    async connectToWallet (connection) {\n      if (this.rpcClient && this.rpcClient.isConnected()) throw new Error('You are already connected to wallet ' + this.rpcClient)\n      this.rpcClient = RpcClient({\n        connection,\n        networkId: this.getNetworkId({ force: true }),\n        ...connection.connectionInfo,\n        id: uuid(),\n        handlers: [handleMessage(this), this.onDisconnect]\n      })\n      return this.sendConnectRequest()\n    },\n    /**\n     * Disconnect from wallet\n     * @function disconnectWallet\n     * @instance\n     * @rtype (force: Boolean = false) => void\n     * @param {Boolean} sendDisconnect=false Force sending close connection message\n     * @return {void}\n     */\n    async disconnectWallet (sendDisconnect = true) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      sendDisconnect && this.rpcClient.sendMessage(message(METHODS.closeConnection, { reason: 'bye' }), true)\n      this.rpcClient.disconnect()\n      this.rpcClient = null\n    },\n    async address ({ onAccount } = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      const current = this.rpcClient.currentAccount\n      if (!current) throw new Error('You do not subscribed for accounts.')\n      if (onAccount && !this.rpcClient.hasAccessToAccount(onAccount)) throw new Error(`You are not have access to account ${onAccount}`)\n      return onAccount || current\n    },\n    /**\n     * Ask address from wallet\n     * @function askAddresses\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Address from wallet\n     */\n    async askAddresses () {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      return this.rpcClient.request(METHODS.aepp.address)\n    },\n    /**\n     * Subscribe for addresses from wallet\n     * @function subscribeAddress\n     * @instance\n     * @rtype (type: String, value: String) => Promise\n     * @param {String} type Type of subscription can be one of ['current'(just for selected account updates), 'connected(all accounts)']\n     * @param {String} value Subscription action('subscribe'|'unsubscribe')\n     * @return {Promise} Address from wallet\n     */\n    async subscribeAddress (type, value) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      return this.rpcClient.request(METHODS.aepp.subscribeAddress, { type, value })\n    },\n    /**\n     * Overwriting of `signTransaction` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signTransaction\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signTransaction (tx, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) throw new Error(`You are not have access to account ${opt.onAccount}`)\n      return this.rpcClient.request(METHODS.aepp.sign, { ...opt, tx, returnSigned: true, networkId: this.getNetworkId() })\n    },\n    /**\n     * Overwriting of `signMessage` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * @function signMessage\n     * @instance\n     * @rtype (msg: String, options = {}) => Promise\n     * @return {Promise<String>} Signed transaction\n     */\n    async signMessage (msg, opt = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (opt.onAccount && !this.rpcClient.hasAccessToAccount(opt.onAccount)) throw new Error(`You are not have access to account ${opt.onAccount}`)\n      return this.rpcClient.request(METHODS.aepp.signMessage, { ...opt, message: msg })\n    },\n    /**\n     * Send connection request to wallet\n     * @function sendConnectRequest\n     * @instance\n     * @rtype () => Promise\n     * @return {Promise} Connection response\n     */\n    async sendConnectRequest () {\n      return this.rpcClient.request(\n        METHODS.aepp.connect, {\n          name: this.name,\n          version: VERSION,\n          networkId: this.getNetworkId({ force: true })\n        }\n      )\n    },\n    /**\n     * Overwriting of `send` AE method\n     * All sdk API which use it will be send notification to wallet and wait for callBack\n     * This method will sign, broadcast and wait until transaction will be accepted using rpc communication with wallet\n     * @function send\n     * @instance\n     * @rtype (tx: String, options = {}) => Promise\n     * @param {String} tx\n     * @param {Object} [options={}]\n     * @param {Object} [options.walletBroadcast=true]\n     * @return {Promise<Object>} Transaction broadcast result\n     */\n    async send (tx, options = {}) {\n      if (!this.rpcClient || !this.rpcClient.isConnected()) throw new Error('You are not connected to Wallet')\n      if (!this.rpcClient.currentAccount) throw new Error('You do not subscribed for account.')\n      if (options.onAccount && !this.rpcClient.hasAccessToAccount(options.onAccount)) throw new Error(`You are not have access to account ${options.onAccount}`)\n      const opt = R.merge(this.Ae.defaults, options)\n      if (!opt.walletBroadcast) {\n        const signed = await this.signTransaction(tx, { onAccount: opt.onAccount })\n        return this.sendTransaction(signed, opt)\n      }\n      return this.rpcClient.request(METHODS.aepp.sign, { onAccount: opt.onAccount, tx, returnSigned: false, networkId: this.getNetworkId() })\n    }\n  }\n})\n\nexport default AeppRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check, assertedType } from '../utils/crypto'\nimport { pause } from '../utils/other'\nimport { oracleQueryId } from '../tx/builder/helpers'\nimport { unpackTx } from '../tx/builder'\nimport { ORACLE_TTL, QUERY_FEE, QUERY_TTL, RESPONSE_TTL } from '../tx/builder/schema'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    pollQueries: this.pollForQueries.bind(this, oracleId),\n    postQuery: this.postQueryToOracle.bind(this, oracleId),\n    respondToQuery: this.respondToQuery.bind(this, oracleId),\n    extendOracle: this.extendOracleTtl.bind(this, oracleId),\n    getQuery: this.getQueryObject.bind(this, oracleId)\n  }\n}\n\n/**\n * Poll for oracle queries\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {Function} onQuery OnQuery callback\n * @param {Object} [options] Options object\n * @param {Number} [options.interval] Poll interval(default: 5000)\n * @return {Function} stopPolling - Stop polling function\n */\nfunction pollForQueries (oracleId, onQuery, { interval = 5000 } = {}) {\n  const knownQueryIds = new Set()\n  const checkNewQueries = async () => {\n    const queries = ((await this.getOracleQueries(oracleId)).oracleQueries || [])\n      .filter(({ id }) => !knownQueryIds.has(id))\n    queries.forEach(({ id }) => knownQueryIds.add(id))\n    if (queries.length) onQuery(queries)\n  }\n\n  checkNewQueries()\n  const intervalId = setInterval(checkNewQueries, interval)\n  // TODO: Return just a callback in the next major release\n  return Promise.resolve(() => clearInterval(intervalId))\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  const q = await this.getOracleQuery(oracleId, queryId)\n  return {\n    ...q,\n    decodedQuery: decodeBase64Check(q.query.slice(3)).toString(),\n    decodedResponse: decodeBase64Check(q.response.slice(3)).toString(),\n    respond: this.respondToQuery.bind(this, oracleId, queryId),\n    pollForResponse: this.pollForQueryResponse.bind(this, oracleId, queryId),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  for (let i = 0; i < attempts; i++) {\n    if (i) await pause(interval)\n    const { response } = await this.getOracleQuery(oracleId, queryId)\n    const responseBuffer = decodeBase64Check(assertedType(response, 'or'))\n    if (responseBuffer.length) {\n      return { response, decode: () => responseBuffer } // TODO: Return just responseBuffer\n    }\n  }\n  throw Error(`Giving up after ${(attempts - 1) * interval}ms`)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number|String} [options.fee] fee Transaction fee\n * @param {Number|String} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...await this.send(oracleRegisterTx, opt),\n    ...await this.getOracleObject(`ok_${accountId.slice(3)}`)\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  const queryId = oracleQueryId(senderId, unpackTx(oracleRegisterTx).tx.nonce, oracleId)\n  return {\n    ...await this.send(oracleRegisterTx, opt),\n    ...await this.getQueryObject(oracleId, queryId)\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...await this.send(oracleExtendTx, opt),\n    ...await this.getOracleObject(oracleId)\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...await this.send(oracleRespondTx, opt),\n    ...await this.getOracleObject(oracleId)\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    pollForQueries,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        queryFee: QUERY_FEE,\n        oracleTtl: ORACLE_TTL,\n        queryTtl: QUERY_TTL,\n        responseTtl: RESPONSE_TTL\n      }\n    }\n  }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI, ContractWithCompiler as Contract } from './contract'\nimport AeppRpc from '../utils/aepp-wallet-communication/rpc/aepp-rpc'\nimport Chain from '../chain/node'\nimport Tx from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nexport const Aepp = Ae.compose(ContractAPI, Aens, Oracle, GeneralizeAccount, Rpc)\nexport const RpcAepp = Ae.compose(Tx, Oracle, Contract, Aens, Chain, AeppRpc)\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport { v4 as uuid } from 'uuid'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/**\n * RPC handler for WAELLET side\n *\n * @module @aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @export WalletRpc\n * @example import WalletRpc from '@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc'\n */\nimport Ae from '../../../ae'\nimport Accounts from '../../../accounts'\nimport Selector from '../../../account/selector'\nimport TxObject from '../../../tx/tx-object'\n\nimport { RpcClients } from './rpc-clients'\nimport { getBrowserAPI, getHandler, isValidAccounts, message, resolveOnAccount, sendResponseMessage } from '../helpers'\nimport { ERRORS, METHODS, RPC_STATUS, VERSION, WALLET_TYPE } from '../schema'\nimport { v4 as uuid } from 'uuid'\n\nconst rpcClients = RpcClients()\n\nconst NOTIFICATIONS = {\n  [METHODS.closeConnection]: (instance, { client }) =>\n    async (msg) => {\n      client.disconnect(true)\n      instance.onDisconnect(msg.params, client)\n    }\n}\n\nconst RESPONSES = {}\n\nconst REQUESTS = {\n  // Store client info and prepare two fn for each client `connect` and `denyConnection`\n  // which automatically prepare and send response for that client\n  [METHODS.aepp.connect] (callInstance, instance, client, { name, networkId, version, icons }) {\n    // Check if protocol and network is compatible with wallet\n    if (version !== VERSION) return { error: ERRORS.unsupportedProtocol() }\n\n    // Store new AEPP and wait for connection approve\n    rpcClients.updateClientInfo(client.id, {\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_APPROVE,\n      name,\n      networkId,\n      icons,\n      version\n    })\n\n    // Call onConnection callBack to notice Wallet about new AEPP\n    return callInstance(\n      'onConnection',\n      { name, networkId, version },\n      () => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTED })\n        return { result: instance.getWalletInfo() }\n      },\n      (error) => {\n        rpcClients.updateClientInfo(client.id, { status: RPC_STATUS.CONNECTION_REJECTED })\n        return { error: ERRORS.connectionDeny(error) }\n      }\n    )\n  },\n  [METHODS.aepp.subscribeAddress] (callInstance, instance, client, { type, value }) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n\n    return callInstance(\n      'onSubscription',\n      { type, value },\n      async ({ accounts } = {}) => {\n        try {\n          const clientAccounts = accounts || instance.getAccounts()\n          if (!isValidAccounts(clientAccounts)) throw new Error('Invalid provided accounts object')\n          const subscription = client.updateSubscription(type, value)\n          client.setAccounts(clientAccounts, { forceNotification: true })\n          return {\n            result: {\n              subscription,\n              address: clientAccounts\n            }\n          }\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.address] (callInstance, instance, client) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    if (!client.isSubscribed()) return { error: ERRORS.notAuthorize() }\n\n    return callInstance(\n      'onAskAccounts',\n      {},\n      ({ accounts } = {}) => ({ result: accounts || [...Object.keys(client.accounts.current), ...Object.keys(client.accounts.connected)] }),\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.sign] (callInstance, instance, client, { tx, onAccount, networkId, returnSigned = false }) {\n    const address = onAccount || client.currentAccount\n    // Update client with new networkId\n    networkId && rpcClients.updateClientInfo(client.id, { networkId })\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    // Account permission check\n    if (!client.hasAccessToAccount(address)) return { error: ERRORS.permissionDeny({ account: address }) }\n    // NetworkId check\n    if (!networkId || networkId !== instance.getNetworkId()) return { error: ERRORS.unsupportedNetwork() }\n\n    return callInstance(\n      'onSign',\n      { tx, returnSigned, onAccount: address, txObject: TxObject.fromString(tx) },\n      async (rawTx, opt = {}) => {\n        let onAcc\n        try {\n          onAcc = resolveOnAccount(instance.addresses(), address, opt)\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n        try {\n          return {\n            result: {\n              ...returnSigned\n                ? { signedTransaction: await instance.signTransaction(rawTx || tx, { onAccount: onAcc }) }\n                : { transactionHash: await instance.send(rawTx || tx, { onAccount: onAcc, verify: false }) }\n            }\n          }\n        } catch (e) {\n          if (!returnSigned) {\n            // Validate transaction\n            const validationResult = await instance.unpackAndVerify(rawTx || tx)\n            if (validationResult.validation.length) return { error: ERRORS.invalidTransaction(validationResult) }\n            // Send broadcast failed error to aepp\n            return { error: ERRORS.broadcastFailde(e.message) }\n          }\n          throw e\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  },\n  [METHODS.aepp.signMessage] (callInstance, instance, client, { message, onAccount }) {\n    // Authorization check\n    if (!client.isConnected()) return { error: ERRORS.notAuthorize() }\n    const address = onAccount || client.currentAccount\n    if (!client.hasAccessToAccount(address)) return { error: ERRORS.permissionDeny({ account: address }) }\n\n    return callInstance(\n      'onMessageSign',\n      { message, onAccount: address },\n      async (opt = {}) => {\n        try {\n          const onAcc = resolveOnAccount(instance.addresses(), address, opt)\n          return {\n            result: {\n              signature: await instance.signMessage(message, {\n                onAccount: onAcc,\n                returnHex: true\n              })\n            }\n          }\n        } catch (e) {\n          console.error(e)\n          return { error: ERRORS.internalError({ msg: e.message }) }\n        }\n      },\n      (error) => ({ error: ERRORS.rejectedByUser(error) })\n    )\n  }\n}\n\nconst handleMessage = (instance, id) => async (msg, origin) => {\n  const client = rpcClients.getClient(id)\n  if (!msg.id) {\n    return getHandler(NOTIFICATIONS, msg, { debug: instance.debug })(instance, { client })(msg, origin)\n  }\n  if (Object.prototype.hasOwnProperty.call(client.callbacks, msg.id)) {\n    return getHandler(RESPONSES, msg, { debug: instance.debug })(instance, { client })(msg, origin)\n  } else {\n    const { id, method } = msg\n    const callInstance = (methodName, params, accept, deny) => () => new Promise(resolve => {\n      instance[methodName](\n        client,\n        client.addAction({ id, method, params }, [\n          (...args) => resolve(accept(...args)), (...args) => resolve(deny(...args))\n        ]),\n        origin\n      )\n    })\n    // TODO make one structure for handler functions\n    const errorObjectOrHandler = getHandler(REQUESTS, msg, { debug: instance.debug })(callInstance, instance, client, msg.params)\n    const response = typeof errorObjectOrHandler === 'function' ? await errorObjectOrHandler() : errorObjectOrHandler\n    sendResponseMessage(client)(id, method, response)\n  }\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @alias module:@aeternity/aepp-sdk/es/utils/aepp-wallet-communication/rpc/wallet-rpc\n * @function\n * @rtype Stamp\n * @param {Object} param Init params object\n * @param {String=} [param.name] Wallet name\n * @param {Function} onConnection Call-back function for incoming AEPP connection (Second argument contain function for accept/deny request)\n * @param {Function} onSubscription Call-back function for incoming AEPP account subscription (Second argument contain function for accept/deny request)\n * @param {Function} onSign Call-back function for incoming AEPP sign request (Second argument contain function for accept/deny request)\n * @param {Function} onAskAccounts Call-back function for incoming AEPP get address request (Second argument contain function for accept/deny request)\n * @param {Function} onMessageSign Call-back function for incoming AEPP sign message request (Second argument contain function for accept/deny request)\n * @param {Function} onDisconnect Call-back function for disconnect event\n * @return {Object}\n */\nexport const WalletRpc = Ae.compose(Accounts, Selector, {\n  init ({ name, onConnection, onSubscription, onSign, onDisconnect, onAskAccounts, onMessageSign, forceValidation = false, debug = false } = {}) {\n    this.debug = debug\n    const eventsHandlers = ['onConnection', 'onSubscription', 'onSign', 'onDisconnect', 'onMessageSign']\n    // CallBacks for events\n    this.onConnection = onConnection\n    this.onSubscription = onSubscription\n    this.onSign = onSign\n    this.onDisconnect = onDisconnect\n    this.onAskAccounts = onAskAccounts\n    this.onMessageSign = onMessageSign\n\n    eventsHandlers.forEach(event => {\n      if (!forceValidation && typeof this[event] !== 'function') throw new Error(`Call-back for ${event} must be an function!`)\n    })\n    //\n    this.name = name\n    this.id = uuid()\n\n    const _selectAccount = this.selectAccount.bind(this)\n    const _addAccount = this.addAccount.bind(this)\n    const _selectNode = this.selectNode.bind(this)\n\n    // Overwrite AE methods\n    this.selectAccount = (address, { condition = () => true } = {}) => {\n      _selectAccount(address)\n      rpcClients.operationByCondition(\n        (client) =>\n          client.isConnected() &&\n          client.isSubscribed() &&\n          client.hasAccessToAccount(address) &&\n          condition(client),\n        (client) =>\n          client.setAccounts({\n            current: { [address]: {} },\n            connected: {\n              ...client.accounts.current,\n              ...Object.entries(client.accounts.connected)\n                .reduce((acc, [k, v]) => ({ ...acc, ...k !== address ? { [k]: v } : {} }), {})\n            }\n          })\n      )\n    }\n    this.addAccount = async (account, { select, meta = {}, condition = () => true } = {}) => {\n      await _addAccount(account, { select })\n      const address = await account.address()\n      // Send notification 'update.address' to all Aepp which are subscribed for connected accounts\n      rpcClients.operationByCondition(\n        (client) =>\n          client.isConnected() &&\n          client.isSubscribed() &&\n          condition(client),\n        (client) =>\n          client.setAccounts({\n            current: { ...select ? { [address]: meta } : client.accounts.current },\n            connected: {\n              ...select ? client.accounts.current : { [address]: meta },\n              ...client.accounts.connected\n            }\n          })\n      )\n    }\n    this.selectNode = (name) => {\n      _selectNode(name)\n      // Send notification 'update.network' to all Aepp which connected\n      rpcClients.sendNotificationByCondition(\n        message(METHODS.updateNetwork, { networkId: this.getNetworkId() }),\n        (client) => client.isConnected()\n      )\n    }\n  },\n  methods: {\n    /**\n     * Get RpcClients object which contain all connected AEPPS\n     * @function getClients\n     * @instance\n     * @rtype () => Object\n     * @return {Object}\n     */\n    getClients () {\n      return rpcClients\n    },\n    /**\n     * Remove specific RpcClient by ID\n     * @function removeRpcClient\n     * @instance\n     * @rtype (id: string) => Boolean\n     * @param {String} id Client ID\n     * @param {Object} [opt = {}]\n     * @return {Object}\n     */\n    removeRpcClient (id, opt = { forceConnectionClose: false }) {\n      return rpcClients.removeClient(id, opt)\n    },\n    /**\n     * Add new AEPP connection\n     * @function addRpcClient\n     * @instance\n     * @rtype (clientConnection: Object) => Object\n     * @param {Object} clientConnection AEPP connection object\n     * @return {String} Client ID\n     */\n    addRpcClient (clientConnection) {\n      // @TODO  detect if aepp has some history based on origin????: if yes use this instance for connection\n      const id = uuid()\n      rpcClients.addClient(\n        id,\n        {\n          id,\n          info: { status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST },\n          connection: clientConnection,\n          handlers: [handleMessage(this, id), this.onDisconnect]\n        }\n      )\n      return id\n    },\n    /**\n     * Share wallet info\n     * Send shareWalletInfo message to notify AEPP about wallet\n     * @function shareWalletInfo\n     * @instance\n     * @rtype (postFn: Function) => void\n     * @param {Function} postFn Send message function like `(msg) => void`\n     * @return {void}\n     */\n    shareWalletInfo (postFn) {\n      postFn({\n        jsonrpc: '2.0',\n        ...message(METHODS.wallet.readyToConnect, { ...this.getWalletInfo() })\n      })\n    },\n    /**\n     * Get Wallet info object\n     * @function getWalletInfo\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with wallet information(id, name, network, ...)\n     */\n    getWalletInfo () {\n      const runtime = getBrowserAPI(true).runtime\n      return {\n        id: runtime && runtime.id ? runtime.id : this.id,\n        name: this.name,\n        networkId: this.getNetworkId(),\n        origin: window.location.origin,\n        type: runtime && runtime.id ? WALLET_TYPE.extension : WALLET_TYPE.window\n      }\n    },\n    /**\n     * Get Wallet accounts\n     * @function getAccounts\n     * @instance\n     * @rtype () => Object\n     * @return {Object} Object with accounts information({ connected: Object, current: Object })\n     */\n    getAccounts () {\n      return {\n        current: this.Selector.address ? { [this.Selector.address]: {} } : {},\n        connected: this.addresses()\n          .filter(a => a !== this.Selector.address)\n          .reduce((acc, a) => ({ ...acc, [a]: {} }), {})\n      }\n    }\n  }\n})\n\nexport default WalletRpc\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport * as R from 'ramda'\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport Tx from '../tx/tx'\nimport TxBase from '../tx'\nimport Contract from './contract'\nimport GeneralizeAccount from '../contract/ga'\nimport { WalletRpc } from '../utils/aepp-wallet-communication/rpc/wallet-rpc'\nimport Oracle from './oracle'\nimport Aens from './aens'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(TxBase.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nexport const Wallet = Ae.compose(Accounts, Chain, Tx, Contract, GeneralizeAccount, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport const RpcWallet = Ae.compose(WalletRpc, Tx, Contract, Oracle, Aens, GeneralizeAccount, Chain)\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport JsonBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection, awaitingReconnection, channelOpen } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nexport const options = new WeakMap()\nexport const status = new WeakMap()\nexport const state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nexport const eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nexport const channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\nexport const fsmId = new WeakMap()\n\nexport function emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nexport function changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nexport function changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nexport function send (channel, message) {\n  const { debug = false } = options.get(channel)\n  if (debug) console.log('Send message: ', message)\n  websockets.get(channel).send(JsonBig.stringify(message))\n}\n\nexport function enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JsonBig.parse(data)\n  const { debug = false } = options.get(channel)\n  if (debug) console.log('Receive message: ', message)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nexport function call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nexport function disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nexport async function initialize (channel, { url, ...channelOptions }) {\n  options.set(channel, channelOptions)\n  fsm.set(channel, {\n    handler: channelOptions.existingFsmId ? awaitingReconnection : awaitingConnection\n  })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n\n  const wsUrl = new URL(url)\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value))\n  wsUrl.searchParams.set('protocol', 'json-rpc')\n  changeStatus(channel, 'connecting')\n  const ws = new W3CWebSocket(wsUrl.toString())\n  await new Promise((resolve, reject) => Object.assign(ws, {\n    onerror: reject,\n    onopen: () => {\n      resolve()\n      changeStatus(channel, 'connected')\n      if (channelOptions.reconnectTx) {\n        enterState(channel, { handler: channelOpen })\n        setTimeout(async () => changeState(channel,\n          (await call(channel, 'channels.get.offchain_state', {})).signed_tx\n        ))\n      }\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  }))\n  websockets.set(channel, ws)\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  call,\n  send,\n  emit,\n  channelId,\n  disconnect,\n  fsmId\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (typeof result === 'string') {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n  return result\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state && state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      return { handler: awaitingConnection }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingReconnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      fsmId.set(channel, message.params.data.fsm_id)\n      changeState(channel, (await call(channel, 'channels.get.offchain_state', {})).signed_tx)\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    channelId.set(channel, message.params.channel_id)\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'fsm_up':\n          fsmId.set(channel, message.params.data.fsm_id)\n          return { handler: channelOpen }\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n        case 'shutdown':\n          return { handler: channelOpen }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingOffChainTx, state }\n    }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (typeof signedTx === 'string') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n      if (typeof signedTx === 'number') {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { error: signedTx } })\n        return { handler: awaitingUpdateConflict, state }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict, state }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    // state.resolve(message.params.data.tx)\n    return { handler: channelClosed, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { error: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { error: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx, { updates: message.params.data.updates }))\n    if (typeof signedTx === 'string') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    if (typeof signedTx === 'number') {\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { error: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractForceProgressUpdate (channel, message, state) {\n  if (message.method === 'channels.sign.force_progress_tx') {\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      state.sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.force_progress_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingForceProgressCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingForceProgressCompletion (channel, message, state) {\n  console.log('From force progress await completion ->', message)\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data)\n    }\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    state.resolve({ accepted: true, tx: message.params.data.tx })\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false })\n      return { handler: channelOpen }\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  if (!state) return { handler: channelClosed }\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state }\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx\n    return { handler: channelClosed, state }\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx)\n    return { handler: channelClosed }\n  }\n  return { handler: channelClosed, state }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport { buildTx, unpackTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  state as channelState,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect,\n  fsmId as channelFsmId\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Remove event listener function\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction off (event, callback) {\n  eventEmitters.get(this).removeListener(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get current round\n *\n * If round cannot be determined (for example when channel has not been opened)\n * it will return `null`.\n *\n * @return {Number}\n */\nfunction round () {\n  const state = channelState.get(this)\n  if (!state) {\n    return null\n  }\n  const { txType, tx } = unpackTx(channelState.get(this)).tx.encodedTx\n  switch (txType) {\n    case TX_TYPE.channelCreate:\n      return 1\n    case TX_TYPE.channelOffChain:\n    case TX_TYPE.channelWithdraw:\n    case TX_TYPE.channelDeposit:\n      return parseInt(tx.round, 10)\n    default:\n      return null\n  }\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Get channel's fsm id\n *\n * @return {String}\n */\nfunction fsmId () {\n  return channelFsmId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @param {Array<String>} metadata\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign, metadata) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount, meta: metadata }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger a force progress contract call\n * This call is going on-chain\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Number} [options.gasPrice=1000000000] - Gas price\n * @param {Number} [options.gas=1000000] - Gas limit\n * @param {Function} sign - Function which verifies and signs contract force progress transaction\n * @param {{ onOnChainTxL: Function }} callbacks\n * @return {Promise<Object>}\n * @example channel.forceProgress({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1,\n *   gasPrice: 1000005554\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract force progress call successful')\n *   } else {\n *     console.log('Contract force progress call has been rejected')\n *   }\n * })\n */\nfunction forceProgress ({ amount, callData, contract, abiVersion, gas = 1000000, gasPrice = 1000000000, nonce }, sign, { onOnChainTx } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.force_progress',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion,\n            gas_price: gasPrice,\n            gas\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractForceProgressUpdate,\n          state: { resolve, reject, sign, onOnChainTx }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  const doSend = (channel) => send(channel, {\n    jsonrpc: '2.0',\n    method: 'channels.message',\n    params: { info, to: recipient }\n  })\n  if (this.status() === 'connecting') {\n    const onStatusChanged = (status) => {\n      if (status !== 'connecting') {\n        // For some reason we can't immediately send a message when connection is\n        // established. Thus we wait 500ms which seems to work.\n        setTimeout(() => doSend(this), 500)\n        this.off('statusChanged', onStatusChanged)\n      }\n    }\n    this.on('statusChanged', onStatusChanged)\n  } else {\n    doSend(this)\n  }\n}\n\nasync function reconnect (options, txParams) {\n  const { sign } = options\n\n  return Channel({\n    ...options,\n    reconnectTx: await sign('reconnect', buildTx(txParams, TX_TYPE.channelReconnect).tx)\n  })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Number} [options.debug=false] - Log websocket communication\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    off,\n    status,\n    state,\n    round,\n    id,\n    fsmId,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls,\n    forceProgress\n  },\n  statics: {\n    reconnect\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\nimport GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, Transaction, Aens, Contract, Oracle, GeneralizeAccount, {\n  init () {},\n  props: { process: {} }\n})\nexport default Universal\n"],"sourceRoot":""}